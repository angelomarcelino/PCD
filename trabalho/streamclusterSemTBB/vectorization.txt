streamcluster.cpp: In function ‘void outcenterIDs(Points*, long int*, char*)’:
streamcluster.cpp:915:36: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 3 has type ‘long int’ [-Wformat=]
    fprintf(fp, "%u\n", centerIDs[i]);
                        ~~~~~~~~~~~~^
streamcluster.cpp: In function ‘void streamCluster(PStream*, long int, long int, int, long int, long int, char*)’:
streamcluster.cpp:963:46: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
   fprintf(stderr, "read %d points\n", numRead);
                                              ^
streamcluster.cpp:862:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:863:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:863:10: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:863:10: note: ===vect_slp_analyze_bb===
streamcluster.cpp:866:15: note: === vect_analyze_data_refs ===
streamcluster.cpp:866:15: note: got vectype for stmt: _1 = this_4(D)->n;
vector(2) long int
streamcluster.cpp:866:15: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:866:15: note: ===vect_slp_analyze_bb===
streamcluster.cpp:869:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:869:2: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:854
streamcluster.cpp:854:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:854:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:854:22: note: not vectorized: control flow in loop.
streamcluster.cpp:854:22: note: bad loop form.

Analyzing loop at streamcluster.cpp:854
streamcluster.cpp:854:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:854:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:854:22: note: === get_loop_niters ===
streamcluster.cpp:854:22: note: Symbolic number of iterations is (unsigned int) dim_20(D)
streamcluster.cpp:854:22: note: not vectorized: loop contains function calls or data references that cannot be analyzed
streamcluster.cpp:851:9: note: vectorized 0 loops in function.
streamcluster.cpp:851:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:853:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:853:27: note: got vectype for stmt: _31 = this_19(D)->n;
vector(2) long int
streamcluster.cpp:853:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:853:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:854:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:854:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:854:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:855:12: note: === vect_analyze_data_refs ===
streamcluster.cpp:855:12: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:855:12: note: ===vect_slp_analyze_bb===
streamcluster.cpp:854:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:854:22: note: got vectype for stmt: *_8 = _9;
vector(4) float
streamcluster.cpp:854:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:854:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:854:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:854:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:854:22: note: got vectype for stmt: pretmp_49 = this_19(D)->n;
vector(2) long int
streamcluster.cpp:854:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:854:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:853:27: note: got vectype for stmt: this_19(D)->n = _11;
vector(2) long int
streamcluster.cpp:853:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:853:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:860:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:860:10: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:860:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: this_4(D)->D.48134._vptr.PStream = &MEM[(void *)&_ZTV10FileStream + 16B];
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.171_1 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access stderr.171_1 = stderr;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access this_4(D)->D.48134._vptr.PStream = &MEM[(void *)&_ZTV10FileStream + 16B];
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:895:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:895:9: note: got vectype for stmt: _2 = this_4(D)->fp;
vector(2) long unsigned int
streamcluster.cpp:895:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:896:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:896:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:896:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:294:53: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:294:53: note: got vectype for stmt: _1 = this_6(D)->fp;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:294:53: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:885:55: note: === vect_analyze_data_refs ===
streamcluster.cpp:885:55: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:885:55: note: ===vect_slp_analyze_bb===
streamcluster.cpp:888:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:888:24: note: got vectype for stmt: _1 = this_3(D)->fp;
vector(2) long unsigned int
streamcluster.cpp:888:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:888:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:888:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:888:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:891:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:891:22: note: got vectype for stmt: _1 = this_3(D)->fp;
vector(2) long unsigned int
streamcluster.cpp:891:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:891:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:891:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:891:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:869:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:869:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:869:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:869:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:869:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: this_2(D)->D.48134._vptr.PStream = &MEM[(void *)&_ZTV10FileStream + 16B];
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.171_5 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access stderr.171_5 = stderr;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access this_2(D)->D.48134._vptr.PStream = &MEM[(void *)&_ZTV10FileStream + 16B];
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:895:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:895:9: note: got vectype for stmt: _6 = this_2(D)->fp;
vector(2) long unsigned int
streamcluster.cpp:895:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:896:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:896:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:896:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:896:2: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:75
streamcluster.cpp:75:15: note: ===== analyze_loop_nest =====
streamcluster.cpp:75:15: note: === vect_analyze_loop_form ===
streamcluster.cpp:75:15: note: not vectorized: unsupported outerloop form.
streamcluster.cpp:75:15: note: bad loop form.

Analyzing loop at streamcluster.cpp:75
streamcluster.cpp:75:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:75:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:75:22: note: not vectorized: control flow in loop.
streamcluster.cpp:75:22: note: bad loop form.
streamcluster.cpp:69:5: note: vectorized 0 loops in function.
streamcluster.cpp:69:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:69:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:76:18: note: === vect_analyze_data_refs ===
streamcluster.cpp:76:18: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:76:18: note: ===vect_slp_analyze_bb===
streamcluster.cpp:75:15: note: === vect_analyze_data_refs ===
streamcluster.cpp:75:15: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:75:15: note: ===vect_slp_analyze_bb===
streamcluster.cpp:76:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:76:3: note: got vectype for stmt: _7 = *_6;
vector(4) float
streamcluster.cpp:76:3: note: got vectype for stmt: _11 = *_10;
vector(4) float
streamcluster.cpp:76:3: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:76:3: note: not consecutive access _7 = *_6;
streamcluster.cpp:76:3: note: not consecutive access _11 = *_10;
streamcluster.cpp:76:3: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:76:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:76:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:79:5: note: === vect_analyze_data_refs ===
streamcluster.cpp:79:5: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:79:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:82:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:82:10: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:101
streamcluster.cpp:101:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:101:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:101:16: note: === get_loop_niters ===
streamcluster.cpp:101:16: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:101:16: note: bad loop form.
streamcluster.cpp:98:6: note: vectorized 0 loops in function.
streamcluster.cpp:98:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: got vectype for stmt: _36 = points_18(D)->num;
vector(2) long int
streamcluster.cpp:101:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: got vectype for stmt: _4 = points_18(D)->num;
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: _7 = points_18(D)->p;
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$weight_16 = MEM[(const struct Point &)_10];
vector(4) float
streamcluster.cpp:101:16: note: got vectype for stmt: temp$coord_23 = MEM[(const struct Point &)_10 + 8];
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$assign_24 = MEM[(const struct Point &)_10 + 16];
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$cost_25 = MEM[(const struct Point &)_10 + 24];
vector(4) float
streamcluster.cpp:101:16: note: not vectorized: no vectype for stmt: *_10 = MEM[(const struct Point &)_13];
 scalar_type: const struct Point
streamcluster.cpp:101:16: note: not vectorized: more than one data ref in stmt: *_10 = MEM[(const struct Point &)_13];
streamcluster.cpp:101:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:101:16: note: Detected interleaving load MEM[(const struct Point &)_10] and MEM[(const struct Point &)_10 + 24]
streamcluster.cpp:101:16: note: not consecutive access temp$coord_23 = MEM[(const struct Point &)_10 + 8];
streamcluster.cpp:101:16: note: not consecutive access temp$assign_24 = MEM[(const struct Point &)_10 + 16];
streamcluster.cpp:101:16: note: Detected interleaving load of size 7 starting with temp$weight_16 = MEM[(const struct Point &)_10];
streamcluster.cpp:101:16: note: not consecutive access _4 = points_18(D)->num;
streamcluster.cpp:101:16: note: not consecutive access _7 = points_18(D)->p;
streamcluster.cpp:101:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:107:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:107:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:113
streamcluster.cpp:113:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:113:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:113:16: note: === get_loop_niters ===
streamcluster.cpp:113:16: note: Symbolic number of iterations is (unsigned long) length_15(D)
streamcluster.cpp:113:16: note: not vectorized: loop contains function calls or data references that cannot be analyzed
streamcluster.cpp:110:6: note: vectorized 0 loops in function.
streamcluster.cpp:110:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: got vectype for stmt: temp_19 = *_7;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: _11 = *_10;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_7 = _11;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_10 = temp_19;
vector(4) int
streamcluster.cpp:113:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:113:16: note: not consecutive access _11 = *_10;
streamcluster.cpp:113:16: note: not consecutive access *_10 = temp_19;
streamcluster.cpp:113:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:119:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:119:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) dim_13(D)
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _4 = *_3;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _6 = *_5;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_22 = PHI <i_15(6), 0(3)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_1
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_25 = PHI <_9(6), 0.0(3)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _8}_1
streamcluster.cpp:125:16: note: step: _8,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_25 = PHI <_9(6), 0.0(3)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _9 = _8 + result_25;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _1
streamcluster.cpp:125:16: note: def_stmt: _1 = (long unsigned int) i_22;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_22
streamcluster.cpp:125:16: note: def_stmt: i_22 = PHI <i_15(6), 0(3)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _7
streamcluster.cpp:125:16: note: def_stmt: _7 = _4 - _6;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_22 = PHI <i_15(6), 0(3)>
streamcluster.cpp:125:16: note: init: phi relevant? result_25 = PHI <_9(6), 0.0(3)>
streamcluster.cpp:125:16: note: init: stmt relevant? _1 = (long unsigned int) i_22;
streamcluster.cpp:125:16: note: init: stmt relevant? _2 = _1 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _3 = p1$coord_16 + _2;
streamcluster.cpp:125:16: note: init: stmt relevant? _4 = *_3;
streamcluster.cpp:125:16: note: init: stmt relevant? _5 = p2$coord_14 + _2;
streamcluster.cpp:125:16: note: init: stmt relevant? _6 = *_5;
streamcluster.cpp:125:16: note: init: stmt relevant? _7 = _4 - _6;
streamcluster.cpp:125:16: note: init: stmt relevant? _8 = _7 * _7;
streamcluster.cpp:125:16: note: init: stmt relevant? _9 = _8 + result_25;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _8
streamcluster.cpp:125:16: note: def_stmt: _8 = _7 * _7;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _9 = _8 + result_25;
streamcluster.cpp:125:16: note: init: stmt relevant? i_15 = i_22 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (dim_13(D) <= i_15)
streamcluster.cpp:125:16: note: worklist: examine stmt: _9 = _8 + result_25;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _8
streamcluster.cpp:125:16: note: def_stmt: _8 = _7 * _7;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _8 = _7 * _7;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_25
streamcluster.cpp:125:16: note: def_stmt: result_25 = PHI <_9(6), 0.0(3)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.
streamcluster.cpp:122:7: note: vectorized 0 loops in function.
streamcluster.cpp:122:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$coord_16 = MEM[(struct Point *)&p1 + 8B];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: got vectype for stmt: p2$coord_14 = MEM[(struct Point *)&p2 + 8B];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not consecutive access p1$coord_16 = MEM[(struct Point *)&p1 + 8B];
streamcluster.cpp:125:16: note: not consecutive access p2$coord_14 = MEM[(struct Point *)&p2 + 8B];
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _4 = *_3;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _6 = *_5;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:127:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:127:16: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:240
streamcluster.cpp:240:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:240:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:240:21: note: === get_loop_niters ===
streamcluster.cpp:240:21: note: Symbolic number of iterations is (unsigned int) nproc.21_5
streamcluster.cpp:240:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:240:21: note: got vectype for stmt: _78 = *_77;
vector(2) double
streamcluster.cpp:240:21: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:240:21: note: Analyze phi: i_204 = PHI <i_139(54), 0(52)>
streamcluster.cpp:240:21: note: Access function of PHI: {0, +, 1}_7
streamcluster.cpp:240:21: note: step: 1,  init: 0
streamcluster.cpp:240:21: note: Detected induction.
streamcluster.cpp:240:21: note: Analyze phi: .MEM_211 = PHI <.MEM_211(54), .MEM_137(52)>
streamcluster.cpp:240:21: note: Analyze phi: totalcost_lsm.292_199 = PHI <_80(54), _73(52)>
streamcluster.cpp:240:21: note: Access function of PHI: {_73, +, _78}_7
streamcluster.cpp:240:21: note: step: _78,  init: _73
streamcluster.cpp:240:21: note: step unknown.
streamcluster.cpp:240:21: note: Analyze phi: totalcost_lsm.292_199 = PHI <_80(54), _73(52)>
streamcluster.cpp:240:21: note: reduction: unsafe fp math optimization: _80 = _78 + totalcost_lsm.292_199;
streamcluster.cpp:240:21: note: Unknown def-use cycle pattern.
streamcluster.cpp:240:21: note: === vect_pattern_recog ===
streamcluster.cpp:240:21: note: vect_is_simple_use: operand _75
streamcluster.cpp:240:21: note: def_stmt: _75 = (long unsigned int) i_204;
streamcluster.cpp:240:21: note: type of def: internal
streamcluster.cpp:240:21: note: vect_is_simple_use: operand i_204
streamcluster.cpp:240:21: note: def_stmt: i_204 = PHI <i_139(54), 0(52)>
streamcluster.cpp:240:21: note: type of def: induction
streamcluster.cpp:240:21: note: vect_is_simple_use: operand 8
streamcluster.cpp:240:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:240:21: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:240:21: note: init: phi relevant? i_204 = PHI <i_139(54), 0(52)>
streamcluster.cpp:240:21: note: init: phi relevant? .MEM_211 = PHI <.MEM_211(54), .MEM_137(52)>
streamcluster.cpp:240:21: note: init: phi relevant? totalcost_lsm.292_199 = PHI <_80(54), _73(52)>
streamcluster.cpp:240:21: note: init: stmt relevant? _75 = (long unsigned int) i_204;
streamcluster.cpp:240:21: note: init: stmt relevant? _76 = _75 * 8;
streamcluster.cpp:240:21: note: init: stmt relevant? _77 = costs.20_196 + _76;
streamcluster.cpp:240:21: note: init: stmt relevant? _78 = *_77;
streamcluster.cpp:240:21: note: init: stmt relevant? _80 = _78 + totalcost_lsm.292_199;
streamcluster.cpp:240:21: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:240:21: note: vect_is_simple_use: operand _78
streamcluster.cpp:240:21: note: def_stmt: _78 = *_77;
streamcluster.cpp:240:21: note: type of def: internal
streamcluster.cpp:240:21: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:240:21: note: mark relevant 1, live 1: _80 = _78 + totalcost_lsm.292_199;
streamcluster.cpp:240:21: note: init: stmt relevant? i_139 = i_204 + 1;
streamcluster.cpp:240:21: note: init: stmt relevant? if (nproc.21_5 <= i_139)
streamcluster.cpp:240:21: note: worklist: examine stmt: _80 = _78 + totalcost_lsm.292_199;
streamcluster.cpp:240:21: note: vect_is_simple_use: operand _78
streamcluster.cpp:240:21: note: def_stmt: _78 = *_77;
streamcluster.cpp:240:21: note: type of def: internal
streamcluster.cpp:240:21: note: mark relevant 1, live 0: _78 = *_77;
streamcluster.cpp:240:21: note: vect_is_simple_use: operand totalcost_lsm.292_199
streamcluster.cpp:240:21: note: def_stmt: totalcost_lsm.292_199 = PHI <_80(54), _73(52)>
streamcluster.cpp:240:21: note: type of def: unknown
streamcluster.cpp:240:21: note: Unsupported pattern.
streamcluster.cpp:240:21: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:240:21: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:230
streamcluster.cpp:230:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:230:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:230:21: note: === get_loop_niters ===
streamcluster.cpp:230:21: note: Symbolic number of iterations is (long int) (int) k1_105 < k2_82 ? (unsigned long) k2_82 - (unsigned long) (int) k1_105 : 1
streamcluster.cpp:230:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:230:21: note: got vectype for stmt: _64 = _63->cost;
vector(4) float
streamcluster.cpp:230:21: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:230:21: note: Analyze phi: mytotal_201 = PHI <0.0(46), mytotal_134(48)>
streamcluster.cpp:230:21: note: Access function of PHI: {0.0, +, _65}_6
streamcluster.cpp:230:21: note: step: _65,  init: 0.0
streamcluster.cpp:230:21: note: step unknown.
streamcluster.cpp:230:21: note: Analyze phi: k_203 = PHI <k_108(46), k_135(48)>
streamcluster.cpp:230:21: note: Access function of PHI: {k_108, +, 1}_6
streamcluster.cpp:230:21: note: step: 1,  init: k_108
streamcluster.cpp:230:21: note: Detected induction.
streamcluster.cpp:230:21: note: Analyze phi: .MEM_92 = PHI <.MEM_163(46), .MEM_92(48)>
streamcluster.cpp:230:21: note: Analyze phi: mytotal_201 = PHI <0.0(46), mytotal_134(48)>
streamcluster.cpp:230:21: note: reduction: unsafe fp math optimization: mytotal_134 = _65 + mytotal_201;
streamcluster.cpp:230:21: note: Unknown def-use cycle pattern.
streamcluster.cpp:230:21: note: === vect_pattern_recog ===
streamcluster.cpp:230:21: note: vect_is_simple_use: operand _61
streamcluster.cpp:230:21: note: def_stmt: _61 = (long unsigned int) k_203;
streamcluster.cpp:230:21: note: type of def: internal
streamcluster.cpp:230:21: note: vect_is_simple_use: operand k_203
streamcluster.cpp:230:21: note: def_stmt: k_203 = PHI <k_108(46), k_135(48)>
streamcluster.cpp:230:21: note: type of def: induction
streamcluster.cpp:230:21: note: vect_is_simple_use: operand 32
streamcluster.cpp:230:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:230:21: note: Detected single element interleaving _63->cost step 32
streamcluster.cpp:230:21: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:230:21: note: init: phi relevant? mytotal_201 = PHI <0.0(46), mytotal_134(48)>
streamcluster.cpp:230:21: note: init: phi relevant? k_203 = PHI <k_108(46), k_135(48)>
streamcluster.cpp:230:21: note: init: phi relevant? .MEM_92 = PHI <.MEM_163(46), .MEM_92(48)>
streamcluster.cpp:230:21: note: init: stmt relevant? _61 = (long unsigned int) k_203;
streamcluster.cpp:230:21: note: init: stmt relevant? _62 = _61 * 32;
streamcluster.cpp:230:21: note: init: stmt relevant? _63 = _60 + _62;
streamcluster.cpp:230:21: note: init: stmt relevant? _64 = _63->cost;
streamcluster.cpp:230:21: note: init: stmt relevant? _65 = (double) _64;
streamcluster.cpp:230:21: note: init: stmt relevant? mytotal_134 = _65 + mytotal_201;
streamcluster.cpp:230:21: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:230:21: note: vect_is_simple_use: operand _65
streamcluster.cpp:230:21: note: def_stmt: _65 = (double) _64;
streamcluster.cpp:230:21: note: type of def: internal
streamcluster.cpp:230:21: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:230:21: note: mark relevant 1, live 1: mytotal_134 = _65 + mytotal_201;
streamcluster.cpp:230:21: note: init: stmt relevant? k_135 = k_203 + 1;
streamcluster.cpp:230:21: note: init: stmt relevant? _59 = (long int) k_135;
streamcluster.cpp:230:21: note: init: stmt relevant? if (_59 >= k2_82)
streamcluster.cpp:230:21: note: worklist: examine stmt: mytotal_134 = _65 + mytotal_201;
streamcluster.cpp:230:21: note: vect_is_simple_use: operand _65
streamcluster.cpp:230:21: note: def_stmt: _65 = (double) _64;
streamcluster.cpp:230:21: note: type of def: internal
streamcluster.cpp:230:21: note: mark relevant 1, live 0: _65 = (double) _64;
streamcluster.cpp:230:21: note: vect_is_simple_use: operand mytotal_201
streamcluster.cpp:230:21: note: def_stmt: mytotal_201 = PHI <0.0(46), mytotal_134(48)>
streamcluster.cpp:230:21: note: type of def: unknown
streamcluster.cpp:230:21: note: Unsupported pattern.
streamcluster.cpp:230:21: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:230:21: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:188
streamcluster.cpp:188:17: note: ===== analyze_loop_nest =====
streamcluster.cpp:188:17: note: === vect_analyze_loop_form ===
streamcluster.cpp:188:17: note: not vectorized: multiple nested loops.
streamcluster.cpp:188:17: note: bad loop form.

Analyzing loop at streamcluster.cpp:200
streamcluster.cpp:200:24: note: ===== analyze_loop_nest =====
streamcluster.cpp:200:24: note: === vect_analyze_loop_form ===
streamcluster.cpp:200:24: note: not vectorized: control flow in loop.
streamcluster.cpp:200:24: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _50
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _170 = *_169;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _172 = *_171;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_219 = PHI <i_177(38), 0(35)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_10
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_220 = PHI <_176(38), 0.0(35)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _174}_10
streamcluster.cpp:125:16: note: step: _174,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_220 = PHI <_176(38), 0.0(35)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _176 = _174 + result_220;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _167
streamcluster.cpp:125:16: note: def_stmt: _167 = (long unsigned int) i_219;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_219
streamcluster.cpp:125:16: note: def_stmt: i_219 = PHI <i_177(38), 0(35)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _173
streamcluster.cpp:125:16: note: def_stmt: _173 = _170 - _172;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_219 = PHI <i_177(38), 0(35)>
streamcluster.cpp:125:16: note: init: phi relevant? result_220 = PHI <_176(38), 0.0(35)>
streamcluster.cpp:125:16: note: init: stmt relevant? _167 = (long unsigned int) i_219;
streamcluster.cpp:125:16: note: init: stmt relevant? _168 = _167 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _169 = p1$8_179 + _168;
streamcluster.cpp:125:16: note: init: stmt relevant? _170 = *_169;
streamcluster.cpp:125:16: note: init: stmt relevant? _171 = p2$8_110 + _168;
streamcluster.cpp:125:16: note: init: stmt relevant? _172 = *_171;
streamcluster.cpp:125:16: note: init: stmt relevant? _173 = _170 - _172;
streamcluster.cpp:125:16: note: init: stmt relevant? _174 = _173 * _173;
streamcluster.cpp:125:16: note: init: stmt relevant? _176 = _174 + result_220;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _174
streamcluster.cpp:125:16: note: def_stmt: _174 = _173 * _173;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _176 = _174 + result_220;
streamcluster.cpp:125:16: note: init: stmt relevant? i_177 = i_219 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_50 <= i_177)
streamcluster.cpp:125:16: note: worklist: examine stmt: _176 = _174 + result_220;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _174
streamcluster.cpp:125:16: note: def_stmt: _174 = _173 * _173;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _174 = _173 * _173;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_220
streamcluster.cpp:125:16: note: def_stmt: result_220 = PHI <_176(38), 0.0(35)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:174
streamcluster.cpp:174:4: note: ===== analyze_loop_nest =====
streamcluster.cpp:174:4: note: === vect_analyze_loop_form ===
streamcluster.cpp:174:4: note: not vectorized: multiple nested loops.
streamcluster.cpp:174:4: note: bad loop form.

Analyzing loop at streamcluster.cpp:175
streamcluster.cpp:175:23: note: ===== analyze_loop_nest =====
streamcluster.cpp:175:23: note: === vect_analyze_loop_form ===
streamcluster.cpp:175:23: note: not vectorized: control flow in loop.
streamcluster.cpp:175:23: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _23
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _158 = *_157;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _160 = *_159;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_216 = PHI <i_165(25), 0(22)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_9
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_217 = PHI <_164(25), 0.0(22)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _162}_9
streamcluster.cpp:125:16: note: step: _162,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_217 = PHI <_164(25), 0.0(22)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _164 = _162 + result_217;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _155
streamcluster.cpp:125:16: note: def_stmt: _155 = (long unsigned int) i_216;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_216
streamcluster.cpp:125:16: note: def_stmt: i_216 = PHI <i_165(25), 0(22)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _161
streamcluster.cpp:125:16: note: def_stmt: _161 = _158 - _160;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_216 = PHI <i_165(25), 0(22)>
streamcluster.cpp:125:16: note: init: phi relevant? result_217 = PHI <_164(25), 0.0(22)>
streamcluster.cpp:125:16: note: init: stmt relevant? _155 = (long unsigned int) i_216;
streamcluster.cpp:125:16: note: init: stmt relevant? _156 = _155 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _157 = p1$8_178 + _156;
streamcluster.cpp:125:16: note: init: stmt relevant? _158 = *_157;
streamcluster.cpp:125:16: note: init: stmt relevant? _159 = p2$8_180 + _156;
streamcluster.cpp:125:16: note: init: stmt relevant? _160 = *_159;
streamcluster.cpp:125:16: note: init: stmt relevant? _161 = _158 - _160;
streamcluster.cpp:125:16: note: init: stmt relevant? _162 = _161 * _161;
streamcluster.cpp:125:16: note: init: stmt relevant? _164 = _162 + result_217;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _162
streamcluster.cpp:125:16: note: def_stmt: _162 = _161 * _161;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _164 = _162 + result_217;
streamcluster.cpp:125:16: note: init: stmt relevant? i_165 = i_216 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_23 <= i_165)
streamcluster.cpp:125:16: note: worklist: examine stmt: _164 = _162 + result_217;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _162
streamcluster.cpp:125:16: note: def_stmt: _162 = _161 * _161;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _162 = _161 * _161;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_217
streamcluster.cpp:125:16: note: def_stmt: result_217 = PHI <_164(25), 0.0(22)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:152
streamcluster.cpp:152:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:152:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:152:21: note: not vectorized: control flow in loop.
streamcluster.cpp:152:21: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _8
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _145 = *_144;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _147 = *_146;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_213 = PHI <i_152(10), 0(7)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_8
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_214 = PHI <_151(10), 0.0(7)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _149}_8
streamcluster.cpp:125:16: note: step: _149,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_214 = PHI <_151(10), 0.0(7)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _151 = _149 + result_214;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _142
streamcluster.cpp:125:16: note: def_stmt: _142 = (long unsigned int) i_213;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_213
streamcluster.cpp:125:16: note: def_stmt: i_213 = PHI <i_152(10), 0(7)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _148
streamcluster.cpp:125:16: note: def_stmt: _148 = _145 - _147;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_213 = PHI <i_152(10), 0(7)>
streamcluster.cpp:125:16: note: init: phi relevant? result_214 = PHI <_151(10), 0.0(7)>
streamcluster.cpp:125:16: note: init: stmt relevant? _142 = (long unsigned int) i_213;
streamcluster.cpp:125:16: note: init: stmt relevant? _143 = _142 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _144 = p1$8_121 + _143;
streamcluster.cpp:125:16: note: init: stmt relevant? _145 = *_144;
streamcluster.cpp:125:16: note: init: stmt relevant? _146 = p2$8_153 + _143;
streamcluster.cpp:125:16: note: init: stmt relevant? _147 = *_146;
streamcluster.cpp:125:16: note: init: stmt relevant? _148 = _145 - _147;
streamcluster.cpp:125:16: note: init: stmt relevant? _149 = _148 * _148;
streamcluster.cpp:125:16: note: init: stmt relevant? _151 = _149 + result_214;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _149
streamcluster.cpp:125:16: note: def_stmt: _149 = _148 * _148;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _151 = _149 + result_214;
streamcluster.cpp:125:16: note: init: stmt relevant? i_152 = i_213 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_8 <= i_152)
streamcluster.cpp:125:16: note: worklist: examine stmt: _151 = _149 + result_214;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _149
streamcluster.cpp:125:16: note: def_stmt: _149 = _148 * _148;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _149 = _148 * _148;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_214
streamcluster.cpp:125:16: note: def_stmt: result_214 = PHI <_151(10), 0.0(7)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.
streamcluster.cpp:130:7: note: vectorized 0 loops in function.
streamcluster.cpp:130:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:138:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:138:2: note: got vectype for stmt: _1 = points_102(D)->num;
vector(2) long int
streamcluster.cpp:138:2: note: got vectype for stmt: nproc.9_2 = nproc;
vector(4) int
streamcluster.cpp:138:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:138:2: note: not consecutive access nproc.9_2 = nproc;
streamcluster.cpp:138:2: note: not consecutive access _1 = points_102(D)->num;
streamcluster.cpp:138:2: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:138:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:137:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:137:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:137:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:152:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:152:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:152:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:153:47: note: === vect_analyze_data_refs ===
streamcluster.cpp:153:47: note: got vectype for stmt: _8 = points_102(D)->dim;
vector(4) int
streamcluster.cpp:153:47: note: got vectype for stmt: _9 = points_102(D)->p;
vector(2) long unsigned int
streamcluster.cpp:153:47: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:153:47: note: not consecutive access _9 = points_102(D)->p;
streamcluster.cpp:153:47: note: not consecutive access _8 = points_102(D)->dim;
streamcluster.cpp:153:47: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:153:47: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_121 = MEM[(const struct Point &)_13 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: got vectype for stmt: p2$8_153 = MEM[(const struct Point &)_9 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: Detected single element interleaving MEM[(const struct Point &)_13 + 8] step 32
streamcluster.cpp:125:16: note: not consecutive access p2$8_153 = MEM[(const struct Point &)_9 + 8];
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _145 = *_144;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _147 = *_146;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:152:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:152:21: note: got vectype for stmt: _14 = _13->weight;
vector(4) float
streamcluster.cpp:152:21: note: got vectype for stmt: _13->cost = _15;
vector(4) float
streamcluster.cpp:152:21: note: got vectype for stmt: _13->assign = 0;
vector(2) long int
streamcluster.cpp:152:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:152:21: note: Detected single element interleaving _13->weight step 32
streamcluster.cpp:152:21: note: not consecutive access _13->assign = 0;
streamcluster.cpp:152:21: note: not consecutive access _13->cost = _15;
streamcluster.cpp:152:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:152:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:152:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:158:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:158:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:158:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:174:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:174:4: note: got vectype for stmt: i.12_19 = i;
vector(4) int
streamcluster.cpp:174:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:174:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:160:26: note: === vect_analyze_data_refs ===
streamcluster.cpp:160:26: note: got vectype for stmt: *kcenter_114(D) = 1;
vector(2) long int
streamcluster.cpp:160:26: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:188:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:188:17: note: got vectype for stmt: costs = _18;
vector(2) long unsigned int
streamcluster.cpp:188:17: note: got vectype for stmt: i = 1;
vector(4) int
streamcluster.cpp:188:17: note: got vectype for stmt: _182 = points_102(D)->num;
vector(2) long int
streamcluster.cpp:188:17: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:188:17: note: not consecutive access costs = _18;
streamcluster.cpp:188:17: note: not consecutive access i = 1;
streamcluster.cpp:188:17: note: not consecutive access _182 = points_102(D)->num;
streamcluster.cpp:188:17: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:175:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:175:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:175:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:174:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:174:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:174:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:176:38: note: === vect_analyze_data_refs ===
streamcluster.cpp:176:38: note: got vectype for stmt: _23 = points_102(D)->dim;
vector(4) int
streamcluster.cpp:176:38: note: got vectype for stmt: _24 = points_102(D)->p;
vector(2) long unsigned int
streamcluster.cpp:176:38: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:176:38: note: not consecutive access _24 = points_102(D)->p;
streamcluster.cpp:176:38: note: not consecutive access _23 = points_102(D)->dim;
streamcluster.cpp:176:38: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:176:38: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_178 = MEM[(const struct Point &)_30 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: got vectype for stmt: p2$8_180 = MEM[(const struct Point &)_27 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not consecutive access p1$8_178 = MEM[(const struct Point &)_30 + 8];
streamcluster.cpp:125:16: note: Detected single element interleaving MEM[(const struct Point &)_27 + 8] step 32
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _158 = *_157;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _160 = *_159;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:177:5: note: === vect_analyze_data_refs ===
streamcluster.cpp:177:5: note: got vectype for stmt: _31 = _27->weight;
vector(4) float
streamcluster.cpp:177:5: note: got vectype for stmt: _33 = _27->cost;
vector(4) float
streamcluster.cpp:177:5: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:177:5: note: Detected interleaving load _27->weight and _27->cost
streamcluster.cpp:177:5: note: Detected interleaving load of size 8 starting with _31 = _27->weight;
streamcluster.cpp:177:5: note: There is a gap of 1 elements after the group
streamcluster.cpp:177:5: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:177:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:179:26: note: === vect_analyze_data_refs ===
streamcluster.cpp:179:26: note: got vectype for stmt: _27->cost = _32;
vector(4) float
streamcluster.cpp:179:26: note: got vectype for stmt: _27->assign = _20;
vector(2) long int
streamcluster.cpp:179:26: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:179:26: note: not consecutive access _27->assign = _20;
streamcluster.cpp:179:26: note: not consecutive access _27->cost = _32;
streamcluster.cpp:179:26: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:179:26: note: ===vect_slp_analyze_bb===
streamcluster.cpp:175:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:175:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:175:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:175:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:175:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:190:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:190:4: note: got vectype for stmt: _40 = points_102(D)->p;
vector(2) long unsigned int
streamcluster.cpp:190:4: note: got vectype for stmt: i.16_41 = i;
vector(4) int
streamcluster.cpp:190:4: note: got vectype for stmt: _45 = _44->cost;
vector(4) float
streamcluster.cpp:190:4: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:190:4: note: not consecutive access _45 = _44->cost;
streamcluster.cpp:190:4: note: not consecutive access i.16_41 = i;
streamcluster.cpp:190:4: note: not consecutive access _40 = points_102(D)->p;
streamcluster.cpp:190:4: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:190:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:200:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:200:24: note: got vectype for stmt: _47 = *kcenter_114(D);
vector(2) long int
streamcluster.cpp:200:24: note: got vectype for stmt: *kcenter_114(D) = _48;
vector(2) long int
streamcluster.cpp:200:24: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:200:24: note: not consecutive access _47 = *kcenter_114(D);
streamcluster.cpp:200:24: note: not consecutive access *kcenter_114(D) = _48;
streamcluster.cpp:200:24: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:200:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:201:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:201:27: note: got vectype for stmt: _50 = points_102(D)->dim;
vector(4) int
streamcluster.cpp:201:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:201:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_179 = MEM[(const struct Point &)_44 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: got vectype for stmt: p2$8_110 = MEM[(const struct Point &)_53 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not consecutive access p1$8_179 = MEM[(const struct Point &)_44 + 8];
streamcluster.cpp:125:16: note: Detected single element interleaving MEM[(const struct Point &)_53 + 8] step 32
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _170 = *_169;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _172 = *_171;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:202:6: note: === vect_analyze_data_refs ===
streamcluster.cpp:202:6: note: got vectype for stmt: _54 = _53->weight;
vector(4) float
streamcluster.cpp:202:6: note: got vectype for stmt: _56 = _53->cost;
vector(4) float
streamcluster.cpp:202:6: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:202:6: note: Detected interleaving load _53->weight and _53->cost
streamcluster.cpp:202:6: note: Detected interleaving load of size 8 starting with _54 = _53->weight;
streamcluster.cpp:202:6: note: There is a gap of 1 elements after the group
streamcluster.cpp:202:6: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:202:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:204:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:204:27: note: got vectype for stmt: _53->cost = _55;
vector(4) float
streamcluster.cpp:204:27: note: got vectype for stmt: _53->assign = _57;
vector(2) long int
streamcluster.cpp:204:27: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:204:27: note: not consecutive access _53->assign = _57;
streamcluster.cpp:204:27: note: not consecutive access _53->cost = _55;
streamcluster.cpp:204:27: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:204:27: note: ===vect_slp_analyze_bb===
streamcluster.cpp:200:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:200:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:200:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:200:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:188:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:188:17: note: got vectype for stmt: i = _58;
vector(4) int
streamcluster.cpp:188:17: note: got vectype for stmt: _36 = points_102(D)->num;
vector(2) long int
streamcluster.cpp:188:17: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:188:17: note: not consecutive access i = _58;
streamcluster.cpp:188:17: note: not consecutive access _36 = points_102(D)->num;
streamcluster.cpp:188:17: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:188:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:188:17: note: got vectype for stmt: pretmp_431 = costs;
vector(2) long unsigned int
streamcluster.cpp:188:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:188:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:231:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:231:22: note: got vectype for stmt: _60 = points_102(D)->p;
vector(2) long unsigned int
streamcluster.cpp:231:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:231:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:230:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:230:21: note: got vectype for stmt: _64 = _63->cost;
vector(4) float
streamcluster.cpp:230:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:230:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:230:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:238:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:238:2: note: got vectype for stmt: *prephitmp_398 = mytotal_208;
vector(2) double
streamcluster.cpp:238:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:238:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:238:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:238:2: note: got vectype for stmt: pretmp_436 = totalcost;
vector(2) double
streamcluster.cpp:238:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:238:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:240:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:240:21: note: got vectype for stmt: _70 = *kcenter_114(D);
vector(2) long int
streamcluster.cpp:240:21: note: got vectype for stmt: totalcost = _73;
vector(2) double
streamcluster.cpp:240:21: note: got vectype for stmt: nproc.21_5 = nproc;
vector(4) int
streamcluster.cpp:240:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:240:21: note: not consecutive access nproc.21_5 = nproc;
streamcluster.cpp:240:21: note: not consecutive access totalcost = _73;
streamcluster.cpp:240:21: note: not consecutive access _70 = *kcenter_114(D);
streamcluster.cpp:240:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:240:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:240:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:240:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:240:21: note: got vectype for stmt: _78 = *_77;
vector(2) double
streamcluster.cpp:240:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:240:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:240:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:240:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:240:21: note: got vectype for stmt: totalcost = _97;
vector(2) double
streamcluster.cpp:240:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:240:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:243:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:249:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:249:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:249:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:233:13: note: === vect_analyze_data_refs ===
streamcluster.cpp:233:13: note: got vectype for stmt: *_435 = 0.0;
vector(2) double
streamcluster.cpp:233:13: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:233:13: note: ===vect_slp_analyze_bb===
streamcluster.cpp:230:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:230:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:230:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:233:13: note: === vect_analyze_data_refs ===
streamcluster.cpp:233:13: note: got vectype for stmt: *_359 = 0.0;
vector(2) double
streamcluster.cpp:233:13: note: got vectype for stmt: pretmp_437 = totalcost;
vector(2) double
streamcluster.cpp:233:13: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:233:13: note: not consecutive access *_359 = 0.0;
streamcluster.cpp:233:13: note: not consecutive access pretmp_437 = totalcost;
streamcluster.cpp:233:13: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:233:13: note: ===vect_slp_analyze_bb===
streamcluster.cpp:230:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:230:21: note: got vectype for stmt: pretmp_357 = costs;
vector(2) long unsigned int
streamcluster.cpp:230:21: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:444
streamcluster.cpp:444:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:444:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:444:22: note: not vectorized: control flow in loop.
streamcluster.cpp:444:22: note: bad loop form.

Analyzing loop at streamcluster.cpp:434
streamcluster.cpp:434:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:434:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:434:22: note: not vectorized: control flow in loop.
streamcluster.cpp:434:22: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _159
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _312 = *_311;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _314 = *_313;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_387 = PHI <i_319(65), 0(63)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_11
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_388 = PHI <_318(65), 0.0(63)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _316}_11
streamcluster.cpp:125:16: note: step: _316,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_388 = PHI <_318(65), 0.0(63)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _318 = _316 + result_388;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _309
streamcluster.cpp:125:16: note: def_stmt: _309 = (long unsigned int) i_387;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_387
streamcluster.cpp:125:16: note: def_stmt: i_387 = PHI <i_319(65), 0(63)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _315
streamcluster.cpp:125:16: note: def_stmt: _315 = _312 - _314;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_387 = PHI <i_319(65), 0(63)>
streamcluster.cpp:125:16: note: init: phi relevant? result_388 = PHI <_318(65), 0.0(63)>
streamcluster.cpp:125:16: note: init: stmt relevant? _309 = (long unsigned int) i_387;
streamcluster.cpp:125:16: note: init: stmt relevant? _310 = _309 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _311 = p1$8_241 + _310;
streamcluster.cpp:125:16: note: init: stmt relevant? _312 = *_311;
streamcluster.cpp:125:16: note: init: stmt relevant? _313 = p2$8_244 + _310;
streamcluster.cpp:125:16: note: init: stmt relevant? _314 = *_313;
streamcluster.cpp:125:16: note: init: stmt relevant? _315 = _312 - _314;
streamcluster.cpp:125:16: note: init: stmt relevant? _316 = _315 * _315;
streamcluster.cpp:125:16: note: init: stmt relevant? _318 = _316 + result_388;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _316
streamcluster.cpp:125:16: note: def_stmt: _316 = _315 * _315;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _318 = _316 + result_388;
streamcluster.cpp:125:16: note: init: stmt relevant? i_319 = i_387 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_159 <= i_319)
streamcluster.cpp:125:16: note: worklist: examine stmt: _318 = _316 + result_388;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _316
streamcluster.cpp:125:16: note: def_stmt: _316 = _315 * _315;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _316 = _315 * _315;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_388
streamcluster.cpp:125:16: note: def_stmt: result_388 = PHI <_318(65), 0.0(63)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:421
streamcluster.cpp:421:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:421:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:421:21: note: === get_loop_niters ===
streamcluster.cpp:421:21: note: Symbolic number of iterations is (unsigned int) nproc.26_2
streamcluster.cpp:421:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:421:21: note: got vectype for stmt: _130 = *_129;
vector(2) double
streamcluster.cpp:421:21: note: got vectype for stmt: _137 = *_136;
vector(2) double
streamcluster.cpp:421:21: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:421:21: note: Analyze phi: p_366 = PHI <p_281(55), 0(53)>
streamcluster.cpp:421:21: note: Access function of PHI: {0, +, 1}_7
streamcluster.cpp:421:21: note: step: 1,  init: 0
streamcluster.cpp:421:21: note: Detected induction.
streamcluster.cpp:421:21: note: Analyze phi: .MEM_378 = PHI <.MEM_378(55), .MEM_278(53)>
streamcluster.cpp:421:21: note: Analyze phi: gl_number_of_centers_to_close_lsm.347_404 = PHI <_133(55), gl_number_of_centers_to_close_lsm.347_390(53)>
streamcluster.cpp:421:21: note: Access function of PHI: {gl_number_of_centers_to_close_lsm.347_390, +, _131}_7
streamcluster.cpp:421:21: note: step: _131,  init: gl_number_of_centers_to_close_lsm.347_390
streamcluster.cpp:421:21: note: step unknown.
streamcluster.cpp:421:21: note: Analyze phi: gl_cost_of_opening_x_lsm.349_411 = PHI <_139(55), z_269(D)(53)>
streamcluster.cpp:421:21: note: Access function of PHI: {z_269(D), +, _137}_7
streamcluster.cpp:421:21: note: step: _137,  init: z_269(D)
streamcluster.cpp:421:21: note: step unknown.
streamcluster.cpp:421:21: note: Analyze phi: gl_cost_of_opening_x_lsm.349_411 = PHI <_139(55), z_269(D)(53)>
streamcluster.cpp:421:21: note: reduction: unsafe fp math optimization: _139 = _137 + gl_cost_of_opening_x_lsm.349_411;
streamcluster.cpp:421:21: note: Unknown def-use cycle pattern.
streamcluster.cpp:421:21: note: Analyze phi: gl_number_of_centers_to_close_lsm.347_404 = PHI <_133(55), gl_number_of_centers_to_close_lsm.347_390(53)>
streamcluster.cpp:421:21: note: detected reduction: _133 = _131 + gl_number_of_centers_to_close_lsm.347_404;
streamcluster.cpp:421:21: note: Detected reduction.
streamcluster.cpp:421:21: note: === vect_pattern_recog ===
streamcluster.cpp:421:21: note: vect_is_simple_use: operand stride_193
streamcluster.cpp:421:21: note: def_stmt: stride_193 = PHI <stride_240(4), stride_242(5)>
streamcluster.cpp:421:21: note: type of def: external
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _127
streamcluster.cpp:421:21: note: def_stmt: _127 = (long unsigned int) _126;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _126
streamcluster.cpp:421:21: note: def_stmt: _126 = _125 + K_243;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vect_is_simple_use: operand 8
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _131
streamcluster.cpp:421:21: note: def_stmt: _131 = (int) _130;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _131
streamcluster.cpp:421:21: note: def_stmt: _131 = (int) _130;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _131
streamcluster.cpp:421:21: note: def_stmt: _131 = (int) _130;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _134
streamcluster.cpp:421:21: note: def_stmt: _134 = _127 + 1;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:421:21: note: Detected interleaving load *_129 and *_136
streamcluster.cpp:421:21: note: Detected interleaving load of size 2 starting with _130 = *_129;
streamcluster.cpp:421:21: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:421:21: note: init: phi relevant? p_366 = PHI <p_281(55), 0(53)>
streamcluster.cpp:421:21: note: init: phi relevant? .MEM_378 = PHI <.MEM_378(55), .MEM_278(53)>
streamcluster.cpp:421:21: note: init: phi relevant? gl_number_of_centers_to_close_lsm.347_404 = PHI <_133(55), gl_number_of_centers_to_close_lsm.347_390(53)>
streamcluster.cpp:421:21: note: init: phi relevant? gl_cost_of_opening_x_lsm.349_411 = PHI <_139(55), z_269(D)(53)>
streamcluster.cpp:421:21: note: init: stmt relevant? _125 = stride_193 * p_366;
streamcluster.cpp:421:21: note: init: stmt relevant? _126 = _125 + K_243;
streamcluster.cpp:421:21: note: init: stmt relevant? _127 = (long unsigned int) _126;
streamcluster.cpp:421:21: note: init: stmt relevant? _128 = _127 * 8;
streamcluster.cpp:421:21: note: init: stmt relevant? _129 = work_mem.32_392 + _128;
streamcluster.cpp:421:21: note: init: stmt relevant? _130 = *_129;
streamcluster.cpp:421:21: note: init: stmt relevant? _131 = (int) _130;
streamcluster.cpp:421:21: note: init: stmt relevant? _133 = _131 + gl_number_of_centers_to_close_lsm.347_404;
streamcluster.cpp:421:21: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _131
streamcluster.cpp:421:21: note: def_stmt: _131 = (int) _130;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:421:21: note: mark relevant 1, live 1: _133 = _131 + gl_number_of_centers_to_close_lsm.347_404;
streamcluster.cpp:421:21: note: init: stmt relevant? _134 = _127 + 1;
streamcluster.cpp:421:21: note: init: stmt relevant? _135 = _134 * 8;
streamcluster.cpp:421:21: note: init: stmt relevant? _136 = work_mem.32_392 + _135;
streamcluster.cpp:421:21: note: init: stmt relevant? _137 = *_136;
streamcluster.cpp:421:21: note: init: stmt relevant? _139 = _137 + gl_cost_of_opening_x_lsm.349_411;
streamcluster.cpp:421:21: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _137
streamcluster.cpp:421:21: note: def_stmt: _137 = *_136;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:421:21: note: mark relevant 1, live 1: _139 = _137 + gl_cost_of_opening_x_lsm.349_411;
streamcluster.cpp:421:21: note: init: stmt relevant? p_281 = p_366 + 1;
streamcluster.cpp:421:21: note: init: stmt relevant? if (nproc.26_2 <= p_281)
streamcluster.cpp:421:21: note: worklist: examine stmt: _139 = _137 + gl_cost_of_opening_x_lsm.349_411;
streamcluster.cpp:421:21: note: vect_is_simple_use: operand _137
streamcluster.cpp:421:21: note: def_stmt: _137 = *_136;
streamcluster.cpp:421:21: note: type of def: internal
streamcluster.cpp:421:21: note: mark relevant 1, live 0: _137 = *_136;
streamcluster.cpp:421:21: note: vect_is_simple_use: operand gl_cost_of_opening_x_lsm.349_411
streamcluster.cpp:421:21: note: def_stmt: gl_cost_of_opening_x_lsm.349_411 = PHI <_139(55), z_269(D)(53)>
streamcluster.cpp:421:21: note: type of def: unknown
streamcluster.cpp:421:21: note: Unsupported pattern.
streamcluster.cpp:421:21: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:421:21: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:391
streamcluster.cpp:391:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:391:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:391:21: note: not vectorized: control flow in loop.
streamcluster.cpp:391:21: note: bad loop form.

Analyzing loop at streamcluster.cpp:395
streamcluster.cpp:395:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:395:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:395:22: note: === get_loop_niters ===
streamcluster.cpp:395:22: note: Symbolic number of iterations is (unsigned int) nproc.26_2
streamcluster.cpp:395:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:395:22: note: got vectype for stmt: _109 = *_108;
vector(2) double
streamcluster.cpp:395:22: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:395:22: note: Analyze phi: low_343 = PHI <low_270(44), z_269(D)(42)>
streamcluster.cpp:395:22: note: Access function of PHI: {z_269(D), +, _109}_6
streamcluster.cpp:395:22: note: step: _109,  init: z_269(D)
streamcluster.cpp:395:22: note: step unknown.
streamcluster.cpp:395:22: note: Analyze phi: p_341 = PHI <p_271(44), 0(42)>
streamcluster.cpp:395:22: note: Access function of PHI: {0, +, 1}_6
streamcluster.cpp:395:22: note: step: 1,  init: 0
streamcluster.cpp:395:22: note: Detected induction.
streamcluster.cpp:395:22: note: Analyze phi: low_343 = PHI <low_270(44), z_269(D)(42)>
streamcluster.cpp:395:22: note: reduction: unsafe fp math optimization: low_270 = _109 + low_343;
streamcluster.cpp:395:22: note: Unknown def-use cycle pattern.
streamcluster.cpp:395:22: note: === vect_pattern_recog ===
streamcluster.cpp:395:22: note: vect_is_simple_use: operand stride_193
streamcluster.cpp:395:22: note: def_stmt: stride_193 = PHI <stride_240(4), stride_242(5)>
streamcluster.cpp:395:22: note: type of def: external
streamcluster.cpp:395:22: note: vect_is_simple_use: operand _106
streamcluster.cpp:395:22: note: def_stmt: _106 = (long unsigned int) _105;
streamcluster.cpp:395:22: note: type of def: internal
streamcluster.cpp:395:22: note: vect_is_simple_use: operand _105
streamcluster.cpp:395:22: note: def_stmt: _105 = _104 + pretmp_626;
streamcluster.cpp:395:22: note: type of def: internal
streamcluster.cpp:395:22: note: vect_is_simple_use: operand 8
streamcluster.cpp:395:22: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:395:22: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:395:22: note: init: phi relevant? low_343 = PHI <low_270(44), z_269(D)(42)>
streamcluster.cpp:395:22: note: init: phi relevant? p_341 = PHI <p_271(44), 0(42)>
streamcluster.cpp:395:22: note: init: stmt relevant? _104 = stride_193 * p_341;
streamcluster.cpp:395:22: note: init: stmt relevant? _105 = _104 + pretmp_626;
streamcluster.cpp:395:22: note: init: stmt relevant? _106 = (long unsigned int) _105;
streamcluster.cpp:395:22: note: init: stmt relevant? _107 = _106 * 8;
streamcluster.cpp:395:22: note: init: stmt relevant? _108 = work_mem.32_392 + _107;
streamcluster.cpp:395:22: note: init: stmt relevant? _109 = *_108;
streamcluster.cpp:395:22: note: init: stmt relevant? low_270 = _109 + low_343;
streamcluster.cpp:395:22: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:395:22: note: vect_is_simple_use: operand _109
streamcluster.cpp:395:22: note: def_stmt: _109 = *_108;
streamcluster.cpp:395:22: note: type of def: internal
streamcluster.cpp:395:22: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:395:22: note: mark relevant 1, live 1: low_270 = _109 + low_343;
streamcluster.cpp:395:22: note: init: stmt relevant? p_271 = p_341 + 1;
streamcluster.cpp:395:22: note: init: stmt relevant? if (nproc.26_2 <= p_271)
streamcluster.cpp:395:22: note: worklist: examine stmt: low_270 = _109 + low_343;
streamcluster.cpp:395:22: note: vect_is_simple_use: operand _109
streamcluster.cpp:395:22: note: def_stmt: _109 = *_108;
streamcluster.cpp:395:22: note: type of def: internal
streamcluster.cpp:395:22: note: mark relevant 1, live 0: _109 = *_108;
streamcluster.cpp:395:22: note: vect_is_simple_use: operand low_343
streamcluster.cpp:395:22: note: def_stmt: low_343 = PHI <low_270(44), z_269(D)(42)>
streamcluster.cpp:395:22: note: type of def: unknown
streamcluster.cpp:395:22: note: Unsupported pattern.
streamcluster.cpp:395:22: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:395:22: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:359
streamcluster.cpp:359:17: note: ===== analyze_loop_nest =====
streamcluster.cpp:359:17: note: === vect_analyze_loop_form ===
streamcluster.cpp:359:17: note: not vectorized: control flow in loop.
streamcluster.cpp:359:17: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _70
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _300 = *_299;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _302 = *_301;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_384 = PHI <i_307(32), 0(30)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_10
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_385 = PHI <_306(32), 0.0(30)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _304}_10
streamcluster.cpp:125:16: note: step: _304,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_385 = PHI <_306(32), 0.0(30)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _306 = _304 + result_385;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _297
streamcluster.cpp:125:16: note: def_stmt: _297 = (long unsigned int) i_384;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_384
streamcluster.cpp:125:16: note: def_stmt: i_384 = PHI <i_307(32), 0(30)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _303
streamcluster.cpp:125:16: note: def_stmt: _303 = _300 - _302;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_384 = PHI <i_307(32), 0(30)>
streamcluster.cpp:125:16: note: init: phi relevant? result_385 = PHI <_306(32), 0.0(30)>
streamcluster.cpp:125:16: note: init: stmt relevant? _297 = (long unsigned int) i_384;
streamcluster.cpp:125:16: note: init: stmt relevant? _298 = _297 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _299 = p1$8_283 + _298;
streamcluster.cpp:125:16: note: init: stmt relevant? _300 = *_299;
streamcluster.cpp:125:16: note: init: stmt relevant? _301 = p2$8_238 + _298;
streamcluster.cpp:125:16: note: init: stmt relevant? _302 = *_301;
streamcluster.cpp:125:16: note: init: stmt relevant? _303 = _300 - _302;
streamcluster.cpp:125:16: note: init: stmt relevant? _304 = _303 * _303;
streamcluster.cpp:125:16: note: init: stmt relevant? _306 = _304 + result_385;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _304
streamcluster.cpp:125:16: note: def_stmt: _304 = _303 * _303;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _306 = _304 + result_385;
streamcluster.cpp:125:16: note: init: stmt relevant? i_307 = i_384 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_70 <= i_307)
streamcluster.cpp:125:16: note: worklist: examine stmt: _306 = _304 + result_385;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _304
streamcluster.cpp:125:16: note: def_stmt: _304 = _303 * _303;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _304 = _303 * _303;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_385
streamcluster.cpp:125:16: note: def_stmt: result_385 = PHI <_306(32), 0.0(30)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:339
streamcluster.cpp:339:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:339:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:339:21: note: not vectorized: control flow in loop.
streamcluster.cpp:339:21: note: bad loop form.

Analyzing loop at streamcluster.cpp:328
streamcluster.cpp:328:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:328:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:328:21: note: === get_loop_niters ===
streamcluster.cpp:328:21: note: Symbolic number of iterations is (unsigned int) nproc.26_2
streamcluster.cpp:328:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:328:21: note: got vectype for stmt: _41 = *_40;
vector(2) double
streamcluster.cpp:328:21: note: got vectype for stmt: *_40 = _42;
vector(2) double
streamcluster.cpp:328:21: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:328:21: note: Analyze phi: accum_332 = PHI <accum_256(19), 0(17)>
streamcluster.cpp:328:21: note: Access function of PHI: {0, +, tmp_254}_2
streamcluster.cpp:328:21: note: step: tmp_254,  init: 0
streamcluster.cpp:328:21: note: step unknown.
streamcluster.cpp:328:21: note: Analyze phi: p_345 = PHI <p_257(19), 0(17)>
streamcluster.cpp:328:21: note: Access function of PHI: {0, +, 1}_2
streamcluster.cpp:328:21: note: step: 1,  init: 0
streamcluster.cpp:328:21: note: Detected induction.
streamcluster.cpp:328:21: note: Analyze phi: .MEM_371 = PHI <.MEM_255(19), .MEM_329(17)>
streamcluster.cpp:328:21: note: Analyze phi: accum_332 = PHI <accum_256(19), 0(17)>
streamcluster.cpp:328:21: note: reduction used in loop.
streamcluster.cpp:328:21: note: Unknown def-use cycle pattern.
streamcluster.cpp:328:21: note: === vect_pattern_recog ===
streamcluster.cpp:328:21: note: vect_is_simple_use: operand stride_193
streamcluster.cpp:328:21: note: def_stmt: stride_193 = PHI <stride_240(4), stride_242(5)>
streamcluster.cpp:328:21: note: type of def: external
streamcluster.cpp:328:21: note: vect_is_simple_use: operand _38
streamcluster.cpp:328:21: note: def_stmt: _38 = (long unsigned int) _37;
streamcluster.cpp:328:21: note: type of def: internal
streamcluster.cpp:328:21: note: vect_is_simple_use: operand _37
streamcluster.cpp:328:21: note: def_stmt: _37 = stride_193 * p_345;
streamcluster.cpp:328:21: note: type of def: internal
streamcluster.cpp:328:21: note: vect_is_simple_use: operand 8
streamcluster.cpp:328:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:328:21: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:328:21: note: init: phi relevant? accum_332 = PHI <accum_256(19), 0(17)>
streamcluster.cpp:328:21: note: init: phi relevant? p_345 = PHI <p_257(19), 0(17)>
streamcluster.cpp:328:21: note: init: phi relevant? .MEM_371 = PHI <.MEM_255(19), .MEM_329(17)>
streamcluster.cpp:328:21: note: init: stmt relevant? _37 = stride_193 * p_345;
streamcluster.cpp:328:21: note: init: stmt relevant? _38 = (long unsigned int) _37;
streamcluster.cpp:328:21: note: init: stmt relevant? _39 = _38 * 8;
streamcluster.cpp:328:21: note: init: stmt relevant? _40 = work_mem.32_360 + _39;
streamcluster.cpp:328:21: note: init: stmt relevant? _41 = *_40;
streamcluster.cpp:328:21: note: init: stmt relevant? tmp_254 = (int) _41;
streamcluster.cpp:328:21: note: init: stmt relevant? _42 = (double) accum_332;
streamcluster.cpp:328:21: note: init: stmt relevant? *_40 = _42;
streamcluster.cpp:328:21: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:328:21: note: mark relevant 5, live 0: *_40 = _42;
streamcluster.cpp:328:21: note: init: stmt relevant? accum_256 = tmp_254 + accum_332;
streamcluster.cpp:328:21: note: init: stmt relevant? p_257 = p_345 + 1;
streamcluster.cpp:328:21: note: init: stmt relevant? if (nproc.26_2 <= p_257)
streamcluster.cpp:328:21: note: worklist: examine stmt: *_40 = _42;
streamcluster.cpp:328:21: note: vect_is_simple_use: operand _42
streamcluster.cpp:328:21: note: def_stmt: _42 = (double) accum_332;
streamcluster.cpp:328:21: note: type of def: internal
streamcluster.cpp:328:21: note: mark relevant 5, live 0: _42 = (double) accum_332;
streamcluster.cpp:328:21: note: worklist: examine stmt: _42 = (double) accum_332;
streamcluster.cpp:328:21: note: vect_is_simple_use: operand accum_332
streamcluster.cpp:328:21: note: def_stmt: accum_332 = PHI <accum_256(19), 0(17)>
streamcluster.cpp:328:21: note: type of def: unknown
streamcluster.cpp:328:21: note: Unsupported pattern.
streamcluster.cpp:328:21: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:328:21: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:315
streamcluster.cpp:315:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:315:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:315:21: note: not vectorized: control flow in loop.
streamcluster.cpp:315:21: note: bad loop form.
streamcluster.cpp:268:8: note: vectorized 0 loops in function.
streamcluster.cpp:268:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:278:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:278:2: note: got vectype for stmt: _1 = points_232(D)->num;
vector(2) long int
streamcluster.cpp:278:2: note: got vectype for stmt: nproc.26_2 = nproc;
vector(4) int
streamcluster.cpp:278:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:278:2: note: not consecutive access nproc.26_2 = nproc;
streamcluster.cpp:278:2: note: not consecutive access _1 = points_232(D)->num;
streamcluster.cpp:278:2: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:278:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:277:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:277:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:277:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:291:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:291:2: note: got vectype for stmt: _7 = *numcenters_239(D);
vector(2) long int
streamcluster.cpp:291:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:291:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:292:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:292:10: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:292:10: note: ===vect_slp_analyze_bb===
streamcluster.cpp:299:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:299:2: note: got vectype for stmt: pretmp_821 = switch_membership;
vector(2) long unsigned int
streamcluster.cpp:299:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:299:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:300:29: note: === vect_analyze_data_refs ===
streamcluster.cpp:300:29: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:315:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:315:21: note: got vectype for stmt: work_mem = _18;
vector(2) long unsigned int
streamcluster.cpp:315:21: note: got vectype for stmt: gl_cost_of_opening_x = 0.0;
vector(2) double
streamcluster.cpp:315:21: note: got vectype for stmt: gl_number_of_centers_to_close = 0;
vector(4) int
streamcluster.cpp:315:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:315:21: note: not consecutive access work_mem = _18;
streamcluster.cpp:315:21: note: not consecutive access gl_cost_of_opening_x = 0.0;
streamcluster.cpp:315:21: note: not consecutive access gl_number_of_centers_to_close = 0;
streamcluster.cpp:315:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:315:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:317:18: note: === vect_analyze_data_refs ===
streamcluster.cpp:317:18: note: got vectype for stmt: is_center.29_20 = is_center;
vector(2) long unsigned int
streamcluster.cpp:317:18: note: got vectype for stmt: center_table.31_25 = center_table;
vector(2) long unsigned int
streamcluster.cpp:317:18: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:317:18: note: not consecutive access is_center.29_20 = is_center;
streamcluster.cpp:317:18: note: not consecutive access center_table.31_25 = center_table;
streamcluster.cpp:317:18: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:317:18: note: ===vect_slp_analyze_bb===
streamcluster.cpp:315:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:315:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:315:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:315:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:316:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:316:3: note: got vectype for stmt: _23 = *_22;
vector(16) unsigned char
streamcluster.cpp:316:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:316:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:317:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:317:20: note: got vectype for stmt: *_28 = count_347;
vector(4) int
streamcluster.cpp:317:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:317:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:315:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:315:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:315:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:315:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:315:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:315:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:326:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:326:2: note: got vectype for stmt: work_mem.32_29 = work_mem;
vector(2) long unsigned int
streamcluster.cpp:326:2: note: got vectype for stmt: *_33 = prephitmp_730;
vector(2) double
streamcluster.cpp:326:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:326:2: note: not consecutive access *_33 = prephitmp_730;
streamcluster.cpp:326:2: note: not consecutive access work_mem.32_29 = work_mem;
streamcluster.cpp:326:2: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:326:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:328:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:328:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:328:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:328:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:328:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:328:21: note: got vectype for stmt: _41 = *_40;
vector(2) double
streamcluster.cpp:328:21: note: got vectype for stmt: *_40 = _42;
vector(2) double
streamcluster.cpp:328:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:328:21: note: not consecutive access _41 = *_40;
streamcluster.cpp:328:21: note: not consecutive access *_40 = _42;
streamcluster.cpp:328:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:328:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:328:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:341:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:341:20: note: got vectype for stmt: is_center.36_44 = is_center;
vector(2) long unsigned int
streamcluster.cpp:341:20: note: got vectype for stmt: center_table.37_48 = center_table;
vector(2) long unsigned int
streamcluster.cpp:341:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:341:20: note: not consecutive access is_center.36_44 = is_center;
streamcluster.cpp:341:20: note: not consecutive access center_table.37_48 = center_table;
streamcluster.cpp:341:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:341:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:340:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:340:3: note: got vectype for stmt: _47 = *_46;
vector(16) unsigned char
streamcluster.cpp:340:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:340:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:341:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:341:20: note: got vectype for stmt: _51 = *_50;
vector(4) int
streamcluster.cpp:341:20: note: got vectype for stmt: _52 = *_418;
vector(2) double
streamcluster.cpp:341:20: note: got vectype for stmt: *_50 = _54;
vector(4) int
streamcluster.cpp:341:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:341:20: note: not consecutive access _52 = *_418;
streamcluster.cpp:341:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:341:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:339:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:339:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:339:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:339:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:348:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:348:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:348:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:70: note: ===vect_slp_analyze_bb===
streamcluster.cpp:359:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:359:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:359:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:380:29: note: === vect_analyze_data_refs ===
streamcluster.cpp:380:29: note: got vectype for stmt: _70 = points_232(D)->dim;
vector(4) int
streamcluster.cpp:380:29: note: got vectype for stmt: _71 = points_232(D)->p;
vector(2) long unsigned int
streamcluster.cpp:380:29: note: got vectype for stmt: p2$8_238 = MEM[(const struct Point &)_74 + 8];
vector(2) long unsigned int
streamcluster.cpp:380:29: note: got vectype for stmt: center_table.50_83 = center_table;
vector(2) long unsigned int
streamcluster.cpp:380:29: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:380:29: note: not consecutive access p2$8_238 = MEM[(const struct Point &)_74 + 8];
streamcluster.cpp:380:29: note: not consecutive access center_table.50_83 = center_table;
streamcluster.cpp:380:29: note: not consecutive access _71 = points_232(D)->p;
streamcluster.cpp:380:29: note: not consecutive access _70 = points_232(D)->dim;
streamcluster.cpp:380:29: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:380:29: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_283 = MEM[(const struct Point &)_77 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _300 = *_299;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _302 = *_301;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:363:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:363:3: note: got vectype for stmt: _78 = _77->weight;
vector(4) float
streamcluster.cpp:363:3: note: got vectype for stmt: current_cost_263 = _77->cost;
vector(4) float
streamcluster.cpp:363:3: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:363:3: note: Detected interleaving load _77->weight and _77->cost
streamcluster.cpp:363:3: note: Detected interleaving load of size 8 starting with _78 = _77->weight;
streamcluster.cpp:363:3: note: There is a gap of 1 elements after the group
streamcluster.cpp:363:3: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:363:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:369:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:369:22: note: got vectype for stmt: *_79 = 1;
vector(16) unsigned char
streamcluster.cpp:369:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:369:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:380:32: note: === vect_analyze_data_refs ===
streamcluster.cpp:380:32: note: got vectype for stmt: _82 = _77->assign;
vector(2) long int
streamcluster.cpp:380:32: note: got vectype for stmt: _87 = *_86;
vector(4) int
streamcluster.cpp:380:32: note: got vectype for stmt: _91 = *_90;
vector(2) double
streamcluster.cpp:380:32: note: got vectype for stmt: *_90 = _94;
vector(2) double
streamcluster.cpp:380:32: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:380:32: note: Detected single element interleaving _77->assign step 32
streamcluster.cpp:380:32: note: not consecutive access _91 = *_90;
streamcluster.cpp:380:32: note: not consecutive access *_90 = _94;
streamcluster.cpp:380:32: note: not consecutive access _87 = *_86;
streamcluster.cpp:380:32: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:380:32: note: ===vect_slp_analyze_bb===
streamcluster.cpp:359:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:359:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:359:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:359:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:392:18: note: === vect_analyze_data_refs ===
streamcluster.cpp:392:18: note: got vectype for stmt: is_center.52_96 = is_center;
vector(2) long unsigned int
streamcluster.cpp:392:18: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:392:18: note: ===vect_slp_analyze_bb===
streamcluster.cpp:392:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:392:3: note: got vectype for stmt: _99 = *_98;
vector(16) unsigned char
streamcluster.cpp:392:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:392:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:395:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:395:22: note: got vectype for stmt: pretmp_626 = *_625;
vector(4) int
streamcluster.cpp:395:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:395:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:395:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:395:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:395:22: note: got vectype for stmt: _109 = *_108;
vector(2) double
streamcluster.cpp:395:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:395:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:395:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:395:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:399:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:399:4: note: got vectype for stmt: *_116 = low_344;
vector(2) double
streamcluster.cpp:399:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:399:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:405:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:405:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:405:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:391:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:391:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:391:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:391:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:391:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:391:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:391:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:418:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:418:2: note: got vectype for stmt: *_120 = prephitmp_638;
vector(2) double
streamcluster.cpp:418:2: note: got vectype for stmt: *_124 = cost_of_opening_x_324;
vector(2) double
streamcluster.cpp:418:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:418:2: note: Detected interleaving store *_120 and *_124
streamcluster.cpp:418:2: note: Detected interleaving store of size 2 starting with *_120 = prephitmp_638;
streamcluster.cpp:418:2: note: === vect_pattern_recog ===
streamcluster.cpp:418:2: note: vect_is_simple_use: operand _118
streamcluster.cpp:418:2: note: def_stmt: _118 = (long unsigned int) _117;
streamcluster.cpp:418:2: note: type of def: internal
streamcluster.cpp:418:2: note: vect_is_simple_use: operand _117
streamcluster.cpp:418:2: note: def_stmt: _117 = K_243 + _746;
streamcluster.cpp:418:2: note: type of def: internal
streamcluster.cpp:418:2: note: vect_is_simple_use: operand 8
streamcluster.cpp:418:2: note: vect_is_simple_use: operand _122
streamcluster.cpp:418:2: note: def_stmt: _122 = _118 + 1;
streamcluster.cpp:418:2: note: type of def: internal
streamcluster.cpp:418:2: note: === vect_analyze_slp ===
streamcluster.cpp:418:2: note: Build SLP for *_120 = prephitmp_638;
streamcluster.cpp:418:2: note: Build SLP for *_124 = cost_of_opening_x_324;
streamcluster.cpp:418:2: note: vect_is_simple_use: operand prephitmp_638
streamcluster.cpp:418:2: note: def_stmt: prephitmp_638 = PHI <_637(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: vect_is_simple_use: operand cost_of_opening_x_324
streamcluster.cpp:418:2: note: def_stmt: cost_of_opening_x_324 = PHI <cost_of_opening_x_383(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: Final SLP tree for instance:
streamcluster.cpp:418:2: note: node
streamcluster.cpp:418:2: note: 	stmt 0 *_120 = prephitmp_638;
streamcluster.cpp:418:2: note: 	stmt 1 *_124 = cost_of_opening_x_324;
streamcluster.cpp:418:2: note: === vect_slp_analyze_and_verify_instance_alignment ===
streamcluster.cpp:418:2: note: vect_compute_data_ref_alignment:
streamcluster.cpp:418:2: note: can't force alignment of ref: *_120
streamcluster.cpp:418:2: note: Vectorizing an unaligned access.
streamcluster.cpp:418:2: note: === vect_slp_analyze_instance_dependence ===
streamcluster.cpp:418:2: note: === vect_slp_analyze_operations ===
streamcluster.cpp:418:2: note: ==> examining statement: *_120 = prephitmp_638;
streamcluster.cpp:418:2: note: vect_is_simple_use: operand prephitmp_638
streamcluster.cpp:418:2: note: def_stmt: prephitmp_638 = PHI <_637(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: vect_is_simple_use: operand cost_of_opening_x_324
streamcluster.cpp:418:2: note: def_stmt: cost_of_opening_x_324 = PHI <cost_of_opening_x_383(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: ==> examining statement: *_124 = cost_of_opening_x_324;
streamcluster.cpp:418:2: note: vect_is_simple_use: operand cost_of_opening_x_324
streamcluster.cpp:418:2: note: def_stmt: cost_of_opening_x_324 = PHI <cost_of_opening_x_383(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: === vect_analyze_slp_cost ===
streamcluster.cpp:418:2: note: vect_model_store_cost: unaligned supported by hardware.
streamcluster.cpp:418:2: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:418:2: note: vect_is_simple_use: operand prephitmp_638
streamcluster.cpp:418:2: note: def_stmt: prephitmp_638 = PHI <_637(50), 0.0(27)>
streamcluster.cpp:418:2: note: type of def: external
streamcluster.cpp:418:2: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
streamcluster.cpp:418:2: note: not vectorized: vectorization is not profitable.
streamcluster.cpp:418:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:421:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:421:21: note: got vectype for stmt: gl_cost_of_opening_x = z_269(D);
vector(2) double
streamcluster.cpp:421:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:421:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:421:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:421:21: note: got vectype for stmt: gl_number_of_centers_to_close_lsm.347_390 = gl_number_of_centers_to_close;
vector(4) int
streamcluster.cpp:421:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:421:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:421:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:421:21: note: got vectype for stmt: _130 = *_129;
vector(2) double
streamcluster.cpp:421:21: note: got vectype for stmt: _137 = *_136;
vector(2) double
streamcluster.cpp:421:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:421:21: note: Detected interleaving load *_129 and *_136
streamcluster.cpp:421:21: note: Detected interleaving load of size 2 starting with _130 = *_129;
streamcluster.cpp:421:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:421:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:421:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:421:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:421:21: note: got vectype for stmt: gl_number_of_centers_to_close = _640;
vector(4) int
streamcluster.cpp:421:21: note: got vectype for stmt: gl_cost_of_opening_x = _333;
vector(2) double
streamcluster.cpp:421:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:421:21: note: not consecutive access gl_cost_of_opening_x = _333;
streamcluster.cpp:421:21: note: not consecutive access gl_number_of_centers_to_close = _640;
streamcluster.cpp:421:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:421:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:432:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:432:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:432:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:434:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:434:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:434:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:440:40: note: === vect_analyze_data_refs ===
streamcluster.cpp:440:40: note: got vectype for stmt: center_table.65_142 = center_table;
vector(2) long unsigned int
streamcluster.cpp:440:40: note: got vectype for stmt: _143 = points_232(D)->p;
vector(2) long unsigned int
streamcluster.cpp:440:40: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:440:40: note: not consecutive access center_table.65_142 = center_table;
streamcluster.cpp:440:40: note: not consecutive access _143 = points_232(D)->p;
streamcluster.cpp:440:40: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:440:40: note: ===vect_slp_analyze_bb===
streamcluster.cpp:436:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:436:4: note: got vectype for stmt: _157 = *_156;
vector(16) unsigned char
streamcluster.cpp:436:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:436:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:436:29: note: === vect_analyze_data_refs ===
streamcluster.cpp:436:29: note: got vectype for stmt: _147 = _146->assign;
vector(2) long int
streamcluster.cpp:436:29: note: got vectype for stmt: _151 = *_150;
vector(4) int
streamcluster.cpp:436:29: note: got vectype for stmt: _155 = *_154;
vector(2) double
streamcluster.cpp:436:29: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:436:29: note: Detected single element interleaving _146->assign step 32
streamcluster.cpp:436:29: note: not consecutive access _155 = *_154;
streamcluster.cpp:436:29: note: not consecutive access _151 = *_150;
streamcluster.cpp:436:29: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:436:29: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _158 = _146->weight;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _159 = points_232(D)->dim;
vector(4) int
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_241 = MEM[(const struct Point &)_146 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: got vectype for stmt: p2$8_244 = MEM[(const struct Point &)_162 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: Detected single element interleaving MEM[(const struct Point &)_146 + 8] step 32
streamcluster.cpp:125:16: note: Detected single element interleaving _146->weight step 32
streamcluster.cpp:125:16: note: not consecutive access p2$8_244 = MEM[(const struct Point &)_162 + 8];
streamcluster.cpp:125:16: note: not consecutive access _159 = points_232(D)->dim;
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _312 = *_311;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _314 = *_313;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:441:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:441:25: note: got vectype for stmt: _146->cost = _163;
vector(4) float
streamcluster.cpp:441:25: note: got vectype for stmt: _146->assign = x_261(D);
vector(2) long int
streamcluster.cpp:441:25: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:441:25: note: not consecutive access _146->assign = x_261(D);
streamcluster.cpp:441:25: note: not consecutive access _146->cost = _163;
streamcluster.cpp:441:25: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:441:25: note: ===vect_slp_analyze_bb===
streamcluster.cpp:434:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:434:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:434:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:434:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:445:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:445:19: note: got vectype for stmt: is_center.68_165 = is_center;
vector(2) long unsigned int
streamcluster.cpp:445:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:445:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:445:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:445:4: note: got vectype for stmt: _168 = *_167;
vector(16) unsigned char
streamcluster.cpp:445:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:445:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:445:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:445:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:445:21: note: got vectype for stmt: _172 = *_171;
vector(4) int
streamcluster.cpp:445:21: note: got vectype for stmt: _176 = *_175;
vector(2) double
streamcluster.cpp:445:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:445:21: note: not consecutive access _176 = *_175;
streamcluster.cpp:445:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:445:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:445:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:446:18: note: === vect_analyze_data_refs ===
streamcluster.cpp:446:18: note: got vectype for stmt: *_167 = 0;
vector(16) unsigned char
streamcluster.cpp:446:18: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:446:18: note: ===vect_slp_analyze_bb===
streamcluster.cpp:444:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:444:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:444:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:444:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:449:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:449:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:449:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:450:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:450:17: note: got vectype for stmt: is_center.71_180 = is_center;
vector(2) long unsigned int
streamcluster.cpp:450:17: note: got vectype for stmt: *_182 = 1;
vector(16) unsigned char
streamcluster.cpp:450:17: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:450:17: note: not consecutive access *_182 = 1;
streamcluster.cpp:450:17: note: not consecutive access is_center.71_180 = is_center;
streamcluster.cpp:450:17: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:450:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:453:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:453:3: note: got vectype for stmt: pretmp_683 = gl_cost_of_opening_x;
vector(2) double
streamcluster.cpp:453:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:453:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:454:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:454:16: note: got vectype for stmt: _183 = *numcenters_239(D);
vector(2) long int
streamcluster.cpp:454:16: note: got vectype for stmt: gl_number_of_centers_to_close.73_185 = gl_number_of_centers_to_close;
vector(4) int
streamcluster.cpp:454:16: note: got vectype for stmt: *numcenters_239(D) = _187;
vector(2) long int
streamcluster.cpp:454:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:454:16: note: not consecutive access gl_number_of_centers_to_close.73_185 = gl_number_of_centers_to_close;
streamcluster.cpp:454:16: note: not consecutive access _183 = *numcenters_239(D);
streamcluster.cpp:454:16: note: not consecutive access *numcenters_239(D) = _187;
streamcluster.cpp:454:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:454:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:458:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:458:25: note: got vectype for stmt: gl_cost_of_opening_x = 0.0;
vector(2) double
streamcluster.cpp:458:25: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:458:25: note: ===vect_slp_analyze_bb===
streamcluster.cpp:471:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:471:10: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:471:10: note: ===vect_slp_analyze_bb===
streamcluster.cpp:432:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:432:2: note: got vectype for stmt: gl_cost_of_opening_x.64_363 = gl_cost_of_opening_x;
vector(2) double
streamcluster.cpp:432:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:432:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:432:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:432:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:432:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:464:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:320:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:320:25: note: got vectype for stmt: *_226 = 0.0;
vector(2) double
streamcluster.cpp:320:25: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:320:25: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:70: note: ===vect_slp_analyze_bb===
streamcluster.cpp:339:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:339:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:339:21: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:70: note: ===vect_slp_analyze_bb===
streamcluster.cpp:339:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:339:21: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:495
streamcluster.cpp:495:23: note: ===== analyze_loop_nest =====
streamcluster.cpp:495:23: note: === vect_analyze_loop_form ===
streamcluster.cpp:495:23: note: not vectorized: multiple nested loops.
streamcluster.cpp:495:23: note: bad loop form.

Analyzing loop at streamcluster.cpp:506
streamcluster.cpp:506:17: note: ===== analyze_loop_nest =====
streamcluster.cpp:506:17: note: === vect_analyze_loop_form ===
streamcluster.cpp:506:17: note: === get_loop_niters ===
streamcluster.cpp:506:17: note: Symbolic number of iterations is (unsigned long) iter_29(D)
streamcluster.cpp:506:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at streamcluster.cpp:113
streamcluster.cpp:113:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:113:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:113:16: note: === get_loop_niters ===
streamcluster.cpp:113:16: note: Symbolic number of iterations is (unsigned long) numfeasible_27(D)
streamcluster.cpp:113:16: note: not vectorized: loop contains function calls or data references that cannot be analyzed
streamcluster.cpp:481:7: note: vectorized 0 loops in function.
streamcluster.cpp:481:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:500:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:500:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:500:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: got vectype for stmt: temp_49 = *_48;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: _53 = *_52;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_48 = _53;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_52 = temp_49;
vector(4) int
streamcluster.cpp:113:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:113:16: note: not consecutive access _53 = *_52;
streamcluster.cpp:113:16: note: not consecutive access *_52 = temp_49;
streamcluster.cpp:113:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:508:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:508:19: note: got vectype for stmt: _9 = *_8;
vector(4) int
streamcluster.cpp:508:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:515:14: note: === vect_analyze_data_refs ===
streamcluster.cpp:515:14: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:545
streamcluster.cpp:545:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:545:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:545:22: note: === get_loop_niters ===
streamcluster.cpp:545:22: note: Symbolic number of iterations is (unsigned int) numfeasible_58
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_19 = i_109;
vector(4) int
streamcluster.cpp:545:22: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:545:22: note: Analyze phi: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: Access function of PHI: {0, +, 1}_4
streamcluster.cpp:545:22: note: step: 1,  init: 0
streamcluster.cpp:545:22: note: Detected induction.
streamcluster.cpp:545:22: note: Analyze phi: .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: === vect_pattern_recog ===
streamcluster.cpp:545:22: note: vect_is_simple_use: operand _17
streamcluster.cpp:545:22: note: def_stmt: _17 = (long unsigned int) i_109;
streamcluster.cpp:545:22: note: type of def: internal
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: vect_is_simple_use: operand 4
streamcluster.cpp:545:22: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:545:22: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:545:22: note: init: phi relevant? i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: init: phi relevant? .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: init: stmt relevant? _17 = (long unsigned int) i_109;
streamcluster.cpp:545:22: note: init: stmt relevant? _18 = _17 * 4;
streamcluster.cpp:545:22: note: init: stmt relevant? _19 = _14 + _18;
streamcluster.cpp:545:22: note: init: stmt relevant? *_19 = i_109;
streamcluster.cpp:545:22: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:545:22: note: mark relevant 5, live 0: *_19 = i_109;
streamcluster.cpp:545:22: note: init: stmt relevant? i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: init: stmt relevant? if (numfeasible_58 <= i_96)
streamcluster.cpp:545:22: note: worklist: examine stmt: *_19 = i_109;
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: mark relevant 5, live 0: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: worklist: examine stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_96
streamcluster.cpp:545:22: note: def_stmt: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: type of def: internal
streamcluster.cpp:545:22: note: mark relevant 5, live 0: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: vect_is_simple_use: operand 0
streamcluster.cpp:545:22: note: worklist: examine stmt: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: mark relevant 5, live 0: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: already marked relevant/live.
streamcluster.cpp:545:22: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:545:22: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:545:22: note: ==> examining phi: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: get vectype for scalar type:  int
streamcluster.cpp:545:22: note: vectype: vector(4) int
streamcluster.cpp:545:22: note: nunits = 4
streamcluster.cpp:545:22: note: ==> examining phi: .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: ==> examining statement: _17 = (long unsigned int) i_109;
streamcluster.cpp:545:22: note: skip.
streamcluster.cpp:545:22: note: ==> examining statement: _18 = _17 * 4;
streamcluster.cpp:545:22: note: skip.
streamcluster.cpp:545:22: note: ==> examining statement: _19 = _14 + _18;
streamcluster.cpp:545:22: note: skip.
streamcluster.cpp:545:22: note: ==> examining statement: *_19 = i_109;
streamcluster.cpp:545:22: note: get vectype for scalar type:  int
streamcluster.cpp:545:22: note: vectype: vector(4) int
streamcluster.cpp:545:22: note: nunits = 4
streamcluster.cpp:545:22: note: ==> examining statement: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: get vectype for scalar type:  int
streamcluster.cpp:545:22: note: vectype: vector(4) int
streamcluster.cpp:545:22: note: get vectype for scalar type:  int
streamcluster.cpp:545:22: note: vectype: vector(4) int
streamcluster.cpp:545:22: note: nunits = 4
streamcluster.cpp:545:22: note: ==> examining statement: if (numfeasible_58 <= i_96)
streamcluster.cpp:545:22: note: skip.
streamcluster.cpp:545:22: note: vectorization factor = 4
streamcluster.cpp:545:22: note: === vect_analyze_slp ===
streamcluster.cpp:545:22: note: === vect_make_slp_decision ===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:545:22: note: vect_compute_data_ref_alignment:
streamcluster.cpp:545:22: note: can't force alignment of ref: *_19
streamcluster.cpp:545:22: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:545:22: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:545:22: note: Unknown misalignment, naturally aligned
streamcluster.cpp:545:22: note: vect_can_advance_ivs_p:
streamcluster.cpp:545:22: note: Analyze phi: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: Analyze phi: .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: reduc or virtual phi. skip.
streamcluster.cpp:545:22: note: Alignment of access forced using peeling.
streamcluster.cpp:545:22: note: Peeling for alignment will be applied.
streamcluster.cpp:545:22: note: === vect_analyze_loop_operations ===
streamcluster.cpp:545:22: note: examining phi: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: === vectorizable_induction ===
streamcluster.cpp:545:22: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
streamcluster.cpp:545:22: note: examining phi: .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: ==> examining statement: _17 = (long unsigned int) i_109;
streamcluster.cpp:545:22: note: irrelevant.
streamcluster.cpp:545:22: note: ==> examining statement: _18 = _17 * 4;
streamcluster.cpp:545:22: note: irrelevant.
streamcluster.cpp:545:22: note: ==> examining statement: _19 = _14 + _18;
streamcluster.cpp:545:22: note: irrelevant.
streamcluster.cpp:545:22: note: ==> examining statement: *_19 = i_109;
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: vect_model_store_cost: aligned.
streamcluster.cpp:545:22: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:545:22: note: ==> examining statement: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: vect_is_simple_use: operand 1
streamcluster.cpp:545:22: note: === vectorizable_operation ===
streamcluster.cpp:545:22: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:545:22: note: ==> examining statement: if (numfeasible_58 <= i_96)
streamcluster.cpp:545:22: note: irrelevant.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
streamcluster.cpp:545:22: note: Cost model analysis: 
  Vector inside of loop cost: 3
  Vector prologue cost: 11
  Vector epilogue cost: 8
  Scalar iteration cost: 2
  Scalar outside cost: 7
  Vector outside cost: 19
  prologue iterations: 2
  epilogue iterations: 2
  Calculated minimum iters for profitability: 8
streamcluster.cpp:545:22: note:   Runtime profitability threshold = 7
streamcluster.cpp:545:22: note:   Static estimate profitability threshold = 17
streamcluster.cpp:545:22: note: epilog loop required
streamcluster.cpp:545:22: note: vect_can_advance_ivs_p:
streamcluster.cpp:545:22: note: Analyze phi: i_109 = PHI <i_96(9), 0(7)>
streamcluster.cpp:545:22: note: Analyze phi: .MEM_105 = PHI <.MEM_95(9), .MEM_79(7)>
streamcluster.cpp:545:22: note: reduc or virtual phi. skip.
streamcluster.cpp:545:22: note: loop vectorized
streamcluster.cpp:545:22: note: === vec_transform_loop ===
streamcluster.cpp:545:22: note: Profitability threshold is 7 loop iterations.
split exit edge
streamcluster.cpp:545:22: note: created _14
streamcluster.cpp:545:22: note: niters for prolog loop: (unsigned int) -((unsigned long) _14 >> 2) & 3

loop at streamcluster.cpp:546: if (ivtmp_98 >= prolog_loop_niters.440_112)
streamcluster.cpp:545:22: note: === vect_update_inits_of_dr ===
streamcluster.cpp:545:22: note: vect_update_ivs_after_vectorizer: phi: i_109 = PHI <i_96(9), i_97(37)>
streamcluster.cpp:545:22: note: vect_update_ivs_after_vectorizer: phi: .MEM_105 = PHI <.MEM_95(9), .MEM_67(37)>
streamcluster.cpp:545:22: note: reduc or virtual phi. skip.
streamcluster.cpp:545:22: note: ------>vectorizing phi: i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: transform phi.
streamcluster.cpp:545:22: note: transform induction phi.
streamcluster.cpp:545:22: note: created new init_stmt: vect_cst__45 = {i_97, _48, _55, _56};
streamcluster.cpp:545:22: note: created new init_stmt: vect_cst__46 = { 4, 4, 4, 4 };
streamcluster.cpp:545:22: note: transform induction: created def-use cycle: vect_vec_iv_.446_149 = PHI <vect_vec_iv_.446_150(9), vect_cst__45(45)>
vect_vec_iv_.446_150 = vect_vec_iv_.446_149 + vect_cst__46;
streamcluster.cpp:545:22: note: ------>vectorizing phi: .MEM_105 = PHI <.MEM_95(9), .MEM_67(45)>
streamcluster.cpp:545:22: note: ------>vectorizing phi: vect_vec_iv_.446_149 = PHI <vect_vec_iv_.446_150(9), vect_cst__45(45)>
streamcluster.cpp:545:22: note: ------>vectorizing statement: vect_vec_iv_.446_150 = vect_vec_iv_.446_149 + vect_cst__46;
streamcluster.cpp:545:22: note: ------>vectorizing statement: _17 = (long unsigned int) i_109;
streamcluster.cpp:545:22: note: ------>vectorizing statement: _18 = _17 * 4;
streamcluster.cpp:545:22: note: ------>vectorizing statement: _19 = _14 + _18;
streamcluster.cpp:545:22: note: ------>vectorizing statement: *_19 = i_109;
streamcluster.cpp:545:22: note: transform statement.
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: transform store. ncopies = 1
streamcluster.cpp:545:22: note: vect_get_vec_def_for_operand: i_109
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note:   def_stmt =  i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: create vector_type-pointer variable to type: vector(4) int  vectorizing a pointer ref: MEM[(int *)_14]
streamcluster.cpp:545:22: note: created vectp.448_151
streamcluster.cpp:545:22: note: add new stmt: MEM[(int *)vectp.447_153] = vect_vec_iv_.446_149;
streamcluster.cpp:545:22: note: ------>vectorizing statement: i_96 = i_109 + 1;
streamcluster.cpp:545:22: note: transform statement.
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note: vect_is_simple_use: operand 1
streamcluster.cpp:545:22: note: transform binary/unary operation.
streamcluster.cpp:545:22: note: vect_get_vec_def_for_operand: i_109
streamcluster.cpp:545:22: note: vect_is_simple_use: operand i_109
streamcluster.cpp:545:22: note: def_stmt: i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: type of def: induction
streamcluster.cpp:545:22: note:   def_stmt =  i_109 = PHI <i_96(9), i_97(45)>
streamcluster.cpp:545:22: note: vect_get_vec_def_for_operand: 1
streamcluster.cpp:545:22: note: vect_is_simple_use: operand 1
streamcluster.cpp:545:22: note: created new init_stmt: vect_cst__156 = { 1, 1, 1, 1 };
streamcluster.cpp:545:22: note: add new stmt: vect_i_96.449_157 = vect_vec_iv_.446_149 + vect_cst__156;
streamcluster.cpp:545:22: note: ------>vectorizing statement: vectp.447_154 = vectp.447_153 + 16;
streamcluster.cpp:545:22: note: ------>vectorizing statement: if (numfeasible_58 <= i_96)

loop at streamcluster.cpp:546: if (ivtmp_159 >= bnd.443_128)
streamcluster.cpp:545:22: note: LOOP VECTORIZED


Analyzing loop at streamcluster.cpp:559
streamcluster.cpp:559:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:559:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:559:21: note: not vectorized: multiple nested loops.
streamcluster.cpp:559:21: note: bad loop form.

Analyzing loop at streamcluster.cpp:568
streamcluster.cpp:568:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:568:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:568:16: note: not vectorized: control flow in loop.
streamcluster.cpp:568:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:568
streamcluster.cpp:568:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:568:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:568:16: note: not vectorized: control flow in loop.
streamcluster.cpp:568:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:554
streamcluster.cpp:554:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:554:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:554:20: note: === get_loop_niters ===
streamcluster.cpp:554:20: note: Symbolic number of iterations is (unsigned long) _16 + 18446744073709551615
streamcluster.cpp:554:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:554:20: note: got vectype for stmt: _29 = *_28;
vector(4) float
streamcluster.cpp:554:20: note: got vectype for stmt: _32 = _31->weight;
vector(4) float
streamcluster.cpp:554:20: note: got vectype for stmt: *_33 = _34;
vector(4) float
streamcluster.cpp:554:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:554:20: note: Analyze phi: i_100 = PHI <i_85(13), 1(11)>
streamcluster.cpp:554:20: note: Access function of PHI: {1, +, 1}_1
streamcluster.cpp:554:20: note: step: 1,  init: 1
streamcluster.cpp:554:20: note: Detected induction.
streamcluster.cpp:554:20: note: Analyze phi: .MEM_102 = PHI <.MEM_84(13), .MEM_83(11)>
streamcluster.cpp:554:20: note: === vect_pattern_recog ===
streamcluster.cpp:554:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:554:20: note: def_stmt: _25 = (long unsigned int) i_100;
streamcluster.cpp:554:20: note: type of def: internal
streamcluster.cpp:554:20: note: vect_is_simple_use: operand i_100
streamcluster.cpp:554:20: note: def_stmt: i_100 = PHI <i_85(13), 1(11)>
streamcluster.cpp:554:20: note: type of def: induction
streamcluster.cpp:554:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:554:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:554:20: note: def_stmt: _25 = (long unsigned int) i_100;
streamcluster.cpp:554:20: note: type of def: internal
streamcluster.cpp:554:20: note: vect_is_simple_use: operand i_100
streamcluster.cpp:554:20: note: def_stmt: i_100 = PHI <i_85(13), 1(11)>
streamcluster.cpp:554:20: note: type of def: induction
streamcluster.cpp:554:20: note: vect_is_simple_use: operand 32
streamcluster.cpp:554:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:554:20: note: Detected single element interleaving _31->weight step 32
streamcluster.cpp:554:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:554:20: note: init: phi relevant? i_100 = PHI <i_85(13), 1(11)>
streamcluster.cpp:554:20: note: init: phi relevant? .MEM_102 = PHI <.MEM_84(13), .MEM_83(11)>
streamcluster.cpp:554:20: note: init: stmt relevant? _25 = (long unsigned int) i_100;
streamcluster.cpp:554:20: note: init: stmt relevant? _26 = _25 * 4;
streamcluster.cpp:554:20: note: init: stmt relevant? _27 = _26 + 18446744073709551612;
streamcluster.cpp:554:20: note: init: stmt relevant? _28 = accumweight_82 + _27;
streamcluster.cpp:554:20: note: init: stmt relevant? _29 = *_28;
streamcluster.cpp:554:20: note: init: stmt relevant? _30 = _25 * 32;
streamcluster.cpp:554:20: note: init: stmt relevant? _31 = _22 + _30;
streamcluster.cpp:554:20: note: init: stmt relevant? _32 = _31->weight;
streamcluster.cpp:554:20: note: init: stmt relevant? _33 = accumweight_82 + _26;
streamcluster.cpp:554:20: note: init: stmt relevant? _34 = _29 + _32;
streamcluster.cpp:554:20: note: init: stmt relevant? *_33 = _34;
streamcluster.cpp:554:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:554:20: note: mark relevant 5, live 0: *_33 = _34;
streamcluster.cpp:554:20: note: init: stmt relevant? i_85 = i_100 + 1;
streamcluster.cpp:554:20: note: init: stmt relevant? _24 = (long int) i_85;
streamcluster.cpp:554:20: note: init: stmt relevant? if (_16 <= _24)
streamcluster.cpp:554:20: note: worklist: examine stmt: *_33 = _34;
streamcluster.cpp:554:20: note: vect_is_simple_use: operand _34
streamcluster.cpp:554:20: note: def_stmt: _34 = _29 + _32;
streamcluster.cpp:554:20: note: type of def: internal
streamcluster.cpp:554:20: note: mark relevant 5, live 0: _34 = _29 + _32;
streamcluster.cpp:554:20: note: worklist: examine stmt: _34 = _29 + _32;
streamcluster.cpp:554:20: note: vect_is_simple_use: operand _29
streamcluster.cpp:554:20: note: def_stmt: _29 = *_28;
streamcluster.cpp:554:20: note: type of def: internal
streamcluster.cpp:554:20: note: mark relevant 5, live 0: _29 = *_28;
streamcluster.cpp:554:20: note: vect_is_simple_use: operand _32
streamcluster.cpp:554:20: note: def_stmt: _32 = _31->weight;
streamcluster.cpp:554:20: note: type of def: internal
streamcluster.cpp:554:20: note: mark relevant 5, live 0: _32 = _31->weight;
streamcluster.cpp:554:20: note: worklist: examine stmt: _32 = _31->weight;
streamcluster.cpp:554:20: note: worklist: examine stmt: _29 = *_28;
streamcluster.cpp:554:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:554:20: note: dependence distance  = 1.
streamcluster.cpp:554:20: note: not vectorized, possible dependence between data-refs *_28 and *_33
streamcluster.cpp:554:20: note: bad data dependence.
streamcluster.cpp:518:5: note: vectorized 1 loops in function.
streamcluster.cpp:518:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:520:38: note: === vect_analyze_data_refs ===
streamcluster.cpp:520:38: note: got vectype for stmt: _1 = points_71(D)->num;
vector(2) long int
streamcluster.cpp:520:38: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:520:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:520:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:520:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:521:15: note: === vect_analyze_data_refs ===
streamcluster.cpp:521:15: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:521:15: note: ===vect_slp_analyze_bb===
streamcluster.cpp:522:26: note: === vect_analyze_data_refs ===
streamcluster.cpp:522:26: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:544:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:544:2: note: got vectype for stmt: *feasible_78(D) = _14;
vector(2) long unsigned int
streamcluster.cpp:544:2: note: got vectype for stmt: _16 = points_71(D)->num;
vector(2) long int
streamcluster.cpp:544:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:544:2: note: not consecutive access _16 = points_71(D)->num;
streamcluster.cpp:544:2: note: not consecutive access *feasible_78(D) = _14;
streamcluster.cpp:544:2: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:544:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:3: note: got vectype for stmt: *_192 = i_187;
vector(4) int
streamcluster.cpp:545:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:3: note: got vectype for stmt: *_201 = i_196;
vector(4) int
streamcluster.cpp:545:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:3: note: got vectype for stmt: *_126 = i_137;
vector(4) int
streamcluster.cpp:545:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:546:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:546:19: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.447_153] = vect_vec_iv_.446_149;
 scalar_type: vector(4) int
streamcluster.cpp:546:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:546:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:546:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:546:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:546:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:546:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:546:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_157 = i_130;
vector(4) int
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_163 = i_95;
vector(4) int
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_170 = i_166;
vector(4) int
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_177 = i_173;
vector(4) int
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:22: note: got vectype for stmt: *_184 = i_180;
vector(4) int
streamcluster.cpp:545:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:545:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:545:3: note: got vectype for stmt: *_15 = i_63;
vector(4) int
streamcluster.cpp:545:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:545:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:550:14: note: === vect_analyze_data_refs ===
streamcluster.cpp:550:14: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:554:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:554:20: note: got vectype for stmt: _22 = points_71(D)->p;
vector(2) long unsigned int
streamcluster.cpp:554:20: note: got vectype for stmt: _23 = _22->weight;
vector(4) float
streamcluster.cpp:554:20: note: got vectype for stmt: *accumweight_82 = _23;
vector(4) float
streamcluster.cpp:554:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:554:20: note: not consecutive access _23 = _22->weight;
streamcluster.cpp:554:20: note: not consecutive access *accumweight_82 = _23;
streamcluster.cpp:554:20: note: not consecutive access _22 = points_71(D)->p;
streamcluster.cpp:554:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:554:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:554:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:554:20: note: got vectype for stmt: _122 = *accumweight_82;
vector(4) float
streamcluster.cpp:554:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:554:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:554:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:554:20: note: got vectype for stmt: _32 = _31->weight;
vector(4) float
streamcluster.cpp:554:20: note: got vectype for stmt: *_33 = _34;
vector(4) float
streamcluster.cpp:554:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:554:20: note: Detected single element interleaving _31->weight step 32
streamcluster.cpp:554:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:554:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:554:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:559:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:559:21: note: got vectype for stmt: totalweight_86 = *_36;
vector(4) float
streamcluster.cpp:559:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:559:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:559:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:564:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:564:3: note: got vectype for stmt: _43 = *accumweight_82;
vector(4) float
streamcluster.cpp:564:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:564:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:565:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:565:19: note: got vectype for stmt: _44 = *feasible_78(D);
vector(2) long unsigned int
streamcluster.cpp:565:19: note: got vectype for stmt: *_47 = 0;
vector(4) int
streamcluster.cpp:565:19: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:565:19: note: not consecutive access *_47 = 0;
streamcluster.cpp:565:19: note: not consecutive access _44 = *feasible_78(D);
streamcluster.cpp:565:19: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:565:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:563:5: note: === vect_analyze_data_refs ===
streamcluster.cpp:563:5: note: got vectype for stmt: _40 = points_71(D)->num;
vector(2) long int
streamcluster.cpp:563:5: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:563:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:568:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:568:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:568:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:570:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:570:4: note: got vectype for stmt: _139 = *_144;
vector(4) float
streamcluster.cpp:570:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:570:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:570:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:570:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:570:4: note: got vectype for stmt: _53 = *_52;
vector(4) float
streamcluster.cpp:570:4: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:570:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:570:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:568:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:568:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:568:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:568:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:576:18: note: === vect_analyze_data_refs ===
streamcluster.cpp:576:18: note: got vectype for stmt: _54 = *feasible_78(D);
vector(2) long unsigned int
streamcluster.cpp:576:18: note: got vectype for stmt: *_57 = r_115;
vector(4) int
streamcluster.cpp:576:18: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:576:18: note: not consecutive access *_57 = r_115;
streamcluster.cpp:576:18: note: not consecutive access _54 = *feasible_78(D);
streamcluster.cpp:576:18: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:576:18: note: ===vect_slp_analyze_bb===
streamcluster.cpp:559:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:559:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:559:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:559:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:579:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:579:6: note: === vect_analyze_data_refs ===
streamcluster.cpp:579:6: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:633
streamcluster.cpp:633:25: note: ===== analyze_loop_nest =====
streamcluster.cpp:633:25: note: === vect_analyze_loop_form ===
streamcluster.cpp:633:25: note: === get_loop_niters ===
streamcluster.cpp:633:25: note: Symbolic number of iterations is (unsigned long) k2_115 - (unsigned long) k1_144
streamcluster.cpp:633:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:633:25: note: got vectype for stmt: _36->assign = kk_386;
vector(2) long int
streamcluster.cpp:633:25: note: got vectype for stmt: _36->cost = 0.0;
vector(4) float
streamcluster.cpp:633:25: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:633:25: note: Analyze phi: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: Access function of PHI: {k1_144, +, 1}_7
streamcluster.cpp:633:25: note: step: 1,  init: k1_144
streamcluster.cpp:633:25: note: Detected induction.
streamcluster.cpp:633:25: note: Analyze phi: .MEM_392 = PHI <.MEM_189(26), .MEM_151(24)>
streamcluster.cpp:633:25: note: === vect_pattern_recog ===
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk.89_34
streamcluster.cpp:633:25: note: def_stmt: kk.89_34 = (long unsigned int) kk_386;
streamcluster.cpp:633:25: note: type of def: internal
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_386
streamcluster.cpp:633:25: note: def_stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: type of def: induction
streamcluster.cpp:633:25: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:633:25: note: not consecutive access _36->assign = kk_386;
streamcluster.cpp:633:25: note: using strided accesses
streamcluster.cpp:633:25: note: not consecutive access _36->cost = 0.0;
streamcluster.cpp:633:25: note: using strided accesses
streamcluster.cpp:633:25: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:633:25: note: init: phi relevant? kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: init: phi relevant? .MEM_392 = PHI <.MEM_189(26), .MEM_151(24)>
streamcluster.cpp:633:25: note: init: stmt relevant? kk.89_34 = (long unsigned int) kk_386;
streamcluster.cpp:633:25: note: init: stmt relevant? _35 = kk.89_34 * 32;
streamcluster.cpp:633:25: note: init: stmt relevant? _36 = _33 + _35;
streamcluster.cpp:633:25: note: init: stmt relevant? _36->assign = kk_386;
streamcluster.cpp:633:25: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:633:25: note: mark relevant 5, live 0: _36->assign = kk_386;
streamcluster.cpp:633:25: note: init: stmt relevant? _36->cost = 0.0;
streamcluster.cpp:633:25: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:633:25: note: mark relevant 5, live 0: _36->cost = 0.0;
streamcluster.cpp:633:25: note: init: stmt relevant? kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: init: stmt relevant? if (k2_115 <= kk_190)
streamcluster.cpp:633:25: note: worklist: examine stmt: _36->cost = 0.0;
streamcluster.cpp:633:25: note: worklist: examine stmt: _36->assign = kk_386;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_386
streamcluster.cpp:633:25: note: def_stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: type of def: induction
streamcluster.cpp:633:25: note: mark relevant 5, live 0: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: worklist: examine stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_190
streamcluster.cpp:633:25: note: def_stmt: kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: type of def: internal
streamcluster.cpp:633:25: note: mark relevant 5, live 0: kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand k1_144
streamcluster.cpp:633:25: note: def_stmt: k1_144 = _8 * bsize_143;
streamcluster.cpp:633:25: note: type of def: external
streamcluster.cpp:633:25: note: def_stmt is out of loop.
streamcluster.cpp:633:25: note: worklist: examine stmt: kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_386
streamcluster.cpp:633:25: note: def_stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: type of def: induction
streamcluster.cpp:633:25: note: mark relevant 5, live 0: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: already marked relevant/live.
streamcluster.cpp:633:25: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:633:25: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:633:25: note: ==> examining phi: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: get vectype for scalar type:  long int
streamcluster.cpp:633:25: note: vectype: vector(2) long int
streamcluster.cpp:633:25: note: nunits = 2
streamcluster.cpp:633:25: note: ==> examining phi: .MEM_392 = PHI <.MEM_189(26), .MEM_151(24)>
streamcluster.cpp:633:25: note: ==> examining statement: kk.89_34 = (long unsigned int) kk_386;
streamcluster.cpp:633:25: note: skip.
streamcluster.cpp:633:25: note: ==> examining statement: _35 = kk.89_34 * 32;
streamcluster.cpp:633:25: note: skip.
streamcluster.cpp:633:25: note: ==> examining statement: _36 = _33 + _35;
streamcluster.cpp:633:25: note: skip.
streamcluster.cpp:633:25: note: ==> examining statement: _36->assign = kk_386;
streamcluster.cpp:633:25: note: get vectype for scalar type:  long int
streamcluster.cpp:633:25: note: vectype: vector(2) long int
streamcluster.cpp:633:25: note: nunits = 2
streamcluster.cpp:633:25: note: ==> examining statement: _36->cost = 0.0;
streamcluster.cpp:633:25: note: get vectype for scalar type:  float
streamcluster.cpp:633:25: note: vectype: vector(4) float
streamcluster.cpp:633:25: note: nunits = 4
streamcluster.cpp:633:25: note: ==> examining statement: kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: get vectype for scalar type:  long int
streamcluster.cpp:633:25: note: vectype: vector(2) long int
streamcluster.cpp:633:25: note: get vectype for scalar type:  long int
streamcluster.cpp:633:25: note: vectype: vector(2) long int
streamcluster.cpp:633:25: note: nunits = 2
streamcluster.cpp:633:25: note: ==> examining statement: if (k2_115 <= kk_190)
streamcluster.cpp:633:25: note: skip.
streamcluster.cpp:633:25: note: vectorization factor = 4
streamcluster.cpp:633:25: note: === vect_analyze_slp ===
streamcluster.cpp:633:25: note: === vect_make_slp_decision ===
streamcluster.cpp:633:25: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:633:25: note: vect_compute_data_ref_alignment:
streamcluster.cpp:633:25: note: can't force alignment of ref: _36->assign
streamcluster.cpp:633:25: note: vect_compute_data_ref_alignment:
streamcluster.cpp:633:25: note: can't force alignment of ref: _36->cost
streamcluster.cpp:633:25: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:633:25: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:633:25: note: vect_can_advance_ivs_p:
streamcluster.cpp:633:25: note: Analyze phi: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: Analyze phi: .MEM_392 = PHI <.MEM_189(26), .MEM_151(24)>
streamcluster.cpp:633:25: note: reduc or virtual phi. skip.
streamcluster.cpp:633:25: note: === vect_analyze_loop_operations ===
streamcluster.cpp:633:25: note: examining phi: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: === vectorizable_induction ===
streamcluster.cpp:633:25: note: vect_model_induction_cost: inside_cost = 2, prologue_cost = 2 .
streamcluster.cpp:633:25: note: examining phi: .MEM_392 = PHI <.MEM_189(26), .MEM_151(24)>
streamcluster.cpp:633:25: note: ==> examining statement: kk.89_34 = (long unsigned int) kk_386;
streamcluster.cpp:633:25: note: irrelevant.
streamcluster.cpp:633:25: note: ==> examining statement: _35 = kk.89_34 * 32;
streamcluster.cpp:633:25: note: irrelevant.
streamcluster.cpp:633:25: note: ==> examining statement: _36 = _33 + _35;
streamcluster.cpp:633:25: note: irrelevant.
streamcluster.cpp:633:25: note: ==> examining statement: _36->assign = kk_386;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_386
streamcluster.cpp:633:25: note: def_stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: type of def: induction
streamcluster.cpp:633:25: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 0 .
streamcluster.cpp:633:25: note: ==> examining statement: _36->cost = 0.0;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand 0.0
streamcluster.cpp:633:25: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 1 .
streamcluster.cpp:633:25: note: ==> examining statement: kk_190 = kk_386 + 1;
streamcluster.cpp:633:25: note: vect_is_simple_use: operand kk_386
streamcluster.cpp:633:25: note: def_stmt: kk_386 = PHI <kk_190(26), k1_144(24)>
streamcluster.cpp:633:25: note: type of def: induction
streamcluster.cpp:633:25: note: vect_is_simple_use: operand 1
streamcluster.cpp:633:25: note: === vectorizable_operation ===
streamcluster.cpp:633:25: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:633:25: note: ==> examining statement: if (k2_115 <= kk_190)
streamcluster.cpp:633:25: note: irrelevant.
streamcluster.cpp:633:25: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
streamcluster.cpp:633:25: note: Cost model analysis: 
  Vector inside of loop cost: 20
  Vector prologue cost: 10
  Vector epilogue cost: 6
  Scalar iteration cost: 3
  Scalar outside cost: 6
  Vector outside cost: 16
  prologue iterations: 0
  epilogue iterations: 2
streamcluster.cpp:633:25: note: cost model: the vector iteration cost = 20 divided by the scalar iteration cost = 3 is greater or equal to the vectorization factor = 4.
streamcluster.cpp:633:25: note: not vectorized: vectorization not profitable.
streamcluster.cpp:633:25: note: not vectorized: vector version will never be profitable.

Analyzing loop at streamcluster.cpp:687
streamcluster.cpp:687:45: note: ===== analyze_loop_nest =====
streamcluster.cpp:687:45: note: === vect_analyze_loop_form ===
streamcluster.cpp:687:45: note: not vectorized: multiple nested loops.
streamcluster.cpp:687:45: note: bad loop form.

Analyzing loop at streamcluster.cpp:495
streamcluster.cpp:495:23: note: ===== analyze_loop_nest =====
streamcluster.cpp:495:23: note: === vect_analyze_loop_form ===
streamcluster.cpp:495:23: note: not vectorized: multiple nested loops.
streamcluster.cpp:495:23: note: bad loop form.

Analyzing loop at streamcluster.cpp:506
streamcluster.cpp:506:17: note: ===== analyze_loop_nest =====
streamcluster.cpp:506:17: note: === vect_analyze_loop_form ===
streamcluster.cpp:506:17: note: === get_loop_niters ===
streamcluster.cpp:506:17: note: Symbolic number of iterations is (unsigned long) _77
streamcluster.cpp:506:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at streamcluster.cpp:113
streamcluster.cpp:113:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:113:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:113:16: note: === get_loop_niters ===
streamcluster.cpp:113:16: note: Symbolic number of iterations is (unsigned long) numfeasible.102_78
streamcluster.cpp:113:16: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at streamcluster.cpp:495
streamcluster.cpp:495:23: note: ===== analyze_loop_nest =====
streamcluster.cpp:495:23: note: === vect_analyze_loop_form ===
streamcluster.cpp:495:23: note: not vectorized: multiple nested loops.
streamcluster.cpp:495:23: note: bad loop form.

Analyzing loop at streamcluster.cpp:506
streamcluster.cpp:506:17: note: ===== analyze_loop_nest =====
streamcluster.cpp:506:17: note: === vect_analyze_loop_form ===
streamcluster.cpp:506:17: note: === get_loop_niters ===
streamcluster.cpp:506:17: note: Symbolic number of iterations is (unsigned long) _63
streamcluster.cpp:506:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at streamcluster.cpp:113
streamcluster.cpp:113:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:113:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:113:16: note: === get_loop_niters ===
streamcluster.cpp:113:16: note: Symbolic number of iterations is (unsigned long) prephitmp_492
streamcluster.cpp:113:16: note: not vectorized: loop contains function calls or data references that cannot be analyzed

Analyzing loop at streamcluster.cpp:674
streamcluster.cpp:674:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:674:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:674:21: note: === get_loop_niters ===
streamcluster.cpp:674:21: note: Symbolic number of iterations is (unsigned long) _390
streamcluster.cpp:674:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:674:21: note: got vectype for stmt: _55 = _54->assign;
vector(2) long int
streamcluster.cpp:674:21: note: got vectype for stmt: *_57 = 1;
vector(16) unsigned char
streamcluster.cpp:674:21: note: not vectorized: not suitable for scatter store *_57 = 1;
streamcluster.cpp:674:21: note: bad data references.

Analyzing loop at streamcluster.cpp:659
streamcluster.cpp:659:13: note: ===== analyze_loop_nest =====
streamcluster.cpp:659:13: note: === vect_analyze_loop_form ===
streamcluster.cpp:659:13: note: not vectorized: control flow in loop.
streamcluster.cpp:659:13: note: bad loop form.

Analyzing loop at streamcluster.cpp:101
streamcluster.cpp:101:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:101:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:101:16: note: === get_loop_niters ===
streamcluster.cpp:101:16: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:101:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:101
streamcluster.cpp:101:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:101:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:101:16: note: === get_loop_niters ===
streamcluster.cpp:101:16: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:101:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:624
streamcluster.cpp:624:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:624:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:624:20: note: === get_loop_niters ===
streamcluster.cpp:624:20: note: Symbolic number of iterations is (unsigned int) pretmp_449
streamcluster.cpp:624:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:624:20: note: got vectype for stmt: _31 = *_30;
vector(2) double
streamcluster.cpp:624:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:624:20: note: Analyze phi: hiz_371 = PHI <hiz_152(20), 0.0(18)>
streamcluster.cpp:624:20: note: Access function of PHI: {0.0, +, _31}_2
streamcluster.cpp:624:20: note: step: _31,  init: 0.0
streamcluster.cpp:624:20: note: step unknown.
streamcluster.cpp:624:20: note: Analyze phi: i_387 = PHI <i_153(20), 0(18)>
streamcluster.cpp:624:20: note: Access function of PHI: {0, +, 1}_2
streamcluster.cpp:624:20: note: step: 1,  init: 0
streamcluster.cpp:624:20: note: Detected induction.
streamcluster.cpp:624:20: note: Analyze phi: hiz_371 = PHI <hiz_152(20), 0.0(18)>
streamcluster.cpp:624:20: note: reduction: unsafe fp math optimization: hiz_152 = _31 + hiz_371;
streamcluster.cpp:624:20: note: Unknown def-use cycle pattern.
streamcluster.cpp:624:20: note: === vect_pattern_recog ===
streamcluster.cpp:624:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:624:20: note: def_stmt: _28 = (long unsigned int) i_387;
streamcluster.cpp:624:20: note: type of def: internal
streamcluster.cpp:624:20: note: vect_is_simple_use: operand i_387
streamcluster.cpp:624:20: note: def_stmt: i_387 = PHI <i_153(20), 0(18)>
streamcluster.cpp:624:20: note: type of def: induction
streamcluster.cpp:624:20: note: vect_is_simple_use: operand 8
streamcluster.cpp:624:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:624:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:624:20: note: init: phi relevant? hiz_371 = PHI <hiz_152(20), 0.0(18)>
streamcluster.cpp:624:20: note: init: phi relevant? i_387 = PHI <i_153(20), 0(18)>
streamcluster.cpp:624:20: note: init: stmt relevant? _28 = (long unsigned int) i_387;
streamcluster.cpp:624:20: note: init: stmt relevant? _29 = _28 * 8;
streamcluster.cpp:624:20: note: init: stmt relevant? _30 = prephitmp_451 + _29;
streamcluster.cpp:624:20: note: init: stmt relevant? _31 = *_30;
streamcluster.cpp:624:20: note: init: stmt relevant? hiz_152 = _31 + hiz_371;
streamcluster.cpp:624:20: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:624:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:624:20: note: def_stmt: _31 = *_30;
streamcluster.cpp:624:20: note: type of def: internal
streamcluster.cpp:624:20: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:624:20: note: mark relevant 1, live 1: hiz_152 = _31 + hiz_371;
streamcluster.cpp:624:20: note: init: stmt relevant? i_153 = i_387 + 1;
streamcluster.cpp:624:20: note: init: stmt relevant? if (i_153 >= pretmp_449)
streamcluster.cpp:624:20: note: worklist: examine stmt: hiz_152 = _31 + hiz_371;
streamcluster.cpp:624:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:624:20: note: def_stmt: _31 = *_30;
streamcluster.cpp:624:20: note: type of def: internal
streamcluster.cpp:624:20: note: mark relevant 1, live 0: _31 = *_30;
streamcluster.cpp:624:20: note: vect_is_simple_use: operand hiz_371
streamcluster.cpp:624:20: note: def_stmt: hiz_371 = PHI <hiz_152(20), 0.0(18)>
streamcluster.cpp:624:20: note: type of def: unknown
streamcluster.cpp:624:20: note: Unsupported pattern.
streamcluster.cpp:624:20: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:624:20: note: unexpected pattern.

Analyzing loop at streamcluster.cpp:613
streamcluster.cpp:613:24: note: ===== analyze_loop_nest =====
streamcluster.cpp:613:24: note: === vect_analyze_loop_form ===
streamcluster.cpp:613:24: note: not vectorized: control flow in loop.
streamcluster.cpp:613:24: note: bad loop form.

Analyzing loop at streamcluster.cpp:125
streamcluster.cpp:125:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:125:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:125:16: note: === get_loop_niters ===
streamcluster.cpp:125:16: note: Symbolic number of iterations is (unsigned int) _4
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _200 = *_199;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _202 = *_201;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:125:16: note: Analyze phi: i_365 = PHI <i_207(12), 0(10)>
streamcluster.cpp:125:16: note: Access function of PHI: {0, +, 1}_8
streamcluster.cpp:125:16: note: step: 1,  init: 0
streamcluster.cpp:125:16: note: Detected induction.
streamcluster.cpp:125:16: note: Analyze phi: result_364 = PHI <_206(12), 0.0(10)>
streamcluster.cpp:125:16: note: Access function of PHI: {0.0, +, _204}_8
streamcluster.cpp:125:16: note: step: _204,  init: 0.0
streamcluster.cpp:125:16: note: step unknown.
streamcluster.cpp:125:16: note: Analyze phi: result_364 = PHI <_206(12), 0.0(10)>
streamcluster.cpp:125:16: note: reduction: unsafe fp math optimization: _206 = _204 + result_364;
streamcluster.cpp:125:16: note: Unknown def-use cycle pattern.
streamcluster.cpp:125:16: note: === vect_pattern_recog ===
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _197
streamcluster.cpp:125:16: note: def_stmt: _197 = (long unsigned int) i_365;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vect_is_simple_use: operand i_365
streamcluster.cpp:125:16: note: def_stmt: i_365 = PHI <i_207(12), 0(10)>
streamcluster.cpp:125:16: note: type of def: induction
streamcluster.cpp:125:16: note: vect_is_simple_use: operand 4
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _203
streamcluster.cpp:125:16: note: def_stmt: _203 = _200 - _202;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:125:16: note: init: phi relevant? i_365 = PHI <i_207(12), 0(10)>
streamcluster.cpp:125:16: note: init: phi relevant? result_364 = PHI <_206(12), 0.0(10)>
streamcluster.cpp:125:16: note: init: stmt relevant? _197 = (long unsigned int) i_365;
streamcluster.cpp:125:16: note: init: stmt relevant? _198 = _197 * 4;
streamcluster.cpp:125:16: note: init: stmt relevant? _199 = p1$8_139 + _198;
streamcluster.cpp:125:16: note: init: stmt relevant? _200 = *_199;
streamcluster.cpp:125:16: note: init: stmt relevant? _201 = p2$8_140 + _198;
streamcluster.cpp:125:16: note: init: stmt relevant? _202 = *_201;
streamcluster.cpp:125:16: note: init: stmt relevant? _203 = _200 - _202;
streamcluster.cpp:125:16: note: init: stmt relevant? _204 = _203 * _203;
streamcluster.cpp:125:16: note: init: stmt relevant? _206 = _204 + result_364;
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: used out of loop.
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _204
streamcluster.cpp:125:16: note: def_stmt: _204 = _203 * _203;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: vec_stmt_relevant_p: stmt live but not relevant.
streamcluster.cpp:125:16: note: mark relevant 1, live 1: _206 = _204 + result_364;
streamcluster.cpp:125:16: note: init: stmt relevant? i_207 = i_365 + 1;
streamcluster.cpp:125:16: note: init: stmt relevant? if (_4 <= i_207)
streamcluster.cpp:125:16: note: worklist: examine stmt: _206 = _204 + result_364;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand _204
streamcluster.cpp:125:16: note: def_stmt: _204 = _203 * _203;
streamcluster.cpp:125:16: note: type of def: internal
streamcluster.cpp:125:16: note: mark relevant 1, live 0: _204 = _203 * _203;
streamcluster.cpp:125:16: note: vect_is_simple_use: operand result_364
streamcluster.cpp:125:16: note: def_stmt: result_364 = PHI <_206(12), 0.0(10)>
streamcluster.cpp:125:16: note: type of def: unknown
streamcluster.cpp:125:16: note: Unsupported pattern.
streamcluster.cpp:125:16: note: not vectorized: unsupported use in stmt.
streamcluster.cpp:125:16: note: unexpected pattern.
streamcluster.cpp:585:7: note: vectorized 0 loops in function.
streamcluster.cpp:585:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:597:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:597:2: note: got vectype for stmt: pretmp_449 = nproc;
vector(4) int
streamcluster.cpp:597:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:597:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:597:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:597:2: note: got vectype for stmt: pretmp_450 = hizs;
vector(2) long unsigned int
streamcluster.cpp:597:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:597:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:597:38: note: === vect_analyze_data_refs ===
streamcluster.cpp:597:38: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:597:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:597:21: note: got vectype for stmt: hizs = _3;
vector(2) long unsigned int
streamcluster.cpp:597:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:597:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:606:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:606:2: note: got vectype for stmt: numberOfPoints_142 = points_141(D)->num;
vector(2) long int
streamcluster.cpp:606:2: note: got vectype for stmt: _4 = points_141(D)->dim;
vector(4) int
streamcluster.cpp:606:2: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:606:2: note: not consecutive access numberOfPoints_142 = points_141(D)->num;
streamcluster.cpp:606:2: note: not consecutive access _4 = points_141(D)->dim;
streamcluster.cpp:606:2: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:606:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:605:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:605:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:605:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:613:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:613:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:613:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:614:40: note: === vect_analyze_data_refs ===
streamcluster.cpp:614:40: note: got vectype for stmt: _11 = points_141(D)->p;
vector(2) long unsigned int
streamcluster.cpp:614:40: note: got vectype for stmt: p2$8_140 = MEM[(const struct Point &)_11 + 8];
vector(2) long unsigned int
streamcluster.cpp:614:40: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:614:40: note: not consecutive access p2$8_140 = MEM[(const struct Point &)_11 + 8];
streamcluster.cpp:614:40: note: not consecutive access _11 = points_141(D)->p;
streamcluster.cpp:614:40: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:614:40: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: p1$8_139 = MEM[(const struct Point &)_15 + 8];
vector(2) long unsigned int
streamcluster.cpp:125:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:125:16: note: got vectype for stmt: _200 = *_199;
vector(4) float
streamcluster.cpp:125:16: note: got vectype for stmt: _202 = *_201;
vector(4) float
streamcluster.cpp:125:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:125:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:125:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:613:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:613:24: note: got vectype for stmt: _20 = _15->weight;
vector(4) float
streamcluster.cpp:613:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:613:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:613:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:613:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:624:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:624:20: note: got vectype for stmt: *_25 = myhiz_361;
vector(2) double
streamcluster.cpp:624:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:624:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:624:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:624:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:624:20: note: got vectype for stmt: _31 = *_30;
vector(2) double
streamcluster.cpp:624:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:624:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:624:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:624:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:624:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:624:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:631:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:631:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:631:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:633:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:633:25: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:633:25: note: ===vect_slp_analyze_bb===
streamcluster.cpp:634:12: note: === vect_analyze_data_refs ===
streamcluster.cpp:634:12: note: got vectype for stmt: _33 = points_141(D)->p;
vector(2) long unsigned int
streamcluster.cpp:634:12: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:634:12: note: ===vect_slp_analyze_bb===
streamcluster.cpp:633:25: note: === vect_analyze_data_refs ===
streamcluster.cpp:633:25: note: got vectype for stmt: _36->assign = kk_386;
vector(2) long int
streamcluster.cpp:633:25: note: got vectype for stmt: _36->cost = 0.0;
vector(4) float
streamcluster.cpp:633:25: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:633:25: note: not consecutive access _36->assign = kk_386;
streamcluster.cpp:633:25: note: not consecutive access _36->cost = 0.0;
streamcluster.cpp:633:25: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:633:25: note: ===vect_slp_analyze_bb===
streamcluster.cpp:633:25: note: ===vect_slp_analyze_bb===
streamcluster.cpp:638:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:638:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:638:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:640:12: note: === vect_analyze_data_refs ===
streamcluster.cpp:640:12: note: got vectype for stmt: k.92_37 = k;
vector(2) long int
streamcluster.cpp:640:12: note: got vectype for stmt: *kfinal_185(D) = k.92_37;
vector(2) long int
streamcluster.cpp:640:12: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:640:12: note: not consecutive access k.92_37 = k;
streamcluster.cpp:640:12: note: not consecutive access *kfinal_185(D) = k.92_37;
streamcluster.cpp:640:12: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:640:12: note: ===vect_slp_analyze_bb===
streamcluster.cpp:645:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:645:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:645:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: got vectype for stmt: _212 = points_141(D)->num;
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: _216 = points_141(D)->p;
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$weight_220 = MEM[(const struct Point &)_219];
vector(4) float
streamcluster.cpp:101:16: note: got vectype for stmt: temp$coord_221 = MEM[(const struct Point &)_219 + 8];
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$assign_222 = MEM[(const struct Point &)_219 + 16];
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$cost_223 = MEM[(const struct Point &)_219 + 24];
vector(4) float
streamcluster.cpp:101:16: note: not vectorized: no vectype for stmt: *_219 = MEM[(const struct Point &)_226];
 scalar_type: const struct Point
streamcluster.cpp:101:16: note: not vectorized: more than one data ref in stmt: *_219 = MEM[(const struct Point &)_226];
streamcluster.cpp:101:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:101:16: note: Detected interleaving load MEM[(const struct Point &)_219] and MEM[(const struct Point &)_219 + 24]
streamcluster.cpp:101:16: note: not consecutive access temp$coord_221 = MEM[(const struct Point &)_219 + 8];
streamcluster.cpp:101:16: note: not consecutive access temp$assign_222 = MEM[(const struct Point &)_219 + 16];
streamcluster.cpp:101:16: note: Detected interleaving load of size 7 starting with temp$weight_220 = MEM[(const struct Point &)_219];
streamcluster.cpp:101:16: note: not consecutive access _212 = points_141(D)->num;
streamcluster.cpp:101:16: note: not consecutive access _216 = points_141(D)->p;
streamcluster.cpp:101:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:646:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:646:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:650:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:650:20: note: got vectype for stmt: k.93_40 = k;
vector(2) long int
streamcluster.cpp:650:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:650:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:656:11: note: === vect_analyze_data_refs ===
streamcluster.cpp:656:11: note: got vectype for stmt: k.94_252 = k;
vector(2) long int
streamcluster.cpp:656:11: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:656:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:656:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:651:8: note: === vect_analyze_data_refs ===
streamcluster.cpp:651:8: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:651:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:662:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:662:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:662:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: got vectype for stmt: _405 = points_141(D)->num;
vector(2) long int
streamcluster.cpp:101:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:101:16: note: got vectype for stmt: _232 = points_141(D)->num;
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: _236 = points_141(D)->p;
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$weight_240 = MEM[(const struct Point &)_239];
vector(4) float
streamcluster.cpp:101:16: note: got vectype for stmt: temp$coord_241 = MEM[(const struct Point &)_239 + 8];
vector(2) long unsigned int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$assign_242 = MEM[(const struct Point &)_239 + 16];
vector(2) long int
streamcluster.cpp:101:16: note: got vectype for stmt: temp$cost_243 = MEM[(const struct Point &)_239 + 24];
vector(4) float
streamcluster.cpp:101:16: note: not vectorized: no vectype for stmt: *_239 = MEM[(const struct Point &)_246];
 scalar_type: const struct Point
streamcluster.cpp:101:16: note: not vectorized: more than one data ref in stmt: *_239 = MEM[(const struct Point &)_246];
streamcluster.cpp:101:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:101:16: note: Detected interleaving load MEM[(const struct Point &)_239] and MEM[(const struct Point &)_239 + 24]
streamcluster.cpp:101:16: note: not consecutive access temp$coord_241 = MEM[(const struct Point &)_239 + 8];
streamcluster.cpp:101:16: note: not consecutive access temp$assign_242 = MEM[(const struct Point &)_239 + 16];
streamcluster.cpp:101:16: note: Detected interleaving load of size 7 starting with temp$weight_240 = MEM[(const struct Point &)_239];
streamcluster.cpp:101:16: note: not consecutive access _232 = points_141(D)->num;
streamcluster.cpp:101:16: note: not consecutive access _236 = points_141(D)->p;
streamcluster.cpp:101:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:101:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:672:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:672:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:672:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:673:36: note: === vect_analyze_data_refs ===
streamcluster.cpp:673:36: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:674:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:674:21: note: got vectype for stmt: numfeasible = _47;
vector(4) int
streamcluster.cpp:674:21: note: got vectype for stmt: _390 = points_141(D)->num;
vector(2) long int
streamcluster.cpp:674:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:674:21: note: not consecutive access numfeasible = _47;
streamcluster.cpp:674:21: note: not consecutive access _390 = points_141(D)->num;
streamcluster.cpp:674:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:674:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:675:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:675:22: note: got vectype for stmt: is_center.95_50 = is_center;
vector(2) long unsigned int
streamcluster.cpp:675:22: note: got vectype for stmt: _51 = points_141(D)->p;
vector(2) long unsigned int
streamcluster.cpp:675:22: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:675:22: note: not consecutive access is_center.95_50 = is_center;
streamcluster.cpp:675:22: note: not consecutive access _51 = points_141(D)->p;
streamcluster.cpp:675:22: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:675:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:674:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:674:21: note: got vectype for stmt: _55 = _54->assign;
vector(2) long int
streamcluster.cpp:674:21: note: got vectype for stmt: *_57 = 1;
vector(16) unsigned char
streamcluster.cpp:674:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:674:21: note: not consecutive access *_57 = 1;
streamcluster.cpp:674:21: note: Detected single element interleaving _54->assign step 32
streamcluster.cpp:674:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:674:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:674:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:674:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:674:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:674:21: note: got vectype for stmt: pretmp_487 = numfeasible;
vector(4) int
streamcluster.cpp:674:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:674:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:687:40: note: === vect_analyze_data_refs ===
streamcluster.cpp:687:40: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:687:40: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: got vectype for stmt: feasible.97_66 = feasible;
vector(2) long unsigned int
streamcluster.cpp:495:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:500:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:500:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:500:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: got vectype for stmt: temp_280 = *_279;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: _284 = *_283;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_279 = _284;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_283 = temp_280;
vector(4) int
streamcluster.cpp:113:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:113:16: note: not consecutive access _284 = *_283;
streamcluster.cpp:113:16: note: not consecutive access *_283 = temp_280;
streamcluster.cpp:113:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:508:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:508:19: note: got vectype for stmt: _259 = *_258;
vector(4) int
streamcluster.cpp:508:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:690:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:690:3: note: got vectype for stmt: k.98_68 = k;
vector(2) long int
streamcluster.cpp:690:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:690:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:690:28: note: === vect_analyze_data_refs ===
streamcluster.cpp:690:28: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:690:28: note: ===vect_slp_analyze_bb===
streamcluster.cpp:690:52: note: === vect_analyze_data_refs ===
streamcluster.cpp:690:52: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:690:52: note: ===vect_slp_analyze_bb===
streamcluster.cpp:691:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:691:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:691:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: got vectype for stmt: numfeasible.102_78 = numfeasible;
vector(4) int
streamcluster.cpp:495:23: note: got vectype for stmt: feasible.103_79 = feasible;
vector(2) long unsigned int
streamcluster.cpp:495:23: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:495:23: note: not consecutive access feasible.103_79 = feasible;
streamcluster.cpp:495:23: note: not consecutive access numfeasible.102_78 = numfeasible;
streamcluster.cpp:495:23: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:500:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:500:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:500:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: got vectype for stmt: temp_318 = *_317;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: _322 = *_321;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_317 = _322;
vector(4) int
streamcluster.cpp:113:16: note: got vectype for stmt: *_321 = temp_318;
vector(4) int
streamcluster.cpp:113:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:113:16: note: not consecutive access _322 = *_321;
streamcluster.cpp:113:16: note: not consecutive access *_321 = temp_318;
streamcluster.cpp:113:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:113:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:113:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:113:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:508:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:508:19: note: got vectype for stmt: _297 = *_296;
vector(4) int
streamcluster.cpp:508:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:506:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:506:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:506:17: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:495:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:495:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:694:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:694:9: note: got vectype for stmt: pretmp_509 = k;
vector(2) long int
streamcluster.cpp:694:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:694:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:698:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:698:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:698:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:705:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:705:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:705:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:710:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:710:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:710:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:715:36: note: === vect_analyze_data_refs ===
streamcluster.cpp:715:36: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:715:36: note: ===vect_slp_analyze_bb===
streamcluster.cpp:715:36: note: === vect_analyze_data_refs ===
streamcluster.cpp:715:36: note: got vectype for stmt: pretmp_491 = numfeasible;
vector(4) int
streamcluster.cpp:715:36: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:715:36: note: ===vect_slp_analyze_bb===
streamcluster.cpp:724:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:724:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:724:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:725:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:725:7: note: got vectype for stmt: feasible.110_91 = feasible;
vector(2) long unsigned int
streamcluster.cpp:725:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:726:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:726:7: note: got vectype for stmt: hizs.111_92 = hizs;
vector(2) long unsigned int
streamcluster.cpp:726:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:727:11: note: === vect_analyze_data_refs ===
streamcluster.cpp:727:11: note: got vectype for stmt: k.112_93 = k;
vector(2) long int
streamcluster.cpp:727:11: note: got vectype for stmt: *kfinal_185(D) = k.112_93;
vector(2) long int
streamcluster.cpp:727:11: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:727:11: note: not consecutive access k.112_93 = k;
streamcluster.cpp:727:11: note: not consecutive access *kfinal_185(D) = k.112_93;
streamcluster.cpp:727:11: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:727:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:730:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:730:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:730:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:730:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:730:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:730:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:663:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:663:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:656:11: note: === vect_analyze_data_refs ===
streamcluster.cpp:656:11: note: got vectype for stmt: k.94_128 = k;
vector(2) long int
streamcluster.cpp:656:11: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:656:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:663:8: note: === vect_analyze_data_refs ===
streamcluster.cpp:663:8: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:663:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:663:17: note: === vect_analyze_data_refs ===
streamcluster.cpp:663:17: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:656:11: note: === vect_analyze_data_refs ===
streamcluster.cpp:656:11: note: got vectype for stmt: k.94_384 = k;
vector(2) long int
streamcluster.cpp:656:11: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:656:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:663:8: note: === vect_analyze_data_refs ===
streamcluster.cpp:663:8: note: got vectype for stmt: pretmp_488 = numfeasible;
vector(4) int
streamcluster.cpp:663:8: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:663:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:705:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:705:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:705:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:705:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:705:3: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:738
streamcluster.cpp:738:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:738:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:738:16: note: not vectorized: control flow in loop.
streamcluster.cpp:738:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:743
streamcluster.cpp:743:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:743:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:743:20: note: === get_loop_niters ===
streamcluster.cpp:743:20: note: Symbolic number of iterations is (unsigned long) _52
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _18 = *_17;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_17 = _23;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _26 = *_25;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_17 = _28;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:743:20: note: Analyze phi: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: Access function of PHI: {0, +, 1}_2
streamcluster.cpp:743:20: note: step: 1,  init: 0
streamcluster.cpp:743:20: note: Detected induction.
streamcluster.cpp:743:20: note: Analyze phi: .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: === vect_pattern_recog ===
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii.118_15
streamcluster.cpp:743:20: note: def_stmt: ii.118_15 = (long unsigned int) ii_54;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii_54
streamcluster.cpp:743:20: note: def_stmt: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: type of def: induction
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _19
streamcluster.cpp:743:20: note: def_stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:743:20: note: def_stmt: _26 = *_25;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:743:20: note: init: phi relevant? ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: init: phi relevant? .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: init: stmt relevant? ii.118_15 = (long unsigned int) ii_54;
streamcluster.cpp:743:20: note: init: stmt relevant? _16 = ii.118_15 * 4;
streamcluster.cpp:743:20: note: init: stmt relevant? _17 = _14 + _16;
streamcluster.cpp:743:20: note: init: stmt relevant? _18 = *_17;
streamcluster.cpp:743:20: note: init: stmt relevant? _19 = (double) _18;
streamcluster.cpp:743:20: note: init: stmt relevant? _22 = _19 * _86;
streamcluster.cpp:743:20: note: init: stmt relevant? _23 = (float) _22;
streamcluster.cpp:743:20: note: init: stmt relevant? *_17 = _23;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_17 = _23;
streamcluster.cpp:743:20: note: init: stmt relevant? _25 = _24 + _16;
streamcluster.cpp:743:20: note: init: stmt relevant? _26 = *_25;
streamcluster.cpp:743:20: note: init: stmt relevant? _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: init: stmt relevant? _28 = _23 + _27;
streamcluster.cpp:743:20: note: init: stmt relevant? *_17 = _28;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_17 = _28;
streamcluster.cpp:743:20: note: init: stmt relevant? ii_43 = ii_54 + 1;
streamcluster.cpp:743:20: note: init: stmt relevant? if (ii_43 >= _46)
streamcluster.cpp:743:20: note: worklist: examine stmt: *_17 = _28;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:743:20: note: def_stmt: _28 = _23 + _27;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _28 = _23 + _27;
streamcluster.cpp:743:20: note: worklist: examine stmt: _28 = _23 + _27;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _23 = (float) _22;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:743:20: note: def_stmt: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: worklist: examine stmt: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:743:20: note: def_stmt: _26 = *_25;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _26 = *_25;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_40
streamcluster.cpp:743:20: note: def_stmt: relweight_40 = _11 / relweight_39;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: worklist: examine stmt: _26 = *_25;
streamcluster.cpp:743:20: note: worklist: examine stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _22
streamcluster.cpp:743:20: note: def_stmt: _22 = _19 * _86;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _22 = _19 * _86;
streamcluster.cpp:743:20: note: worklist: examine stmt: _22 = _19 * _86;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _19
streamcluster.cpp:743:20: note: def_stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _19 = (double) _18;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _86
streamcluster.cpp:743:20: note: def_stmt: _86 = 1.0e+0 - _85;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: worklist: examine stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _18
streamcluster.cpp:743:20: note: def_stmt: _18 = *_17;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _18 = *_17;
streamcluster.cpp:743:20: note: worklist: examine stmt: _18 = *_17;
streamcluster.cpp:743:20: note: worklist: examine stmt: *_17 = _23;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _23 = (float) _22;
streamcluster.cpp:743:20: note: already marked relevant/live.
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_17 and *_25
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_17 and *_25
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_25 and *_17
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_25 and *_17
streamcluster.cpp:743:20: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:743:20: note: ==> examining phi: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: ==> examining phi: .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_15 = (long unsigned int) ii_54;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _16 = ii.118_15 * 4;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _17 = _14 + _16;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _18 = *_17;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _19 = (double) _18;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _22 = _19 * _86;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: nunits = 2
streamcluster.cpp:743:20: note: ==> examining statement: _23 = (float) _22;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_17 = _23;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _25 = _24 + _16;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _26 = *_25;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _28 = _23 + _27;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_17 = _28;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: ii_43 = ii_54 + 1;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_43 >= _46)
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: vectorization factor = 4
streamcluster.cpp:743:20: note: === vect_analyze_slp ===
streamcluster.cpp:743:20: note: === vect_make_slp_decision ===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_17 and *_17
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_17
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_17
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_25
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_17
streamcluster.cpp:743:20: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:743:20: note: found equal ranges *_17, *_25 and *_17, *_25
streamcluster.cpp:743:20: note: improved number of alias checks from 2 to 1
streamcluster.cpp:743:20: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: vect_model_store_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Alignment of access forced using peeling.
streamcluster.cpp:743:20: note: Peeling for alignment will be applied.
streamcluster.cpp:743:20: note: Vectorizing an unaligned access.
streamcluster.cpp:743:20: note: === vect_analyze_loop_operations ===
streamcluster.cpp:743:20: note: examining phi: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: examining phi: .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_15 = (long unsigned int) ii_54;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _16 = ii.118_15 * 4;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _17 = _14 + _16;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _18 = *_17;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_17
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_17
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _19 = (double) _18;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _18
streamcluster.cpp:743:20: note: def_stmt: _18 = *_17;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _22 = _19 * _86;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _19
streamcluster.cpp:743:20: note: def_stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _86
streamcluster.cpp:743:20: note: def_stmt: _86 = 1.0e+0 - _85;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _23 = (float) _22;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _22
streamcluster.cpp:743:20: note: def_stmt: _22 = _19 * _86;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_17 = _23;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _25 = _24 + _16;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _26 = *_25;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_25
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_25
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:743:20: note: def_stmt: _26 = *_25;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_40
streamcluster.cpp:743:20: note: def_stmt: relweight_40 = _11 / relweight_39;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _28 = _23 + _27;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:743:20: note: def_stmt: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_17 = _28;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:743:20: note: def_stmt: _28 = _23 + _27;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: ii_43 = ii_54 + 1;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_43 >= _46)
streamcluster.cpp:743:20: note: irrelevant.
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
streamcluster.cpp:743:20: note: Cost model analysis: 
  Vector inside of loop cost: 12
  Vector prologue cost: 28
  Vector epilogue cost: 22
  Scalar iteration cost: 9
  Scalar outside cost: 1
  Vector outside cost: 50
  prologue iterations: 2
  epilogue iterations: 2
  Calculated minimum iters for profitability: 7
streamcluster.cpp:743:20: note:   Runtime profitability threshold = 6
streamcluster.cpp:743:20: note:   Static estimate profitability threshold = 6
streamcluster.cpp:743:20: note: epilog loop required
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_54 = PHI <ii_43(8), 0(6)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_57 = PHI <.MEM_42(8), .MEM_55(6)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: loop vectorized
streamcluster.cpp:743:20: note: === vec_transform_loop ===
streamcluster.cpp:743:20: note: Profitability threshold is 6 loop iterations.
streamcluster.cpp:743:20: note: create runtime check for data references *_17 and *_25
streamcluster.cpp:743:20: note: created 1 versioning for alias checks.
streamcluster.cpp:743:20: note: loop versioned for vectorization because of possible aliasing
streamcluster.cpp:743:20: note: created _14
streamcluster.cpp:743:20: note: niters for prolog loop: -((unsigned long) _14 >> 2) & 3

loop at streamcluster.cpp:744: if (ivtmp_99 >= prolog_loop_niters.536_21)
streamcluster.cpp:743:20: note: === vect_update_inits_of_dr ===
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: ii_54 = PHI <ii_43(8), ii_100(25)>
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: .MEM_57 = PHI <.MEM_42(8), .MEM_101(25)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: ------>vectorizing phi: ii_54 = PHI <ii_43(8), ii_100(33)>
streamcluster.cpp:743:20: note: ------>vectorizing phi: .MEM_57 = PHI <.MEM_42(8), .MEM_101(33)>
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii.118_15 = (long unsigned int) ii_54;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _16 = ii.118_15 * 4;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _17 = _14 + _16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _18 = *_17;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_14
streamcluster.cpp:743:20: note: created vectp.542_130
streamcluster.cpp:743:20: note: add new stmt: vect__18.543_134 = MEM[(float *)vectp.541_132];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _19 = (double) _18;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _18
streamcluster.cpp:743:20: note: def_stmt: _18 = *_17;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _18
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _18
streamcluster.cpp:743:20: note: def_stmt: _18 = *_17;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _18 = *_17;
streamcluster.cpp:743:20: note: add new stmt: vect__19.544_135 = [vec_unpack_lo_expr] vect__18.543_134;
streamcluster.cpp:743:20: note: add new stmt: vect__19.544_136 = [vec_unpack_hi_expr] vect__18.543_134;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _22 = _19 * _86;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _19
streamcluster.cpp:743:20: note: def_stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _86
streamcluster.cpp:743:20: note: def_stmt: _86 = 1.0e+0 - _85;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _19
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _19
streamcluster.cpp:743:20: note: def_stmt: _19 = (double) _18;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _19 = (double) _18;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _86
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _86
streamcluster.cpp:743:20: note: def_stmt: _86 = 1.0e+0 - _85;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  _86 = 1.0e+0 - _85;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__137 = {_86, _86};
streamcluster.cpp:743:20: note: add new stmt: vect__22.545_138 = vect__19.544_135 * vect_cst__137;
streamcluster.cpp:743:20: note: add new stmt: vect__22.545_139 = vect__19.544_136 * vect_cst__137;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _23 = (float) _22;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _22
streamcluster.cpp:743:20: note: def_stmt: _22 = _19 * _86;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _22
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _22
streamcluster.cpp:743:20: note: def_stmt: _22 = _19 * _86;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _22 = _19 * _86;
streamcluster.cpp:743:20: note: add new stmt: vect__23.546_140 = VEC_PACK_TRUNC_EXPR <vect__22.545_138, vect__22.545_139>;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_17 = _23;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _23
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _23 = (float) _22;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_14
streamcluster.cpp:743:20: note: created vectp.548_141
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.547_143] = vect__23.546_140;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _25 = _24 + _16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _26 = *_25;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_24
streamcluster.cpp:743:20: note: created vectp.550_146
streamcluster.cpp:743:20: note: add new stmt: vect__26.551_150 = MEM[(float *)vectp.549_148];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:743:20: note: def_stmt: _26 = *_25;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_40
streamcluster.cpp:743:20: note: def_stmt: relweight_40 = _11 / relweight_39;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _26
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:743:20: note: def_stmt: _26 = *_25;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _26 = *_25;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: relweight_40
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_40
streamcluster.cpp:743:20: note: def_stmt: relweight_40 = _11 / relweight_39;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  relweight_40 = _11 / relweight_39;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__151 = {relweight_40, relweight_40, relweight_40, relweight_40};
streamcluster.cpp:743:20: note: add new stmt: vect__27.552_152 = vect__26.551_150 * vect_cst__151;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _28 = _23 + _27;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:743:20: note: def_stmt: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _23
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _23
streamcluster.cpp:743:20: note: def_stmt: _23 = (float) _22;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _23 = (float) _22;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _27
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:743:20: note: def_stmt: _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _27 = _26 * relweight_40;
streamcluster.cpp:743:20: note: add new stmt: vect__28.553_153 = vect__23.546_140 + vect__27.552_152;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_17 = _28;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:743:20: note: def_stmt: _28 = _23 + _27;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _28
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:743:20: note: def_stmt: _28 = _23 + _27;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _28 = _23 + _27;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_14
streamcluster.cpp:743:20: note: created vectp.555_154
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.554_156] = vect__28.553_153;
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii_43 = ii_54 + 1;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.541_133 = vectp.541_132 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.547_144 = vectp.547_143 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.549_149 = vectp.549_148 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.554_157 = vectp.554_156 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: if (ii_43 >= _46)

loop at streamcluster.cpp:744: if (ivtmp_160 >= bnd.538_125)
streamcluster.cpp:743:20: note: LOOP VECTORIZED

streamcluster.cpp:734:5: note: vectorized 1 loops in function.
streamcluster.cpp:734:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: got vectype for stmt: _48 = points_38(D)->num;
vector(2) long int
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:740:15: note: === vect_analyze_data_refs ===
streamcluster.cpp:740:15: note: got vectype for stmt: _2 = points_38(D)->p;
vector(2) long unsigned int
streamcluster.cpp:740:15: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:740:15: note: ===vect_slp_analyze_bb===
streamcluster.cpp:740:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:740:3: note: got vectype for stmt: _6 = _5->assign;
vector(2) long int
streamcluster.cpp:740:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:740:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _10 = _9->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _11 = _5->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _52 = points_38(D)->dim;
vector(4) int
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _10 = _9->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _5->weight step 32
streamcluster.cpp:743:20: note: not consecutive access _52 = points_38(D)->dim;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: got vectype for stmt: _14 = _9->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: got vectype for stmt: _24 = _5->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:746:19: note: not consecutive access _14 = _9->coord;
streamcluster.cpp:746:19: note: Detected single element interleaving _5->coord step 32
streamcluster.cpp:746:19: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _229 = *_228;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_228 = _232;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _235 = *_234;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_228 = _237;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _229 = *_228;
streamcluster.cpp:745:46: note: not consecutive access *_228 = _232;
streamcluster.cpp:745:46: note: not consecutive access *_228 = _237;
streamcluster.cpp:745:46: note: not consecutive access _235 = *_234;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _247 = *_246;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_246 = _250;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _253 = *_252;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_246 = _255;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _247 = *_246;
streamcluster.cpp:745:46: note: not consecutive access *_246 = _250;
streamcluster.cpp:745:46: note: not consecutive access *_246 = _255;
streamcluster.cpp:745:46: note: not consecutive access _253 = *_252;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _1 = *_12;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_12 = _88;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _83 = *_84;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_12 = _67;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _1 = *_12;
streamcluster.cpp:745:46: note: not consecutive access *_12 = _88;
streamcluster.cpp:745:46: note: not consecutive access *_12 = _67;
streamcluster.cpp:745:46: note: not consecutive access _83 = *_84;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__18.543_134 = MEM[(float *)vectp.541_132];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.547_143] = vect__23.546_140;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__26.551_150 = MEM[(float *)vectp.549_148];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.554_156] = vect__28.553_153;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _17 = *_16;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_16 = _22;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _26 = *_25;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_16 = _28;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _17 = *_16;
streamcluster.cpp:743:20: note: not consecutive access *_16 = _22;
streamcluster.cpp:743:20: note: not consecutive access *_16 = _28;
streamcluster.cpp:743:20: note: not consecutive access _26 = *_25;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _164 = *_163;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_163 = _167;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _170 = *_169;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_163 = _172;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _164 = *_163;
streamcluster.cpp:743:20: note: not consecutive access *_163 = _167;
streamcluster.cpp:743:20: note: not consecutive access *_163 = _172;
streamcluster.cpp:743:20: note: not consecutive access _170 = *_169;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _180 = *_179;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_179 = _183;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _186 = *_185;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_179 = _188;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _180 = *_179;
streamcluster.cpp:743:20: note: not consecutive access *_179 = _183;
streamcluster.cpp:743:20: note: not consecutive access *_179 = _188;
streamcluster.cpp:743:20: note: not consecutive access _186 = *_185;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _196 = *_195;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_195 = _199;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _202 = *_201;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_195 = _204;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _196 = *_195;
streamcluster.cpp:743:20: note: not consecutive access *_195 = _199;
streamcluster.cpp:743:20: note: not consecutive access *_195 = _204;
streamcluster.cpp:743:20: note: not consecutive access _202 = *_201;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _212 = *_211;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_211 = _215;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _218 = *_217;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_211 = _220;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _212 = *_211;
streamcluster.cpp:743:20: note: not consecutive access *_211 = _215;
streamcluster.cpp:743:20: note: not consecutive access *_211 = _220;
streamcluster.cpp:743:20: note: not consecutive access _218 = *_217;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:4: note: got vectype for stmt: _108 = *_107;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_107 = _111;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: _114 = *_113;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_107 = _116;
vector(4) float
streamcluster.cpp:743:4: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:4: note: not consecutive access _108 = *_107;
streamcluster.cpp:743:4: note: not consecutive access *_107 = _111;
streamcluster.cpp:743:4: note: not consecutive access *_107 = _116;
streamcluster.cpp:743:4: note: not consecutive access _114 = *_113;
streamcluster.cpp:743:4: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _71 = *_72;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_72 = _68;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _61 = *_62;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_72 = _59;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_91 = _9->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_93 = _5->weight;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access pretmp_91 = _9->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _5->weight step 32
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:748:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:748:42: note: got vectype for stmt: _9->weight = prephitmp_96;
vector(4) float
streamcluster.cpp:748:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:748:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:752:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:752:9: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:770
streamcluster.cpp:770:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:770:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:770:16: note: not vectorized: control flow in loop.
streamcluster.cpp:770:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:763
streamcluster.cpp:763:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:763:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:763:16: note: === get_loop_niters ===
streamcluster.cpp:763:16: note: Symbolic number of iterations is (unsigned long) _1
streamcluster.cpp:763:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:763:16: note: got vectype for stmt: _8 = _7->assign;
vector(2) long int
streamcluster.cpp:763:16: note: got vectype for stmt: *_10 = 1;
vector(16) unsigned char
streamcluster.cpp:763:16: note: not vectorized: not suitable for scatter store *_10 = 1;
streamcluster.cpp:763:16: note: bad data references.
streamcluster.cpp:756:6: note: vectorized 0 loops in function.
streamcluster.cpp:756:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:760:61: note: === vect_analyze_data_refs ===
streamcluster.cpp:760:61: note: got vectype for stmt: _1 = points_43(D)->num;
vector(2) long int
streamcluster.cpp:760:61: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:763:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:763:16: note: got vectype for stmt: pretmp_62 = centers_48(D)->num;
vector(2) long int
streamcluster.cpp:763:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:763:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:764:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:764:23: note: got vectype for stmt: _4 = points_43(D)->p;
vector(2) long unsigned int
streamcluster.cpp:764:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:764:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:763:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:763:16: note: got vectype for stmt: _8 = _7->assign;
vector(2) long int
streamcluster.cpp:763:16: note: got vectype for stmt: *_10 = 1;
vector(16) unsigned char
streamcluster.cpp:763:16: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:763:16: note: not consecutive access *_10 = 1;
streamcluster.cpp:763:16: note: Detected single element interleaving _7->assign step 32
streamcluster.cpp:763:16: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:763:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:763:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:763:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:771:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:771:3: note: got vectype for stmt: _14 = *_13;
vector(16) unsigned char
streamcluster.cpp:771:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:771:3: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: got vectype for stmt: _15 = points_43(D)->dim;
vector(4) int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: got vectype for stmt: _18 = points_43(D)->p;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: got vectype for stmt: _21 = _20->coord;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: got vectype for stmt: _22 = centers_48(D)->p;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: got vectype for stmt: _26 = _25->coord;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not consecutive access _21 = _20->coord;
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not consecutive access _26 = _25->coord;
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not consecutive access _18 = points_43(D)->p;
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not consecutive access _15 = points_43(D)->dim;
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not consecutive access _22 = centers_48(D)->p;
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:71: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:775:5: note: === vect_analyze_data_refs ===
streamcluster.cpp:775:5: note: got vectype for stmt: _27 = points_43(D)->p;
vector(2) long unsigned int
streamcluster.cpp:775:5: note: got vectype for stmt: _29 = centers_48(D)->p;
vector(2) long unsigned int
streamcluster.cpp:775:5: note: got vectype for stmt: _31 = _28->weight;
vector(4) float
streamcluster.cpp:775:5: note: got vectype for stmt: _30->weight = _31;
vector(4) float
streamcluster.cpp:775:5: note: got vectype for stmt: *_33 = _34;
vector(2) long int
streamcluster.cpp:775:5: note: got vectype for stmt: pretmp_94 = points_43(D)->num;
vector(2) long int
streamcluster.cpp:775:5: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:775:5: note: not consecutive access _31 = _28->weight;
streamcluster.cpp:775:5: note: not consecutive access _30->weight = _31;
streamcluster.cpp:775:5: note: not consecutive access *_33 = _34;
streamcluster.cpp:775:5: note: not consecutive access pretmp_94 = points_43(D)->num;
streamcluster.cpp:775:5: note: not consecutive access _27 = points_43(D)->p;
streamcluster.cpp:775:5: note: not consecutive access _29 = centers_48(D)->p;
streamcluster.cpp:775:5: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:775:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:770:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:770:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:770:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:770:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:770:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:781:6: note: === vect_analyze_data_refs ===
streamcluster.cpp:781:6: note: got vectype for stmt: centers_48(D)->num = k_67;
vector(2) long int
streamcluster.cpp:781:6: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:782:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:782:1: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:782:1: note: ===vect_slp_analyze_bb===
streamcluster.cpp:795:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:795:10: note: got vectype for stmt: _1 = MEM[(struct pkmedian_arg_t *)arg__7(D)].barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _2 = MEM[(struct pkmedian_arg_t *)arg__7(D)].pid;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _3 = MEM[(struct pkmedian_arg_t *)arg__7(D)].kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _4 = MEM[(struct pkmedian_arg_t *)arg__7(D)].kmax;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _5 = MEM[(struct pkmedian_arg_t *)arg__7(D)].kmin;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _6 = MEM[(struct pkmedian_arg_t *)arg__7(D)].points;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:795:10: note: Detected interleaving load MEM[(struct pkmedian_arg_t *)arg__7(D)].kmin and MEM[(struct pkmedian_arg_t *)arg__7(D)].kmax
streamcluster.cpp:795:10: note: Detected interleaving load MEM[(struct pkmedian_arg_t *)arg__7(D)].kfinal and MEM[(struct pkmedian_arg_t *)arg__7(D)].barrier
streamcluster.cpp:795:10: note: not consecutive access _6 = MEM[(struct pkmedian_arg_t *)arg__7(D)].points;
streamcluster.cpp:795:10: note: Detected interleaving load of size 2 starting with _5 = MEM[(struct pkmedian_arg_t *)arg__7(D)].kmin;
streamcluster.cpp:795:10: note: Detected interleaving load of size 3 starting with _3 = MEM[(struct pkmedian_arg_t *)arg__7(D)].kfinal;
streamcluster.cpp:795:10: note: not consecutive access _2 = MEM[(struct pkmedian_arg_t *)arg__7(D)].pid;
streamcluster.cpp:795:10: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:797:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:797:9: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:808
streamcluster.cpp:808:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:808:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:808:20: note: === get_loop_niters ===
streamcluster.cpp:808:20: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:808:20: note: bad loop form.
streamcluster.cpp:800:6: note: vectorized 0 loops in function.
streamcluster.cpp:800:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: got vectype for stmt: nproc.138_1 = nproc;
vector(4) int
streamcluster.cpp:802:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:802:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: got vectype for stmt: nproc.140_2 = nproc;
vector(4) int
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_30 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:795:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:795:10: note: got vectype for stmt: _6->points = points_20(D);
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _6->kmin = kmin_22(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _6->kmax = kmax_24(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _6->pid = i_44;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _6->kfinal = kfinal_27(D);
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _6->barrier = &barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _35 = _19->barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _36 = _19->pid;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _37 = _19->kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _38 = _19->kmax;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _39 = _19->kmin;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _40 = _19->points;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:795:10: note: Detected interleaving load _19->kmin and _19->kmax
streamcluster.cpp:795:10: note: Detected interleaving load _19->kfinal and _19->barrier
streamcluster.cpp:795:10: note: Detected interleaving store _6->kmin and _6->kmax
streamcluster.cpp:795:10: note: not consecutive access _40 = _19->points;
streamcluster.cpp:795:10: note: Detected interleaving load of size 2 starting with _39 = _19->kmin;
streamcluster.cpp:795:10: note: Detected interleaving load of size 3 starting with _37 = _19->kfinal;
streamcluster.cpp:795:10: note: not consecutive access _36 = _19->pid;
streamcluster.cpp:795:10: note: not consecutive access _6->points = points_20(D);
streamcluster.cpp:795:10: note: interleaved store with gaps
streamcluster.cpp:795:10: note: not vectorized: complicated access pattern.
streamcluster.cpp:795:10: note: not consecutive access _6->kmax = kmax_24(D);
streamcluster.cpp:795:10: note: not consecutive access _6->kfinal = kfinal_27(D);
streamcluster.cpp:795:10: note: not consecutive access _6->barrier = &barrier;
streamcluster.cpp:795:10: note: not consecutive access _6->pid = i_44;
streamcluster.cpp:795:10: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_3 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:834:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:834:1: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:834:1: note: ===vect_slp_analyze_bb===
streamcluster.cpp:878:13: note: === vect_analyze_data_refs ===
streamcluster.cpp:878:13: note: got vectype for stmt: this_3(D)->D.48134._vptr.PStream = &MEM[(void *)&_ZTV10FileStream + 16B];
vector(2) long unsigned int
streamcluster.cpp:878:13: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:879:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:879:3: note: got vectype for stmt: this_3(D)->fp = _8;
vector(2) long unsigned int
streamcluster.cpp:879:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:879:3: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.172_10 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:881:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:883:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:883:2: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:913
streamcluster.cpp:913:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:913:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:913:20: note: not vectorized: control flow in loop.
streamcluster.cpp:913:20: note: bad loop form.

Analyzing loop at streamcluster.cpp:917
streamcluster.cpp:917:22: note: ===== analyze_loop_nest =====
streamcluster.cpp:917:22: note: === vect_analyze_loop_form ===
streamcluster.cpp:917:22: note: === get_loop_niters ===
streamcluster.cpp:917:22: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:917:22: note: bad loop form.

Analyzing loop at streamcluster.cpp:909
streamcluster.cpp:909:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:909:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:909:20: note: === get_loop_niters ===
streamcluster.cpp:909:20: note: Symbolic number of iterations is (unsigned long) _2
streamcluster.cpp:909:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:909:20: note: got vectype for stmt: _9 = _8->assign;
vector(2) long int
streamcluster.cpp:909:20: note: got vectype for stmt: *_12 = 1;
vector(4) int
streamcluster.cpp:909:20: note: not vectorized: not suitable for scatter store *_12 = 1;
streamcluster.cpp:909:20: note: bad data references.
streamcluster.cpp:902:6: note: vectorized 0 loops in function.
streamcluster.cpp:902:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:904:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:904:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:904:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.142_1 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:906:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:908:59: note: === vect_analyze_data_refs ===
streamcluster.cpp:908:59: note: got vectype for stmt: _2 = centers_47(D)->num;
vector(2) long int
streamcluster.cpp:908:59: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:909:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:909:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:909:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:910:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:910:24: note: got vectype for stmt: _5 = centers_47(D)->p;
vector(2) long unsigned int
streamcluster.cpp:910:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:910:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:909:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:909:20: note: got vectype for stmt: _9 = _8->assign;
vector(2) long int
streamcluster.cpp:909:20: note: got vectype for stmt: *_12 = 1;
vector(4) int
streamcluster.cpp:909:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:909:20: note: not consecutive access *_12 = 1;
streamcluster.cpp:909:20: note: Detected single element interleaving _8->assign step 32
streamcluster.cpp:909:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:909:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:909:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:909:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:914:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:914:3: note: got vectype for stmt: _18 = *_17;
vector(4) int
streamcluster.cpp:914:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:914:3: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _21 = *_20;
vector(2) long int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _22 = centers_47(D)->p;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _25 = _24->weight;
vector(4) float
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _25 = _24->weight;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _22 = centers_47(D)->p;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:917:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:917:22: note: got vectype for stmt: _68 = centers_47(D)->dim;
vector(4) int
streamcluster.cpp:917:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:917:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:917:22: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _28 = centers_47(D)->p;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _30 = _29->coord;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _34 = *_33;
vector(4) float
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _30 = _29->coord;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _34 = *_33;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _28 = centers_47(D)->p;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:917:22: note: === vect_analyze_data_refs ===
streamcluster.cpp:917:22: note: got vectype for stmt: _27 = centers_47(D)->dim;
vector(4) int
streamcluster.cpp:917:22: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:917:22: note: ===vect_slp_analyze_bb===
streamcluster.cpp:917:22: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: pretmp_111 = centers_47(D)->num;
vector(2) long int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:913:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:913:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:913:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:913:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:924:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:924:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at streamcluster.cpp:738
streamcluster.cpp:738:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:738:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:738:16: note: not vectorized: control flow in loop.
streamcluster.cpp:738:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:743
streamcluster.cpp:743:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:743:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:743:20: note: === get_loop_niters ===
streamcluster.cpp:743:20: note: Symbolic number of iterations is (unsigned long) _325
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _228 = *_227;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_227 = _233;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _236 = *_235;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_227 = _238;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:743:20: note: Analyze phi: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: Access function of PHI: {0, +, 1}_9
streamcluster.cpp:743:20: note: step: 1,  init: 0
streamcluster.cpp:743:20: note: Detected induction.
streamcluster.cpp:743:20: note: Analyze phi: .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: === vect_pattern_recog ===
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii.118_225
streamcluster.cpp:743:20: note: def_stmt: ii.118_225 = (long unsigned int) ii_344;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii_344
streamcluster.cpp:743:20: note: def_stmt: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: type of def: induction
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _229
streamcluster.cpp:743:20: note: def_stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_220
streamcluster.cpp:743:20: note: def_stmt: relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:743:20: note: init: phi relevant? ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: init: phi relevant? .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: init: stmt relevant? ii.118_225 = (long unsigned int) ii_344;
streamcluster.cpp:743:20: note: init: stmt relevant? _226 = ii.118_225 * 4;
streamcluster.cpp:743:20: note: init: stmt relevant? _227 = _224 + _226;
streamcluster.cpp:743:20: note: init: stmt relevant? _228 = *_227;
streamcluster.cpp:743:20: note: init: stmt relevant? _229 = (double) _228;
streamcluster.cpp:743:20: note: init: stmt relevant? _232 = _229 * _474;
streamcluster.cpp:743:20: note: init: stmt relevant? _233 = (float) _232;
streamcluster.cpp:743:20: note: init: stmt relevant? *_227 = _233;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_227 = _233;
streamcluster.cpp:743:20: note: init: stmt relevant? _235 = _234 + _226;
streamcluster.cpp:743:20: note: init: stmt relevant? _236 = *_235;
streamcluster.cpp:743:20: note: init: stmt relevant? _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: init: stmt relevant? _238 = _233 + _237;
streamcluster.cpp:743:20: note: init: stmt relevant? *_227 = _238;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_227 = _238;
streamcluster.cpp:743:20: note: init: stmt relevant? ii_239 = ii_344 + 1;
streamcluster.cpp:743:20: note: init: stmt relevant? if (ii_239 >= _326)
streamcluster.cpp:743:20: note: worklist: examine stmt: *_227 = _238;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _238
streamcluster.cpp:743:20: note: def_stmt: _238 = _233 + _237;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _238 = _233 + _237;
streamcluster.cpp:743:20: note: worklist: examine stmt: _238 = _233 + _237;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _233 = (float) _232;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _237
streamcluster.cpp:743:20: note: def_stmt: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: worklist: examine stmt: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_220
streamcluster.cpp:743:20: note: def_stmt: relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _236
streamcluster.cpp:743:20: note: def_stmt: _236 = *_235;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _236 = *_235;
streamcluster.cpp:743:20: note: worklist: examine stmt: _236 = *_235;
streamcluster.cpp:743:20: note: worklist: examine stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _232
streamcluster.cpp:743:20: note: def_stmt: _232 = _229 * _474;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _232 = _229 * _474;
streamcluster.cpp:743:20: note: worklist: examine stmt: _232 = _229 * _474;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _229
streamcluster.cpp:743:20: note: def_stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _229 = (double) _228;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _474
streamcluster.cpp:743:20: note: def_stmt: _474 = 1.0e+0 - _473;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: worklist: examine stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _228
streamcluster.cpp:743:20: note: def_stmt: _228 = *_227;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _228 = *_227;
streamcluster.cpp:743:20: note: worklist: examine stmt: _228 = *_227;
streamcluster.cpp:743:20: note: worklist: examine stmt: *_227 = _233;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _233 = (float) _232;
streamcluster.cpp:743:20: note: already marked relevant/live.
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_227 and *_235
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_227 and *_235
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_235 and *_227
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_235 and *_227
streamcluster.cpp:743:20: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:743:20: note: ==> examining phi: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: ==> examining phi: .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_225 = (long unsigned int) ii_344;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _226 = ii.118_225 * 4;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _227 = _224 + _226;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _228 = *_227;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _229 = (double) _228;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _232 = _229 * _474;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: nunits = 2
streamcluster.cpp:743:20: note: ==> examining statement: _233 = (float) _232;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_227 = _233;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _235 = _234 + _226;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _236 = *_235;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _238 = _233 + _237;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_227 = _238;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: ii_239 = ii_344 + 1;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_239 >= _326)
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: vectorization factor = 4
streamcluster.cpp:743:20: note: === vect_analyze_slp ===
streamcluster.cpp:743:20: note: === vect_make_slp_decision ===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_227 and *_227
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_227
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_227
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_235
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_227
streamcluster.cpp:743:20: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:743:20: note: found equal ranges *_227, *_235 and *_227, *_235
streamcluster.cpp:743:20: note: improved number of alias checks from 2 to 1
streamcluster.cpp:743:20: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: vect_model_store_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Alignment of access forced using peeling.
streamcluster.cpp:743:20: note: Peeling for alignment will be applied.
streamcluster.cpp:743:20: note: Vectorizing an unaligned access.
streamcluster.cpp:743:20: note: === vect_analyze_loop_operations ===
streamcluster.cpp:743:20: note: examining phi: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: examining phi: .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_225 = (long unsigned int) ii_344;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _226 = ii.118_225 * 4;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _227 = _224 + _226;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _228 = *_227;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_227
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_227
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _229 = (double) _228;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _228
streamcluster.cpp:743:20: note: def_stmt: _228 = *_227;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _232 = _229 * _474;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _229
streamcluster.cpp:743:20: note: def_stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _474
streamcluster.cpp:743:20: note: def_stmt: _474 = 1.0e+0 - _473;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _233 = (float) _232;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _232
streamcluster.cpp:743:20: note: def_stmt: _232 = _229 * _474;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_227 = _233;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _235 = _234 + _226;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _236 = *_235;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_235
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_235
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_220
streamcluster.cpp:743:20: note: def_stmt: relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _236
streamcluster.cpp:743:20: note: def_stmt: _236 = *_235;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _238 = _233 + _237;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _237
streamcluster.cpp:743:20: note: def_stmt: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_227 = _238;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _238
streamcluster.cpp:743:20: note: def_stmt: _238 = _233 + _237;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: ii_239 = ii_344 + 1;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_239 >= _326)
streamcluster.cpp:743:20: note: irrelevant.
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
streamcluster.cpp:743:20: note: Cost model analysis: 
  Vector inside of loop cost: 12
  Vector prologue cost: 28
  Vector epilogue cost: 22
  Scalar iteration cost: 9
  Scalar outside cost: 1
  Vector outside cost: 50
  prologue iterations: 2
  epilogue iterations: 2
  Calculated minimum iters for profitability: 7
streamcluster.cpp:743:20: note:   Runtime profitability threshold = 6
streamcluster.cpp:743:20: note:   Static estimate profitability threshold = 6
streamcluster.cpp:743:20: note: epilog loop required
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_344 = PHI <ii_239(55), 0(53)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_356 = PHI <.MEM_307(55), .MEM_354(53)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: loop vectorized
streamcluster.cpp:743:20: note: === vec_transform_loop ===
streamcluster.cpp:743:20: note: Profitability threshold is 6 loop iterations.
streamcluster.cpp:743:20: note: create runtime check for data references *_227 and *_235
streamcluster.cpp:743:20: note: created 1 versioning for alias checks.
streamcluster.cpp:743:20: note: loop versioned for vectorization because of possible aliasing
streamcluster.cpp:743:20: note: created _224
streamcluster.cpp:743:20: note: niters for prolog loop: -((unsigned long) _224 >> 2) & 3

loop at streamcluster.cpp:744: if (ivtmp_395 >= prolog_loop_niters.625_406)
streamcluster.cpp:743:20: note: === vect_update_inits_of_dr ===
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: ii_344 = PHI <ii_239(55), ii_394(72)>
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: .MEM_356 = PHI <.MEM_307(55), .MEM_393(72)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: ------>vectorizing phi: ii_344 = PHI <ii_239(55), ii_394(80)>
streamcluster.cpp:743:20: note: ------>vectorizing phi: .MEM_356 = PHI <.MEM_307(55), .MEM_393(80)>
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii.118_225 = (long unsigned int) ii_344;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _226 = ii.118_225 * 4;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _227 = _224 + _226;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _228 = *_227;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_224
streamcluster.cpp:743:20: note: created vectp.631_319
streamcluster.cpp:743:20: note: add new stmt: vect__228.632_312 = MEM[(float *)vectp.630_317];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _229 = (double) _228;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _228
streamcluster.cpp:743:20: note: def_stmt: _228 = *_227;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _228
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _228
streamcluster.cpp:743:20: note: def_stmt: _228 = *_227;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _228 = *_227;
streamcluster.cpp:743:20: note: add new stmt: vect__229.633_311 = [vec_unpack_lo_expr] vect__228.632_312;
streamcluster.cpp:743:20: note: add new stmt: vect__229.633_310 = [vec_unpack_hi_expr] vect__228.632_312;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _232 = _229 * _474;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _229
streamcluster.cpp:743:20: note: def_stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _474
streamcluster.cpp:743:20: note: def_stmt: _474 = 1.0e+0 - _473;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _229
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _229
streamcluster.cpp:743:20: note: def_stmt: _229 = (double) _228;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _229 = (double) _228;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _474
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _474
streamcluster.cpp:743:20: note: def_stmt: _474 = 1.0e+0 - _473;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  _474 = 1.0e+0 - _473;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__270 = {_474, _474};
streamcluster.cpp:743:20: note: add new stmt: vect__232.634_269 = vect__229.633_311 * vect_cst__270;
streamcluster.cpp:743:20: note: add new stmt: vect__232.634_268 = vect__229.633_310 * vect_cst__270;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _233 = (float) _232;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _232
streamcluster.cpp:743:20: note: def_stmt: _232 = _229 * _474;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _232
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _232
streamcluster.cpp:743:20: note: def_stmt: _232 = _229 * _474;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _232 = _229 * _474;
streamcluster.cpp:743:20: note: add new stmt: vect__233.635_266 = VEC_PACK_TRUNC_EXPR <vect__232.634_269, vect__232.634_268>;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_227 = _233;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _233
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _233 = (float) _232;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_224
streamcluster.cpp:743:20: note: created vectp.637_265
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.636_253] = vect__233.635_266;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _235 = _234 + _226;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _236 = *_235;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_234
streamcluster.cpp:743:20: note: created vectp.639_221
streamcluster.cpp:743:20: note: add new stmt: vect__236.640_166 = MEM[(float *)vectp.638_207];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_220
streamcluster.cpp:743:20: note: def_stmt: relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _236
streamcluster.cpp:743:20: note: def_stmt: _236 = *_235;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: relweight_220
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_220
streamcluster.cpp:743:20: note: def_stmt: relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  relweight_220 = _218 / relweight_219;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__165 = {relweight_220, relweight_220, relweight_220, relweight_220};
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _236
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _236
streamcluster.cpp:743:20: note: def_stmt: _236 = *_235;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _236 = *_235;
streamcluster.cpp:743:20: note: add new stmt: vect__237.641_164 = vect_cst__165 * vect__236.640_166;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _238 = _233 + _237;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _237
streamcluster.cpp:743:20: note: def_stmt: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _233
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _233
streamcluster.cpp:743:20: note: def_stmt: _233 = (float) _232;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _233 = (float) _232;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _237
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _237
streamcluster.cpp:743:20: note: def_stmt: _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _237 = relweight_220 * _236;
streamcluster.cpp:743:20: note: add new stmt: vect__238.642_151 = vect__233.635_266 + vect__237.641_164;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_227 = _238;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _238
streamcluster.cpp:743:20: note: def_stmt: _238 = _233 + _237;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _238
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _238
streamcluster.cpp:743:20: note: def_stmt: _238 = _233 + _237;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _238 = _233 + _237;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_224
streamcluster.cpp:743:20: note: created vectp.644_150
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.643_122] = vect__238.642_151;
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii_239 = ii_344 + 1;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.630_316 = vectp.630_317 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.636_223 = vectp.636_253 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.638_196 = vectp.638_207 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.643_121 = vectp.643_122 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: if (ii_239 >= _326)

loop at streamcluster.cpp:744: if (ivtmp_73 >= bnd.627_324)
streamcluster.cpp:743:20: note: LOOP VECTORIZED


Analyzing loop at streamcluster.cpp:808
streamcluster.cpp:808:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:808:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:808:20: note: === get_loop_niters ===
streamcluster.cpp:808:20: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:808:20: note: bad loop form.

Analyzing loop at streamcluster.cpp:962
streamcluster.cpp:962:54: note: ===== analyze_loop_nest =====
streamcluster.cpp:962:54: note: === vect_analyze_loop_form ===
streamcluster.cpp:962:54: note: not vectorized: multiple nested loops.
streamcluster.cpp:962:54: note: bad loop form.

Analyzing loop at streamcluster.cpp:738
streamcluster.cpp:738:16: note: ===== analyze_loop_nest =====
streamcluster.cpp:738:16: note: === vect_analyze_loop_form ===
streamcluster.cpp:738:16: note: not vectorized: control flow in loop.
streamcluster.cpp:738:16: note: bad loop form.

Analyzing loop at streamcluster.cpp:743
streamcluster.cpp:743:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:743:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:743:20: note: === get_loop_niters ===
streamcluster.cpp:743:20: note: Symbolic number of iterations is (unsigned long) _315
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _171 = *_170;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_170 = _176;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _179 = *_178;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_170 = _181;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:743:20: note: Analyze phi: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: Access function of PHI: {0, +, 1}_6
streamcluster.cpp:743:20: note: step: 1,  init: 0
streamcluster.cpp:743:20: note: Detected induction.
streamcluster.cpp:743:20: note: Analyze phi: .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: === vect_pattern_recog ===
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii.118_168
streamcluster.cpp:743:20: note: def_stmt: ii.118_168 = (long unsigned int) ii_341;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand ii_341
streamcluster.cpp:743:20: note: def_stmt: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: type of def: induction
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _172
streamcluster.cpp:743:20: note: def_stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_163
streamcluster.cpp:743:20: note: def_stmt: relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:743:20: note: init: phi relevant? ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: init: phi relevant? .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: init: stmt relevant? ii.118_168 = (long unsigned int) ii_341;
streamcluster.cpp:743:20: note: init: stmt relevant? _169 = ii.118_168 * 4;
streamcluster.cpp:743:20: note: init: stmt relevant? _170 = _167 + _169;
streamcluster.cpp:743:20: note: init: stmt relevant? _171 = *_170;
streamcluster.cpp:743:20: note: init: stmt relevant? _172 = (double) _171;
streamcluster.cpp:743:20: note: init: stmt relevant? _175 = _172 * _435;
streamcluster.cpp:743:20: note: init: stmt relevant? _176 = (float) _175;
streamcluster.cpp:743:20: note: init: stmt relevant? *_170 = _176;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_170 = _176;
streamcluster.cpp:743:20: note: init: stmt relevant? _178 = _177 + _169;
streamcluster.cpp:743:20: note: init: stmt relevant? _179 = *_178;
streamcluster.cpp:743:20: note: init: stmt relevant? _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: init: stmt relevant? _181 = _176 + _180;
streamcluster.cpp:743:20: note: init: stmt relevant? *_170 = _181;
streamcluster.cpp:743:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:743:20: note: mark relevant 5, live 0: *_170 = _181;
streamcluster.cpp:743:20: note: init: stmt relevant? ii_182 = ii_341 + 1;
streamcluster.cpp:743:20: note: init: stmt relevant? if (ii_182 >= _314)
streamcluster.cpp:743:20: note: worklist: examine stmt: *_170 = _181;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _181
streamcluster.cpp:743:20: note: def_stmt: _181 = _176 + _180;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _181 = _176 + _180;
streamcluster.cpp:743:20: note: worklist: examine stmt: _181 = _176 + _180;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _176 = (float) _175;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _180
streamcluster.cpp:743:20: note: def_stmt: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: worklist: examine stmt: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_163
streamcluster.cpp:743:20: note: def_stmt: relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _179
streamcluster.cpp:743:20: note: def_stmt: _179 = *_178;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _179 = *_178;
streamcluster.cpp:743:20: note: worklist: examine stmt: _179 = *_178;
streamcluster.cpp:743:20: note: worklist: examine stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _175
streamcluster.cpp:743:20: note: def_stmt: _175 = _172 * _435;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _175 = _172 * _435;
streamcluster.cpp:743:20: note: worklist: examine stmt: _175 = _172 * _435;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _172
streamcluster.cpp:743:20: note: def_stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _172 = (double) _171;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _435
streamcluster.cpp:743:20: note: def_stmt: _435 = 1.0e+0 - _434;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: def_stmt is out of loop.
streamcluster.cpp:743:20: note: worklist: examine stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _171
streamcluster.cpp:743:20: note: def_stmt: _171 = *_170;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _171 = *_170;
streamcluster.cpp:743:20: note: worklist: examine stmt: _171 = *_170;
streamcluster.cpp:743:20: note: worklist: examine stmt: *_170 = _176;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: mark relevant 5, live 0: _176 = (float) _175;
streamcluster.cpp:743:20: note: already marked relevant/live.
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_170 and *_178
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_170 and *_178
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: dependence distance == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: versioning for alias required: can't determine dependence between *_178 and *_170
streamcluster.cpp:743:20: note: mark for run-time aliasing test between *_178 and *_170
streamcluster.cpp:743:20: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:743:20: note: ==> examining phi: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: ==> examining phi: .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_168 = (long unsigned int) ii_341;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _169 = ii.118_168 * 4;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _170 = _167 + _169;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _171 = *_170;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _172 = (double) _171;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _175 = _172 * _435;
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: get vectype for scalar type:  double
streamcluster.cpp:743:20: note: vectype: vector(2) double
streamcluster.cpp:743:20: note: nunits = 2
streamcluster.cpp:743:20: note: ==> examining statement: _176 = (float) _175;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_170 = _176;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _178 = _177 + _169;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: _179 = *_178;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: _181 = _176 + _180;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: *_170 = _181;
streamcluster.cpp:743:20: note: get vectype for scalar type:  float
streamcluster.cpp:743:20: note: vectype: vector(4) float
streamcluster.cpp:743:20: note: nunits = 4
streamcluster.cpp:743:20: note: ==> examining statement: ii_182 = ii_341 + 1;
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_182 >= _314)
streamcluster.cpp:743:20: note: skip.
streamcluster.cpp:743:20: note: vectorization factor = 4
streamcluster.cpp:743:20: note: === vect_analyze_slp ===
streamcluster.cpp:743:20: note: === vect_make_slp_decision ===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: dependence distance  = 0.
streamcluster.cpp:743:20: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_170 and *_170
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_170
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_170
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_178
streamcluster.cpp:743:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:743:20: note: can't force alignment of ref: *_170
streamcluster.cpp:743:20: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:743:20: note: found equal ranges *_170, *_178 and *_170, *_178
streamcluster.cpp:743:20: note: improved number of alias checks from 2 to 1
streamcluster.cpp:743:20: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: Unknown misalignment, naturally aligned
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: vect_model_store_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Setting misalignment to -1.
streamcluster.cpp:743:20: note: Alignment of access forced using peeling.
streamcluster.cpp:743:20: note: Peeling for alignment will be applied.
streamcluster.cpp:743:20: note: Vectorizing an unaligned access.
streamcluster.cpp:743:20: note: === vect_analyze_loop_operations ===
streamcluster.cpp:743:20: note: examining phi: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: examining phi: .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: ==> examining statement: ii.118_168 = (long unsigned int) ii_341;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _169 = ii.118_168 * 4;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _170 = _167 + _169;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _171 = *_170;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_170
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_170
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _172 = (double) _171;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _171
streamcluster.cpp:743:20: note: def_stmt: _171 = *_170;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _175 = _172 * _435;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _172
streamcluster.cpp:743:20: note: def_stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _435
streamcluster.cpp:743:20: note: def_stmt: _435 = 1.0e+0 - _434;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _176 = (float) _175;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _175
streamcluster.cpp:743:20: note: def_stmt: _175 = _172 * _435;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_conversion ===
streamcluster.cpp:743:20: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_170 = _176;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _178 = _177 + _169;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: _179 = *_178;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_178
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand *_178
streamcluster.cpp:743:20: note: not ssa-name.
streamcluster.cpp:743:20: note: use not simple.
streamcluster.cpp:743:20: note: vect_model_load_cost: unaligned supported by hardware.
streamcluster.cpp:743:20: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_163
streamcluster.cpp:743:20: note: def_stmt: relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _179
streamcluster.cpp:743:20: note: def_stmt: _179 = *_178;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:743:20: note: ==> examining statement: _181 = _176 + _180;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _180
streamcluster.cpp:743:20: note: def_stmt: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: === vectorizable_operation ===
streamcluster.cpp:743:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: *_170 = _181;
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _181
streamcluster.cpp:743:20: note: def_stmt: _181 = _176 + _180;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_model_store_cost: aligned.
streamcluster.cpp:743:20: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
streamcluster.cpp:743:20: note: ==> examining statement: ii_182 = ii_341 + 1;
streamcluster.cpp:743:20: note: irrelevant.
streamcluster.cpp:743:20: note: ==> examining statement: if (ii_182 >= _314)
streamcluster.cpp:743:20: note: irrelevant.
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
streamcluster.cpp:743:20: note: Cost model analysis: 
  Vector inside of loop cost: 12
  Vector prologue cost: 28
  Vector epilogue cost: 22
  Scalar iteration cost: 9
  Scalar outside cost: 1
  Vector outside cost: 50
  prologue iterations: 2
  epilogue iterations: 2
  Calculated minimum iters for profitability: 7
streamcluster.cpp:743:20: note:   Runtime profitability threshold = 6
streamcluster.cpp:743:20: note:   Static estimate profitability threshold = 6
streamcluster.cpp:743:20: note: epilog loop required
streamcluster.cpp:743:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:743:20: note: Analyze phi: ii_341 = PHI <ii_182(34), 0(32)>
streamcluster.cpp:743:20: note: Analyze phi: .MEM_350 = PHI <.MEM_288(34), .MEM_348(32)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: loop vectorized
streamcluster.cpp:743:20: note: === vec_transform_loop ===
streamcluster.cpp:743:20: note: Profitability threshold is 6 loop iterations.
streamcluster.cpp:743:20: note: create runtime check for data references *_170 and *_178
streamcluster.cpp:743:20: note: created 1 versioning for alias checks.
streamcluster.cpp:743:20: note: loop versioned for vectorization because of possible aliasing
streamcluster.cpp:743:20: note: created _167
streamcluster.cpp:743:20: note: niters for prolog loop: -((unsigned long) _167 >> 2) & 3

loop at streamcluster.cpp:744: if (ivtmp_376 >= prolog_loop_niters.647_387)
streamcluster.cpp:743:20: note: === vect_update_inits_of_dr ===
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: ii_341 = PHI <ii_182(34), ii_375(92)>
streamcluster.cpp:743:20: note: vect_update_ivs_after_vectorizer: phi: .MEM_350 = PHI <.MEM_288(34), .MEM_374(92)>
streamcluster.cpp:743:20: note: reduc or virtual phi. skip.
streamcluster.cpp:743:20: note: ------>vectorizing phi: ii_341 = PHI <ii_182(34), ii_375(100)>
streamcluster.cpp:743:20: note: ------>vectorizing phi: .MEM_350 = PHI <.MEM_288(34), .MEM_374(100)>
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii.118_168 = (long unsigned int) ii_341;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _169 = ii.118_168 * 4;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _170 = _167 + _169;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _171 = *_170;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_167
streamcluster.cpp:743:20: note: created vectp.653_506
streamcluster.cpp:743:20: note: add new stmt: vect__171.654_510 = MEM[(float *)vectp.652_508];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _172 = (double) _171;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _171
streamcluster.cpp:743:20: note: def_stmt: _171 = *_170;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _171
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _171
streamcluster.cpp:743:20: note: def_stmt: _171 = *_170;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _171 = *_170;
streamcluster.cpp:743:20: note: add new stmt: vect__172.655_511 = [vec_unpack_lo_expr] vect__171.654_510;
streamcluster.cpp:743:20: note: add new stmt: vect__172.655_512 = [vec_unpack_hi_expr] vect__171.654_510;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _175 = _172 * _435;
streamcluster.cpp:743:20: note: multiple-types.
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _172
streamcluster.cpp:743:20: note: def_stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _435
streamcluster.cpp:743:20: note: def_stmt: _435 = 1.0e+0 - _434;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _172
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _172
streamcluster.cpp:743:20: note: def_stmt: _172 = (double) _171;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _172 = (double) _171;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _435
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _435
streamcluster.cpp:743:20: note: def_stmt: _435 = 1.0e+0 - _434;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  _435 = 1.0e+0 - _434;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__513 = {_435, _435};
streamcluster.cpp:743:20: note: add new stmt: vect__175.656_514 = vect__172.655_511 * vect_cst__513;
streamcluster.cpp:743:20: note: add new stmt: vect__175.656_515 = vect__172.655_512 * vect_cst__513;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _176 = (float) _175;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _175
streamcluster.cpp:743:20: note: def_stmt: _175 = _172 * _435;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _175
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _175
streamcluster.cpp:743:20: note: def_stmt: _175 = _172 * _435;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _175 = _172 * _435;
streamcluster.cpp:743:20: note: add new stmt: vect__176.657_516 = VEC_PACK_TRUNC_EXPR <vect__175.656_514, vect__175.656_515>;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_170 = _176;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _176
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _176 = (float) _175;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_167
streamcluster.cpp:743:20: note: created vectp.659_517
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.658_519] = vect__176.657_516;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _178 = _177 + _169;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _179 = *_178;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: transform load. ncopies = 1
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_177
streamcluster.cpp:743:20: note: created vectp.661_522
streamcluster.cpp:743:20: note: add new stmt: vect__179.662_526 = MEM[(float *)vectp.660_524];
streamcluster.cpp:743:20: note: ------>vectorizing statement: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_163
streamcluster.cpp:743:20: note: def_stmt: relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _179
streamcluster.cpp:743:20: note: def_stmt: _179 = *_178;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: relweight_163
streamcluster.cpp:743:20: note: vect_is_simple_use: operand relweight_163
streamcluster.cpp:743:20: note: def_stmt: relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: type of def: external
streamcluster.cpp:743:20: note:   def_stmt =  relweight_163 = _161 / relweight_162;
streamcluster.cpp:743:20: note: created new init_stmt: vect_cst__527 = {relweight_163, relweight_163, relweight_163, relweight_163};
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _179
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _179
streamcluster.cpp:743:20: note: def_stmt: _179 = *_178;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _179 = *_178;
streamcluster.cpp:743:20: note: add new stmt: vect__180.663_528 = vect_cst__527 * vect__179.662_526;
streamcluster.cpp:743:20: note: ------>vectorizing statement: _181 = _176 + _180;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _180
streamcluster.cpp:743:20: note: def_stmt: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform binary/unary operation.
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _176
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _176
streamcluster.cpp:743:20: note: def_stmt: _176 = (float) _175;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _176 = (float) _175;
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _180
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _180
streamcluster.cpp:743:20: note: def_stmt: _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _180 = relweight_163 * _179;
streamcluster.cpp:743:20: note: add new stmt: vect__181.664_529 = vect__176.657_516 + vect__180.663_528;
streamcluster.cpp:743:20: note: ------>vectorizing statement: *_170 = _181;
streamcluster.cpp:743:20: note: transform statement.
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _181
streamcluster.cpp:743:20: note: def_stmt: _181 = _176 + _180;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note: transform store. ncopies = 1
streamcluster.cpp:743:20: note: vect_get_vec_def_for_operand: _181
streamcluster.cpp:743:20: note: vect_is_simple_use: operand _181
streamcluster.cpp:743:20: note: def_stmt: _181 = _176 + _180;
streamcluster.cpp:743:20: note: type of def: internal
streamcluster.cpp:743:20: note:   def_stmt =  _181 = _176 + _180;
streamcluster.cpp:743:20: note: create vector_type-pointer variable to type: vector(4) float  vectorizing a pointer ref: *_167
streamcluster.cpp:743:20: note: created vectp.666_530
streamcluster.cpp:743:20: note: add new stmt: MEM[(float *)vectp.665_532] = vect__181.664_529;
streamcluster.cpp:743:20: note: ------>vectorizing statement: ii_182 = ii_341 + 1;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.652_509 = vectp.652_508 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.658_520 = vectp.658_519 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.660_525 = vectp.660_524 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: vectp.665_533 = vectp.665_532 + 16;
streamcluster.cpp:743:20: note: ------>vectorizing statement: if (ii_182 >= _314)

loop at streamcluster.cpp:744: if (ivtmp_536 >= bnd.649_501)
streamcluster.cpp:743:20: note: LOOP VECTORIZED


Analyzing loop at streamcluster.cpp:808
streamcluster.cpp:808:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:808:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:808:20: note: === get_loop_niters ===
streamcluster.cpp:808:20: note: not vectorized: number of iterations cannot be computed.
streamcluster.cpp:808:20: note: bad loop form.

Analyzing loop at streamcluster.cpp:971
streamcluster.cpp:971:21: note: ===== analyze_loop_nest =====
streamcluster.cpp:971:21: note: === vect_analyze_loop_form ===
streamcluster.cpp:971:21: note: === get_loop_niters ===
streamcluster.cpp:971:21: note: Symbolic number of iterations is (unsigned long) _105
streamcluster.cpp:971:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:971:21: note: got vectype for stmt: _47->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:971:21: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:971:21: note: Analyze phi: i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: Access function of PHI: {0, +, 1}_4
streamcluster.cpp:971:21: note: step: 1,  init: 0
streamcluster.cpp:971:21: note: Detected induction.
streamcluster.cpp:971:21: note: Analyze phi: .MEM_338 = PHI <.MEM_111(20), .MEM_110(18)>
streamcluster.cpp:971:21: note: === vect_pattern_recog ===
streamcluster.cpp:971:21: note: vect_is_simple_use: operand _45
streamcluster.cpp:971:21: note: def_stmt: _45 = (long unsigned int) i_283;
streamcluster.cpp:971:21: note: type of def: internal
streamcluster.cpp:971:21: note: vect_is_simple_use: operand i_283
streamcluster.cpp:971:21: note: def_stmt: i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: type of def: induction
streamcluster.cpp:971:21: note: vect_is_simple_use: operand 32
streamcluster.cpp:971:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:971:21: note: not consecutive access _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: using strided accesses
streamcluster.cpp:971:21: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:971:21: note: init: phi relevant? i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: init: phi relevant? .MEM_338 = PHI <.MEM_111(20), .MEM_110(18)>
streamcluster.cpp:971:21: note: init: stmt relevant? _45 = (long unsigned int) i_283;
streamcluster.cpp:971:21: note: init: stmt relevant? _46 = _45 * 32;
streamcluster.cpp:971:21: note: init: stmt relevant? _47 = _44 + _46;
streamcluster.cpp:971:21: note: init: stmt relevant? _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:971:21: note: mark relevant 5, live 0: _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: init: stmt relevant? i_112 = i_283 + 1;
streamcluster.cpp:971:21: note: init: stmt relevant? _43 = (long int) i_112;
streamcluster.cpp:971:21: note: init: stmt relevant? if (numRead.150_42 <= _43)
streamcluster.cpp:971:21: note: worklist: examine stmt: _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:971:21: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:971:21: note: ==> examining phi: i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: ==> examining phi: .MEM_338 = PHI <.MEM_111(20), .MEM_110(18)>
streamcluster.cpp:971:21: note: ==> examining statement: _45 = (long unsigned int) i_283;
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: ==> examining statement: _46 = _45 * 32;
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: ==> examining statement: _47 = _44 + _46;
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: ==> examining statement: _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: get vectype for scalar type:  float
streamcluster.cpp:971:21: note: vectype: vector(4) float
streamcluster.cpp:971:21: note: nunits = 4
streamcluster.cpp:971:21: note: ==> examining statement: i_112 = i_283 + 1;
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: ==> examining statement: _43 = (long int) i_112;
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: ==> examining statement: if (numRead.150_42 <= _43)
streamcluster.cpp:971:21: note: skip.
streamcluster.cpp:971:21: note: vectorization factor = 4
streamcluster.cpp:971:21: note: === vect_analyze_slp ===
streamcluster.cpp:971:21: note: === vect_make_slp_decision ===
streamcluster.cpp:971:21: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:971:21: note: vect_compute_data_ref_alignment:
streamcluster.cpp:971:21: note: can't force alignment of ref: _47->weight
streamcluster.cpp:971:21: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:971:21: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:971:21: note: vect_can_advance_ivs_p:
streamcluster.cpp:971:21: note: Analyze phi: i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: Analyze phi: .MEM_338 = PHI <.MEM_111(20), .MEM_110(18)>
streamcluster.cpp:971:21: note: reduc or virtual phi. skip.
streamcluster.cpp:971:21: note: === vect_analyze_loop_operations ===
streamcluster.cpp:971:21: note: examining phi: i_283 = PHI <i_112(20), 0(18)>
streamcluster.cpp:971:21: note: examining phi: .MEM_338 = PHI <.MEM_111(20), .MEM_110(18)>
streamcluster.cpp:971:21: note: ==> examining statement: _45 = (long unsigned int) i_283;
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: ==> examining statement: _46 = _45 * 32;
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: ==> examining statement: _47 = _44 + _46;
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: ==> examining statement: _47->weight = 1.0e+0;
streamcluster.cpp:971:21: note: vect_is_simple_use: operand 1.0e+0
streamcluster.cpp:971:21: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 1 .
streamcluster.cpp:971:21: note: ==> examining statement: i_112 = i_283 + 1;
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: ==> examining statement: _43 = (long int) i_112;
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: ==> examining statement: if (numRead.150_42 <= _43)
streamcluster.cpp:971:21: note: irrelevant.
streamcluster.cpp:971:21: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
streamcluster.cpp:971:21: note: Cost model analysis: 
  Vector inside of loop cost: 8
  Vector prologue cost: 7
  Vector epilogue cost: 2
  Scalar iteration cost: 1
  Scalar outside cost: 6
  Vector outside cost: 9
  prologue iterations: 0
  epilogue iterations: 2
streamcluster.cpp:971:21: note: cost model: the vector iteration cost = 8 divided by the scalar iteration cost = 1 is greater or equal to the vectorization factor = 4.
streamcluster.cpp:971:21: note: not vectorized: vectorization not profitable.
streamcluster.cpp:971:21: note: not vectorized: vector version will never be profitable.

Analyzing loop at streamcluster.cpp:954
streamcluster.cpp:954:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:954:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:954:20: note: === get_loop_niters ===
streamcluster.cpp:954:20: note: Symbolic number of iterations is (unsigned long) centersize_84(D)
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _30->coord = _31;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _30->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:954:20: note: Analyze phi: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: Access function of PHI: {0, +, 1}_2
streamcluster.cpp:954:20: note: step: 1,  init: 0
streamcluster.cpp:954:20: note: Detected induction.
streamcluster.cpp:954:20: note: Analyze phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: === vect_pattern_recog ===
streamcluster.cpp:954:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:954:20: note: def_stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:954:20: note: def_stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _28
streamcluster.cpp:954:20: note: def_stmt: _28 = (long unsigned int) i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 32
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _30->coord = _31;
streamcluster.cpp:954:20: note: using strided accesses
streamcluster.cpp:954:20: note: not consecutive access _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: using strided accesses
streamcluster.cpp:954:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:954:20: note: init: phi relevant? i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: init: phi relevant? .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: init: stmt relevant? _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: init: stmt relevant? _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: init: stmt relevant? _27 = _26 * 4;
streamcluster.cpp:954:20: note: init: stmt relevant? _28 = (long unsigned int) i_309;
streamcluster.cpp:954:20: note: init: stmt relevant? _29 = _28 * 32;
streamcluster.cpp:954:20: note: init: stmt relevant? _30 = _23 + _29;
streamcluster.cpp:954:20: note: init: stmt relevant? _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: init: stmt relevant? _30->coord = _31;
streamcluster.cpp:954:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _30->coord = _31;
streamcluster.cpp:954:20: note: init: stmt relevant? _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: init: stmt relevant? i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: init: stmt relevant? _24 = (long int) i_102;
streamcluster.cpp:954:20: note: init: stmt relevant? if (_24 >= centersize_84(D))
streamcluster.cpp:954:20: note: worklist: examine stmt: _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: worklist: examine stmt: _30->coord = _31;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:954:20: note: def_stmt: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: worklist: examine stmt: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand centerBlock_86
streamcluster.cpp:954:20: note: def_stmt: centerBlock_86 = malloc (_7);
streamcluster.cpp:954:20: note: type of def: external
streamcluster.cpp:954:20: note: def_stmt is out of loop.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:954:20: note: def_stmt: _27 = _26 * 4;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _27 = _26 * 4;
streamcluster.cpp:954:20: note: worklist: examine stmt: _27 = _26 * 4;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:954:20: note: def_stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: worklist: examine stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:954:20: note: def_stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: mark relevant 5, live 0: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: worklist: examine stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: mark relevant 5, live 0: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: worklist: examine stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_102
streamcluster.cpp:954:20: note: def_stmt: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: mark relevant 5, live 0: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 0
streamcluster.cpp:954:20: note: worklist: examine stmt: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: mark relevant 5, live 0: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: already marked relevant/live.
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:954:20: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:954:20: note: ==> examining phi: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: nunits = 4
streamcluster.cpp:954:20: note: ==> examining phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: ==> examining statement: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: nunits = 4
streamcluster.cpp:954:20: note: ==> examining statement: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: nunits = 4
streamcluster.cpp:954:20: note: ==> examining statement: _27 = _26 * 4;
streamcluster.cpp:954:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: nunits = 2
streamcluster.cpp:954:20: note: ==> examining statement: _28 = (long unsigned int) i_309;
streamcluster.cpp:954:20: note: skip.
streamcluster.cpp:954:20: note: ==> examining statement: _29 = _28 * 32;
streamcluster.cpp:954:20: note: skip.
streamcluster.cpp:954:20: note: ==> examining statement: _30 = _23 + _29;
streamcluster.cpp:954:20: note: skip.
streamcluster.cpp:954:20: note: ==> examining statement: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: get vectype for scalar type:  float *
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: get vectype for scalar type:  float *
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: nunits = 2
streamcluster.cpp:954:20: note: ==> examining statement: _30->coord = _31;
streamcluster.cpp:954:20: note: get vectype for scalar type:  float *
streamcluster.cpp:954:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:954:20: note: nunits = 2
streamcluster.cpp:954:20: note: ==> examining statement: _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: get vectype for scalar type:  float
streamcluster.cpp:954:20: note: vectype: vector(4) float
streamcluster.cpp:954:20: note: nunits = 4
streamcluster.cpp:954:20: note: ==> examining statement: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: get vectype for scalar type:  int
streamcluster.cpp:954:20: note: vectype: vector(4) int
streamcluster.cpp:954:20: note: nunits = 4
streamcluster.cpp:954:20: note: ==> examining statement: _24 = (long int) i_102;
streamcluster.cpp:954:20: note: skip.
streamcluster.cpp:954:20: note: ==> examining statement: if (_24 >= centersize_84(D))
streamcluster.cpp:954:20: note: skip.
streamcluster.cpp:954:20: note: vectorization factor = 4
streamcluster.cpp:954:20: note: === vect_analyze_slp ===
streamcluster.cpp:954:20: note: === vect_make_slp_decision ===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:954:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:954:20: note: can't force alignment of ref: _30->coord
streamcluster.cpp:954:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:954:20: note: can't force alignment of ref: _30->weight
streamcluster.cpp:954:20: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:954:20: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:954:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:954:20: note: Analyze phi: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: Analyze phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: reduc or virtual phi. skip.
streamcluster.cpp:954:20: note: === vect_analyze_loop_operations ===
streamcluster.cpp:954:20: note: examining phi: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: === vectorizable_induction ===
streamcluster.cpp:954:20: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
streamcluster.cpp:954:20: note: examining phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: ==> examining statement: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: === vectorizable_operation ===
streamcluster.cpp:954:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:954:20: note: ==> examining statement: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:954:20: note: def_stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: === vectorizable_conversion ===
streamcluster.cpp:954:20: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:954:20: note: ==> examining statement: _27 = _26 * 4;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:954:20: note: def_stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:954:20: note: === vectorizable_operation ===
streamcluster.cpp:954:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:954:20: note: ==> examining statement: _28 = (long unsigned int) i_309;
streamcluster.cpp:954:20: note: irrelevant.
streamcluster.cpp:954:20: note: ==> examining statement: _29 = _28 * 32;
streamcluster.cpp:954:20: note: irrelevant.
streamcluster.cpp:954:20: note: ==> examining statement: _30 = _23 + _29;
streamcluster.cpp:954:20: note: irrelevant.
streamcluster.cpp:954:20: note: ==> examining statement: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand centerBlock_86
streamcluster.cpp:954:20: note: def_stmt: centerBlock_86 = malloc (_7);
streamcluster.cpp:954:20: note: type of def: external
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:954:20: note: def_stmt: _27 = _26 * 4;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: === vectorizable_operation ===
streamcluster.cpp:954:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:954:20: note: ==> examining statement: _30->coord = _31;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:954:20: note: def_stmt: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 0 .
streamcluster.cpp:954:20: note: ==> examining statement: _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1.0e+0
streamcluster.cpp:954:20: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 1 .
streamcluster.cpp:954:20: note: ==> examining statement: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:954:20: note: === vectorizable_operation ===
streamcluster.cpp:954:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:954:20: note: ==> examining statement: _24 = (long int) i_102;
streamcluster.cpp:954:20: note: irrelevant.
streamcluster.cpp:954:20: note: ==> examining statement: if (_24 >= centersize_84(D))
streamcluster.cpp:954:20: note: irrelevant.
streamcluster.cpp:954:20: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
streamcluster.cpp:954:20: note: Cost model analysis: 
  Vector inside of loop cost: 25
  Vector prologue cost: 13
  Vector epilogue cost: 14
  Scalar iteration cost: 7
  Scalar outside cost: 6
  Vector outside cost: 27
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 12
streamcluster.cpp:954:20: note:   Runtime profitability threshold = 11
streamcluster.cpp:954:20: note:   Static estimate profitability threshold = 26
streamcluster.cpp:954:20: note: epilog loop required
streamcluster.cpp:954:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:954:20: note: Analyze phi: i_309 = PHI <i_102(11), 0(9)>
streamcluster.cpp:954:20: note: Analyze phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(9)>
streamcluster.cpp:954:20: note: reduc or virtual phi. skip.
streamcluster.cpp:954:20: note: loop vectorized
streamcluster.cpp:954:20: note: === vec_transform_loop ===
streamcluster.cpp:954:20: note: Profitability threshold is 11 loop iterations.
split exit edge
streamcluster.cpp:954:20: note: vect_update_ivs_after_vectorizer: phi: i_309 = PHI <i_102(11), 0(102)>
streamcluster.cpp:954:20: note: vect_update_ivs_after_vectorizer: phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(102)>
streamcluster.cpp:954:20: note: reduc or virtual phi. skip.
streamcluster.cpp:954:20: note: ------>vectorizing phi: i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: transform phi.
streamcluster.cpp:954:20: note: transform induction phi.
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__561 = { 0, 1, 2, 3 };
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__562 = { 4, 4, 4, 4 };
streamcluster.cpp:954:20: note: transform induction: created def-use cycle: vect_vec_iv_.671_563 = PHI <vect_vec_iv_.671_564(11), vect_cst__561(109)>
vect_vec_iv_.671_564 = vect_vec_iv_.671_563 + vect_cst__562;
streamcluster.cpp:954:20: note: ------>vectorizing phi: .MEM_336 = PHI <.MEM_101(11), .MEM_99(109)>
streamcluster.cpp:954:20: note: ------>vectorizing phi: vect_vec_iv_.671_563 = PHI <vect_vec_iv_.671_564(11), vect_cst__561(109)>
streamcluster.cpp:954:20: note: ------>vectorizing statement: vect_vec_iv_.671_564 = vect_vec_iv_.671_563 + vect_cst__562;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: transform binary/unary operation.
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: dim_79(D)
streamcluster.cpp:954:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__565 = {dim_79(D), dim_79(D), dim_79(D), dim_79(D)};
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: i_309
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note:   def_stmt =  i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: add new stmt: vect__25.672_566 = vect_cst__565 * vect_vec_iv_.671_563;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: multiple-types.
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:954:20: note: def_stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: _25
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _25
streamcluster.cpp:954:20: note: def_stmt: _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note:   def_stmt =  _25 = dim_79(D) * i_309;
streamcluster.cpp:954:20: note: add new stmt: vect__26.673_567 = [vec_unpack_lo_expr] vect__25.672_566;
streamcluster.cpp:954:20: note: add new stmt: vect__26.673_568 = [vec_unpack_hi_expr] vect__25.672_566;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _27 = _26 * 4;
streamcluster.cpp:954:20: note: multiple-types.
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:954:20: note: def_stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:954:20: note: transform binary/unary operation.
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: _26
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _26
streamcluster.cpp:954:20: note: def_stmt: _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note:   def_stmt =  _26 = (long unsigned int) _25;
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: 4
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__569 = { 4, 4 };
streamcluster.cpp:954:20: note: add new stmt: vect__27.674_570 = vect__26.673_567 * vect_cst__569;
streamcluster.cpp:954:20: note: add new stmt: vect__27.674_571 = vect__26.673_568 * vect_cst__569;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _28 = (long unsigned int) i_309;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _29 = _28 * 32;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _30 = _23 + _29;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: multiple-types.
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand centerBlock_86
streamcluster.cpp:954:20: note: def_stmt: centerBlock_86 = malloc (_7);
streamcluster.cpp:954:20: note: type of def: external
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:954:20: note: def_stmt: _27 = _26 * 4;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: transform binary/unary operation.
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: centerBlock_86
streamcluster.cpp:954:20: note: vect_is_simple_use: operand centerBlock_86
streamcluster.cpp:954:20: note: def_stmt: centerBlock_86 = malloc (_7);
streamcluster.cpp:954:20: note: type of def: external
streamcluster.cpp:954:20: note:   def_stmt =  centerBlock_86 = malloc (_7);
streamcluster.cpp:954:20: note: created new init_stmt: _572 = (long unsigned int) centerBlock_86;
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__573 = {_572, _572};
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: _27
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _27
streamcluster.cpp:954:20: note: def_stmt: _27 = _26 * 4;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note:   def_stmt =  _27 = _26 * 4;
streamcluster.cpp:954:20: note: add new stmt: vect__31.675_574 = vect_cst__573 + vect__27.674_570;
streamcluster.cpp:954:20: note: add new stmt: vect__31.675_575 = vect_cst__573 + vect__27.674_571;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _30->coord = _31;
streamcluster.cpp:954:20: note: multiple-types.
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:954:20: note: def_stmt: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: transform store. ncopies = 2
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: _31
streamcluster.cpp:954:20: note: vect_is_simple_use: operand _31
streamcluster.cpp:954:20: note: def_stmt: _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note:   def_stmt =  _31 = centerBlock_86 + _27;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float * *)ivtmp_576] = _579;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_581 = ivtmp_576 + 32;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float * *)ivtmp_581] = _582;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_584 = ivtmp_581 + 32;
streamcluster.cpp:954:20: note: vect_is_simple_use: operand vect__31.675_574
streamcluster.cpp:954:20: note: def_stmt: vect__31.675_574 = vect_cst__573 + vect__27.674_570;
streamcluster.cpp:954:20: note: type of def: internal
streamcluster.cpp:954:20: note: add new stmt: MEM[(float * *)ivtmp_584] = _585;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_587 = ivtmp_584 + 32;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float * *)ivtmp_587] = _588;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_590 = ivtmp_587 + 32;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _30->weight = 1.0e+0;
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1.0e+0
streamcluster.cpp:954:20: note: transform store. ncopies = 1
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: 1.0e+0
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1.0e+0
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__593 = { 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0 };
streamcluster.cpp:954:20: note: add new stmt: MEM[(float *)ivtmp_591] = _594;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_596 = ivtmp_591 + 32;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float *)ivtmp_596] = _597;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_599 = ivtmp_596 + 32;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float *)ivtmp_599] = _600;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_602 = ivtmp_599 + 32;
streamcluster.cpp:954:20: note: add new stmt: MEM[(float *)ivtmp_602] = _603;
streamcluster.cpp:954:20: note: add new stmt: ivtmp_605 = ivtmp_602 + 32;
streamcluster.cpp:954:20: note: ------>vectorizing statement: i_102 = i_309 + 1;
streamcluster.cpp:954:20: note: transform statement.
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:954:20: note: transform binary/unary operation.
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: i_309
streamcluster.cpp:954:20: note: vect_is_simple_use: operand i_309
streamcluster.cpp:954:20: note: def_stmt: i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: type of def: induction
streamcluster.cpp:954:20: note:   def_stmt =  i_309 = PHI <i_102(11), 0(109)>
streamcluster.cpp:954:20: note: vect_get_vec_def_for_operand: 1
streamcluster.cpp:954:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:954:20: note: created new init_stmt: vect_cst__606 = { 1, 1, 1, 1 };
streamcluster.cpp:954:20: note: add new stmt: vect_i_102.676_607 = vect_vec_iv_.671_563 + vect_cst__606;
streamcluster.cpp:954:20: note: ------>vectorizing statement: _24 = (long int) i_102;
streamcluster.cpp:954:20: note: ------>vectorizing statement: ivtmp_577 = ivtmp_576 + 128;
streamcluster.cpp:954:20: note: ------>vectorizing statement: ivtmp_592 = ivtmp_591 + 128;
streamcluster.cpp:954:20: note: ------>vectorizing statement: if (_24 >= centersize_84(D))

loop at streamcluster.cpp:955: if (ivtmp_609 >= bnd.668_557)
streamcluster.cpp:954:20: note: LOOP VECTORIZED


Analyzing loop at streamcluster.cpp:945
streamcluster.cpp:945:20: note: ===== analyze_loop_nest =====
streamcluster.cpp:945:20: note: === vect_analyze_loop_form ===
streamcluster.cpp:945:20: note: === get_loop_niters ===
streamcluster.cpp:945:20: note: Symbolic number of iterations is (unsigned long) chunksize_80(D)
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: _19->coord = _20;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: === vect_analyze_scalar_cycles ===
streamcluster.cpp:945:20: note: Analyze phi: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: Access function of PHI: {0, +, 1}_1
streamcluster.cpp:945:20: note: step: 1,  init: 0
streamcluster.cpp:945:20: note: Detected induction.
streamcluster.cpp:945:20: note: Analyze phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: === vect_pattern_recog ===
streamcluster.cpp:945:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _15
streamcluster.cpp:945:20: note: def_stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _14
streamcluster.cpp:945:20: note: def_stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _17
streamcluster.cpp:945:20: note: def_stmt: _17 = (long unsigned int) i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 32
streamcluster.cpp:945:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:945:20: note: not consecutive access _19->coord = _20;
streamcluster.cpp:945:20: note: using strided accesses
streamcluster.cpp:945:20: note: === vect_mark_stmts_to_be_vectorized ===
streamcluster.cpp:945:20: note: init: phi relevant? i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: init: phi relevant? .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: init: stmt relevant? _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: init: stmt relevant? _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: init: stmt relevant? _16 = _15 * 4;
streamcluster.cpp:945:20: note: init: stmt relevant? _17 = (long unsigned int) i_136;
streamcluster.cpp:945:20: note: init: stmt relevant? _18 = _17 * 32;
streamcluster.cpp:945:20: note: init: stmt relevant? _19 = _12 + _18;
streamcluster.cpp:945:20: note: init: stmt relevant? _20 = block_83 + _16;
streamcluster.cpp:945:20: note: init: stmt relevant? _19->coord = _20;
streamcluster.cpp:945:20: note: vec_stmt_relevant_p: stmt has vdefs.
streamcluster.cpp:945:20: note: mark relevant 5, live 0: _19->coord = _20;
streamcluster.cpp:945:20: note: init: stmt relevant? i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: init: stmt relevant? _13 = (long int) i_95;
streamcluster.cpp:945:20: note: init: stmt relevant? if (_13 >= chunksize_80(D))
streamcluster.cpp:945:20: note: worklist: examine stmt: _19->coord = _20;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _20
streamcluster.cpp:945:20: note: def_stmt: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: mark relevant 5, live 0: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: worklist: examine stmt: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand block_83
streamcluster.cpp:945:20: note: def_stmt: block_83 = malloc (_4);
streamcluster.cpp:945:20: note: type of def: external
streamcluster.cpp:945:20: note: def_stmt is out of loop.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _16
streamcluster.cpp:945:20: note: def_stmt: _16 = _15 * 4;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: mark relevant 5, live 0: _16 = _15 * 4;
streamcluster.cpp:945:20: note: worklist: examine stmt: _16 = _15 * 4;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _15
streamcluster.cpp:945:20: note: def_stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: mark relevant 5, live 0: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: worklist: examine stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _14
streamcluster.cpp:945:20: note: def_stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: mark relevant 5, live 0: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: worklist: examine stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: mark relevant 5, live 0: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: worklist: examine stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_95
streamcluster.cpp:945:20: note: def_stmt: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: mark relevant 5, live 0: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 0
streamcluster.cpp:945:20: note: worklist: examine stmt: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: mark relevant 5, live 0: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: already marked relevant/live.
streamcluster.cpp:945:20: note: === vect_analyze_data_ref_dependences ===
streamcluster.cpp:945:20: note: === vect_determine_vectorization_factor ===
streamcluster.cpp:945:20: note: ==> examining phi: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: nunits = 4
streamcluster.cpp:945:20: note: ==> examining phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: ==> examining statement: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: nunits = 4
streamcluster.cpp:945:20: note: ==> examining statement: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: nunits = 4
streamcluster.cpp:945:20: note: ==> examining statement: _16 = _15 * 4;
streamcluster.cpp:945:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: get vectype for scalar type:  long unsigned int
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: nunits = 2
streamcluster.cpp:945:20: note: ==> examining statement: _17 = (long unsigned int) i_136;
streamcluster.cpp:945:20: note: skip.
streamcluster.cpp:945:20: note: ==> examining statement: _18 = _17 * 32;
streamcluster.cpp:945:20: note: skip.
streamcluster.cpp:945:20: note: ==> examining statement: _19 = _12 + _18;
streamcluster.cpp:945:20: note: skip.
streamcluster.cpp:945:20: note: ==> examining statement: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: get vectype for scalar type:  float *
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: get vectype for scalar type:  float *
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: nunits = 2
streamcluster.cpp:945:20: note: ==> examining statement: _19->coord = _20;
streamcluster.cpp:945:20: note: get vectype for scalar type:  float *
streamcluster.cpp:945:20: note: vectype: vector(2) long unsigned int
streamcluster.cpp:945:20: note: nunits = 2
streamcluster.cpp:945:20: note: ==> examining statement: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: get vectype for scalar type:  int
streamcluster.cpp:945:20: note: vectype: vector(4) int
streamcluster.cpp:945:20: note: nunits = 4
streamcluster.cpp:945:20: note: ==> examining statement: _13 = (long int) i_95;
streamcluster.cpp:945:20: note: skip.
streamcluster.cpp:945:20: note: ==> examining statement: if (_13 >= chunksize_80(D))
streamcluster.cpp:945:20: note: skip.
streamcluster.cpp:945:20: note: vectorization factor = 4
streamcluster.cpp:945:20: note: === vect_analyze_slp ===
streamcluster.cpp:945:20: note: === vect_make_slp_decision ===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs_alignment ===
streamcluster.cpp:945:20: note: vect_compute_data_ref_alignment:
streamcluster.cpp:945:20: note: can't force alignment of ref: _19->coord
streamcluster.cpp:945:20: note: === vect_prune_runtime_alias_test_list ===
streamcluster.cpp:945:20: note: === vect_enhance_data_refs_alignment ===
streamcluster.cpp:945:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:945:20: note: Analyze phi: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: Analyze phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: reduc or virtual phi. skip.
streamcluster.cpp:945:20: note: === vect_analyze_loop_operations ===
streamcluster.cpp:945:20: note: examining phi: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: === vectorizable_induction ===
streamcluster.cpp:945:20: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
streamcluster.cpp:945:20: note: examining phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: ==> examining statement: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: === vectorizable_operation ===
streamcluster.cpp:945:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:945:20: note: ==> examining statement: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _14
streamcluster.cpp:945:20: note: def_stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: === vectorizable_conversion ===
streamcluster.cpp:945:20: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
streamcluster.cpp:945:20: note: ==> examining statement: _16 = _15 * 4;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _15
streamcluster.cpp:945:20: note: def_stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:945:20: note: === vectorizable_operation ===
streamcluster.cpp:945:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:945:20: note: ==> examining statement: _17 = (long unsigned int) i_136;
streamcluster.cpp:945:20: note: irrelevant.
streamcluster.cpp:945:20: note: ==> examining statement: _18 = _17 * 32;
streamcluster.cpp:945:20: note: irrelevant.
streamcluster.cpp:945:20: note: ==> examining statement: _19 = _12 + _18;
streamcluster.cpp:945:20: note: irrelevant.
streamcluster.cpp:945:20: note: ==> examining statement: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand block_83
streamcluster.cpp:945:20: note: def_stmt: block_83 = malloc (_4);
streamcluster.cpp:945:20: note: type of def: external
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _16
streamcluster.cpp:945:20: note: def_stmt: _16 = _15 * 4;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: === vectorizable_operation ===
streamcluster.cpp:945:20: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
streamcluster.cpp:945:20: note: ==> examining statement: _19->coord = _20;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _20
streamcluster.cpp:945:20: note: def_stmt: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 0 .
streamcluster.cpp:945:20: note: ==> examining statement: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:945:20: note: === vectorizable_operation ===
streamcluster.cpp:945:20: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
streamcluster.cpp:945:20: note: ==> examining statement: _13 = (long int) i_95;
streamcluster.cpp:945:20: note: irrelevant.
streamcluster.cpp:945:20: note: ==> examining statement: if (_13 >= chunksize_80(D))
streamcluster.cpp:945:20: note: irrelevant.
streamcluster.cpp:945:20: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
streamcluster.cpp:945:20: note: Cost model analysis: 
  Vector inside of loop cost: 17
  Vector prologue cost: 12
  Vector epilogue cost: 12
  Scalar iteration cost: 6
  Scalar outside cost: 6
  Vector outside cost: 24
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 6
streamcluster.cpp:945:20: note:   Runtime profitability threshold = 5
streamcluster.cpp:945:20: note:   Static estimate profitability threshold = 11
streamcluster.cpp:945:20: note: epilog loop required
streamcluster.cpp:945:20: note: vect_can_advance_ivs_p:
streamcluster.cpp:945:20: note: Analyze phi: i_136 = PHI <i_95(7), 0(5)>
streamcluster.cpp:945:20: note: Analyze phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(5)>
streamcluster.cpp:945:20: note: reduc or virtual phi. skip.
streamcluster.cpp:945:20: note: loop vectorized
streamcluster.cpp:945:20: note: === vec_transform_loop ===
streamcluster.cpp:945:20: note: Profitability threshold is 5 loop iterations.
split exit edge
streamcluster.cpp:945:20: note: vect_update_ivs_after_vectorizer: phi: i_136 = PHI <i_95(7), 0(111)>
streamcluster.cpp:945:20: note: vect_update_ivs_after_vectorizer: phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(111)>
streamcluster.cpp:945:20: note: reduc or virtual phi. skip.
streamcluster.cpp:945:20: note: ------>vectorizing phi: i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: transform phi.
streamcluster.cpp:945:20: note: transform induction phi.
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__633 = { 0, 1, 2, 3 };
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__634 = { 4, 4, 4, 4 };
streamcluster.cpp:945:20: note: transform induction: created def-use cycle: vect_vec_iv_.681_635 = PHI <vect_vec_iv_.681_636(7), vect_cst__633(118)>
vect_vec_iv_.681_636 = vect_vec_iv_.681_635 + vect_cst__634;
streamcluster.cpp:945:20: note: ------>vectorizing phi: .MEM_290 = PHI <.MEM_94(7), .MEM_92(118)>
streamcluster.cpp:945:20: note: ------>vectorizing phi: vect_vec_iv_.681_635 = PHI <vect_vec_iv_.681_636(7), vect_cst__633(118)>
streamcluster.cpp:945:20: note: ------>vectorizing statement: vect_vec_iv_.681_636 = vect_vec_iv_.681_635 + vect_cst__634;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: transform binary/unary operation.
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: dim_79(D)
streamcluster.cpp:945:20: note: vect_is_simple_use: operand dim_79(D)
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__637 = {dim_79(D), dim_79(D), dim_79(D), dim_79(D)};
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: i_136
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note:   def_stmt =  i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: add new stmt: vect__14.682_638 = vect_cst__637 * vect_vec_iv_.681_635;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: multiple-types.
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _14
streamcluster.cpp:945:20: note: def_stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: transform conversion. ncopies = 1.
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: _14
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _14
streamcluster.cpp:945:20: note: def_stmt: _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note:   def_stmt =  _14 = dim_79(D) * i_136;
streamcluster.cpp:945:20: note: add new stmt: vect__15.683_639 = [vec_unpack_lo_expr] vect__14.682_638;
streamcluster.cpp:945:20: note: add new stmt: vect__15.683_640 = [vec_unpack_hi_expr] vect__14.682_638;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _16 = _15 * 4;
streamcluster.cpp:945:20: note: multiple-types.
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _15
streamcluster.cpp:945:20: note: def_stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:945:20: note: transform binary/unary operation.
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: _15
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _15
streamcluster.cpp:945:20: note: def_stmt: _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note:   def_stmt =  _15 = (long unsigned int) _14;
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: 4
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 4
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__641 = { 4, 4 };
streamcluster.cpp:945:20: note: add new stmt: vect__16.684_642 = vect__15.683_639 * vect_cst__641;
streamcluster.cpp:945:20: note: add new stmt: vect__16.684_643 = vect__15.683_640 * vect_cst__641;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _17 = (long unsigned int) i_136;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _18 = _17 * 32;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _19 = _12 + _18;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: multiple-types.
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand block_83
streamcluster.cpp:945:20: note: def_stmt: block_83 = malloc (_4);
streamcluster.cpp:945:20: note: type of def: external
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _16
streamcluster.cpp:945:20: note: def_stmt: _16 = _15 * 4;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: transform binary/unary operation.
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: block_83
streamcluster.cpp:945:20: note: vect_is_simple_use: operand block_83
streamcluster.cpp:945:20: note: def_stmt: block_83 = malloc (_4);
streamcluster.cpp:945:20: note: type of def: external
streamcluster.cpp:945:20: note:   def_stmt =  block_83 = malloc (_4);
streamcluster.cpp:945:20: note: created new init_stmt: _644 = (long unsigned int) block_83;
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__645 = {_644, _644};
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: _16
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _16
streamcluster.cpp:945:20: note: def_stmt: _16 = _15 * 4;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note:   def_stmt =  _16 = _15 * 4;
streamcluster.cpp:945:20: note: add new stmt: vect__20.685_646 = vect_cst__645 + vect__16.684_642;
streamcluster.cpp:945:20: note: add new stmt: vect__20.685_647 = vect_cst__645 + vect__16.684_643;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _19->coord = _20;
streamcluster.cpp:945:20: note: multiple-types.
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _20
streamcluster.cpp:945:20: note: def_stmt: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: transform store. ncopies = 2
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: _20
streamcluster.cpp:945:20: note: vect_is_simple_use: operand _20
streamcluster.cpp:945:20: note: def_stmt: _20 = block_83 + _16;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note:   def_stmt =  _20 = block_83 + _16;
streamcluster.cpp:945:20: note: add new stmt: MEM[(float * *)ivtmp_648] = _651;
streamcluster.cpp:945:20: note: add new stmt: ivtmp_653 = ivtmp_648 + 32;
streamcluster.cpp:945:20: note: add new stmt: MEM[(float * *)ivtmp_653] = _654;
streamcluster.cpp:945:20: note: add new stmt: ivtmp_656 = ivtmp_653 + 32;
streamcluster.cpp:945:20: note: vect_is_simple_use: operand vect__20.685_646
streamcluster.cpp:945:20: note: def_stmt: vect__20.685_646 = vect_cst__645 + vect__16.684_642;
streamcluster.cpp:945:20: note: type of def: internal
streamcluster.cpp:945:20: note: add new stmt: MEM[(float * *)ivtmp_656] = _657;
streamcluster.cpp:945:20: note: add new stmt: ivtmp_659 = ivtmp_656 + 32;
streamcluster.cpp:945:20: note: add new stmt: MEM[(float * *)ivtmp_659] = _660;
streamcluster.cpp:945:20: note: add new stmt: ivtmp_662 = ivtmp_659 + 32;
streamcluster.cpp:945:20: note: ------>vectorizing statement: i_95 = i_136 + 1;
streamcluster.cpp:945:20: note: transform statement.
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:945:20: note: transform binary/unary operation.
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: i_136
streamcluster.cpp:945:20: note: vect_is_simple_use: operand i_136
streamcluster.cpp:945:20: note: def_stmt: i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: type of def: induction
streamcluster.cpp:945:20: note:   def_stmt =  i_136 = PHI <i_95(7), 0(118)>
streamcluster.cpp:945:20: note: vect_get_vec_def_for_operand: 1
streamcluster.cpp:945:20: note: vect_is_simple_use: operand 1
streamcluster.cpp:945:20: note: created new init_stmt: vect_cst__663 = { 1, 1, 1, 1 };
streamcluster.cpp:945:20: note: add new stmt: vect_i_95.686_664 = vect_vec_iv_.681_635 + vect_cst__663;
streamcluster.cpp:945:20: note: ------>vectorizing statement: _13 = (long int) i_95;
streamcluster.cpp:945:20: note: ------>vectorizing statement: ivtmp_649 = ivtmp_648 + 128;
streamcluster.cpp:945:20: note: ------>vectorizing statement: if (_13 >= chunksize_80(D))

loop at streamcluster.cpp:946: if (ivtmp_666 >= bnd.678_629)
streamcluster.cpp:945:20: note: LOOP VECTORIZED

streamcluster.cpp:926:6: note: vectorized 4 loops in function.
streamcluster.cpp:926:6: note: ===vect_slp_analyze_bb===
streamcluster.cpp:931:66: note: === vect_analyze_data_refs ===
streamcluster.cpp:931:66: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:932:70: note: === vect_analyze_data_refs ===
streamcluster.cpp:932:70: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:933:65: note: === vect_analyze_data_refs ===
streamcluster.cpp:933:65: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:935:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:935:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:935:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.143_9 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:937:7: note: ===vect_slp_analyze_bb===
streamcluster.cpp:943:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:943:27: note: got vectype for stmt: points.dim = dim_79(D);
vector(4) int
streamcluster.cpp:943:27: note: got vectype for stmt: points.num = chunksize_80(D);
vector(2) long int
streamcluster.cpp:943:27: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:943:27: note: not consecutive access points.num = chunksize_80(D);
streamcluster.cpp:943:27: note: not consecutive access points.dim = dim_79(D);
streamcluster.cpp:943:27: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: points.p = _12;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:946:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:946:21: note: got vectype for stmt: MEM[(float * *)ivtmp_648] = _651;
vector(2) long unsigned int
streamcluster.cpp:946:21: note: got vectype for stmt: MEM[(float * *)ivtmp_653] = _654;
vector(2) long unsigned int
streamcluster.cpp:946:21: note: got vectype for stmt: MEM[(float * *)ivtmp_656] = _657;
vector(2) long unsigned int
streamcluster.cpp:946:21: note: got vectype for stmt: MEM[(float * *)ivtmp_659] = _660;
vector(2) long unsigned int
streamcluster.cpp:946:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:946:21: note: not consecutive access MEM[(float * *)ivtmp_648] = _651;
streamcluster.cpp:946:21: note: not consecutive access MEM[(float * *)ivtmp_653] = _654;
streamcluster.cpp:946:21: note: not consecutive access MEM[(float * *)ivtmp_656] = _657;
streamcluster.cpp:946:21: note: not consecutive access MEM[(float * *)ivtmp_659] = _660;
streamcluster.cpp:946:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:946:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:946:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:946:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:946:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:946:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: _953->coord = _954;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: _965->coord = _966;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: _977->coord = _978;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:945:20: note: got vectype for stmt: _619->coord = _620;
vector(2) long unsigned int
streamcluster.cpp:945:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:945:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:951:28: note: === vect_analyze_data_refs ===
streamcluster.cpp:951:28: note: got vectype for stmt: centers.dim = dim_79(D);
vector(4) int
streamcluster.cpp:951:28: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: centers.p = _23;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: centers.num = 0;
vector(2) long int
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access centers.num = 0;
streamcluster.cpp:954:20: note: not consecutive access centers.p = _23;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:956:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float * *)ivtmp_576] = _579;
vector(2) long unsigned int
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float * *)ivtmp_581] = _582;
vector(2) long unsigned int
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float * *)ivtmp_584] = _585;
vector(2) long unsigned int
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float * *)ivtmp_587] = _588;
vector(2) long unsigned int
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float *)ivtmp_591] = _594;
vector(4) float
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float *)ivtmp_596] = _597;
vector(4) float
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float *)ivtmp_599] = _600;
vector(4) float
streamcluster.cpp:956:23: note: got vectype for stmt: MEM[(float *)ivtmp_602] = _603;
vector(4) float
streamcluster.cpp:956:23: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:956:23: note: not consecutive access MEM[(float * *)ivtmp_576] = _579;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float * *)ivtmp_581] = _582;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float * *)ivtmp_584] = _585;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float * *)ivtmp_587] = _588;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float *)ivtmp_591] = _594;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float *)ivtmp_596] = _597;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float *)ivtmp_599] = _600;
streamcluster.cpp:956:23: note: not consecutive access MEM[(float *)ivtmp_602] = _603;
streamcluster.cpp:956:23: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:956:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:956:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:956:23: note: === vect_analyze_data_refs ===
streamcluster.cpp:956:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:956:23: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _836->coord = _837;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _836->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _836->coord = _837;
streamcluster.cpp:954:20: note: not consecutive access _836->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _849->coord = _850;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _849->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _849->coord = _850;
streamcluster.cpp:954:20: note: not consecutive access _849->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _862->coord = _863;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _862->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _862->coord = _863;
streamcluster.cpp:954:20: note: not consecutive access _862->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _875->coord = _876;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _875->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _875->coord = _876;
streamcluster.cpp:954:20: note: not consecutive access _875->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _888->coord = _889;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _888->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _888->coord = _889;
streamcluster.cpp:954:20: note: not consecutive access _888->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _901->coord = _902;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _901->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _901->coord = _902;
streamcluster.cpp:954:20: note: not consecutive access _901->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _914->coord = _915;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _914->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _914->coord = _915;
streamcluster.cpp:954:20: note: not consecutive access _914->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _927->coord = _928;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _927->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _927->coord = _928;
streamcluster.cpp:954:20: note: not consecutive access _927->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _940->coord = _941;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _940->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _940->coord = _941;
streamcluster.cpp:954:20: note: not consecutive access _940->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: got vectype for stmt: _546->coord = _547;
vector(2) long unsigned int
streamcluster.cpp:954:20: note: got vectype for stmt: _546->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:954:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:954:20: note: not consecutive access _546->coord = _547;
streamcluster.cpp:954:20: note: not consecutive access _546->weight = 1.0e+0;
streamcluster.cpp:954:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:954:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:954:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:954:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:962:54: note: === vect_analyze_data_refs ===
streamcluster.cpp:962:54: note: got vectype for stmt: _32 = stream_103(D)->_vptr.PStream;
vector(2) long unsigned int
streamcluster.cpp:962:54: note: got vectype for stmt: _33 = *_32;
vector(2) long unsigned int
streamcluster.cpp:962:54: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:962:54: note: not consecutive access _33 = *_32;
streamcluster.cpp:962:54: note: not consecutive access _32 = stream_103(D)->_vptr.PStream;
streamcluster.cpp:962:54: note: not vectorized: no grouped stores in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.146_35 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:965:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:965:21: note: got vectype for stmt: _36 = stream_103(D)->_vptr.PStream;
vector(2) long unsigned int
streamcluster.cpp:965:21: note: got vectype for stmt: _37 = MEM[(int (*__vtbl_ptr_type) () *)_36 + 8B];
vector(2) long unsigned int
streamcluster.cpp:965:21: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:965:21: note: not consecutive access _37 = MEM[(int (*__vtbl_ptr_type) () *)_36 + 8B];
streamcluster.cpp:965:21: note: not consecutive access _36 = stream_103(D)->_vptr.PStream;
streamcluster.cpp:965:21: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:965:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:965:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:965:24: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.149_41 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:967:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:965:24: note: === vect_analyze_data_refs ===
streamcluster.cpp:965:24: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:965:24: note: ===vect_slp_analyze_bb===
streamcluster.cpp:965:77: note: === vect_analyze_data_refs ===
streamcluster.cpp:965:77: note: got vectype for stmt: _39 = stream_103(D)->_vptr.PStream;
vector(2) long unsigned int
streamcluster.cpp:965:77: note: got vectype for stmt: _40 = MEM[(int (*__vtbl_ptr_type) () *)_39 + 16B];
vector(2) long unsigned int
streamcluster.cpp:965:77: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:965:77: note: not consecutive access _40 = MEM[(int (*__vtbl_ptr_type) () *)_39 + 16B];
streamcluster.cpp:965:77: note: not consecutive access _39 = stream_103(D)->_vptr.PStream;
streamcluster.cpp:965:77: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:965:61: note: === vect_analyze_data_refs ===
streamcluster.cpp:965:61: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:965:61: note: ===vect_slp_analyze_bb===
streamcluster.cpp:971:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:971:21: note: got vectype for stmt: points.num = numRead.150_42;
vector(2) long int
streamcluster.cpp:971:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:971:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:972:11: note: === vect_analyze_data_refs ===
streamcluster.cpp:972:11: note: got vectype for stmt: _44 = points.p;
vector(2) long unsigned int
streamcluster.cpp:972:11: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:972:11: note: ===vect_slp_analyze_bb===
streamcluster.cpp:971:21: note: === vect_analyze_data_refs ===
streamcluster.cpp:971:21: note: got vectype for stmt: _47->weight = 1.0e+0;
vector(4) float
streamcluster.cpp:971:21: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:971:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:971:21: note: ===vect_slp_analyze_bb===
streamcluster.cpp:976:28: note: === vect_analyze_data_refs ===
streamcluster.cpp:976:28: note: got vectype for stmt: switch_membership = _48;
vector(2) long unsigned int
streamcluster.cpp:976:28: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:977:30: note: === vect_analyze_data_refs ===
streamcluster.cpp:977:30: note: got vectype for stmt: is_center = _49;
vector(2) long unsigned int
streamcluster.cpp:977:30: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: got vectype for stmt: center_table = _51;
vector(2) long unsigned int
streamcluster.cpp:802:42: note: got vectype for stmt: nproc.138_187 = nproc;
vector(4) int
streamcluster.cpp:802:42: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:802:42: note: not consecutive access center_table = _51;
streamcluster.cpp:802:42: note: not consecutive access nproc.138_187 = nproc;
streamcluster.cpp:802:42: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:802:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: got vectype for stmt: nproc.140_191 = nproc;
vector(4) int
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_313 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:795:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:795:10: note: got vectype for stmt: _199->points = &points;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _199->kmin = kmin_119(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _199->kmax = kmax_120(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _199->pid = i_342;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _199->kfinal = &kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _199->barrier = &barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _201 = _194->barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _202 = _194->pid;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _203 = _194->kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _204 = _194->kmax;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _205 = _194->kmin;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _206 = _194->points;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:795:10: note: Detected interleaving load _194->kmin and _194->kmax
streamcluster.cpp:795:10: note: Detected interleaving load _194->kfinal and _194->barrier
streamcluster.cpp:795:10: note: Detected interleaving store _199->kmin and _199->kmax
streamcluster.cpp:795:10: note: not consecutive access _206 = _194->points;
streamcluster.cpp:795:10: note: Detected interleaving load of size 2 starting with _205 = _194->kmin;
streamcluster.cpp:795:10: note: Detected interleaving load of size 3 starting with _203 = _194->kfinal;
streamcluster.cpp:795:10: note: not consecutive access _202 = _194->pid;
streamcluster.cpp:795:10: note: not consecutive access _199->points = &points;
streamcluster.cpp:795:10: note: interleaved store with gaps
streamcluster.cpp:795:10: note: not vectorized: complicated access pattern.
streamcluster.cpp:795:10: note: not consecutive access _199->kmax = kmax_120(D);
streamcluster.cpp:795:10: note: not consecutive access _199->kfinal = &kfinal;
streamcluster.cpp:795:10: note: not consecutive access _199->barrier = &barrier;
streamcluster.cpp:795:10: note: not consecutive access _199->pid = i_342;
streamcluster.cpp:795:10: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_195 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: got vectype for stmt: _331 = points.num;
vector(2) long int
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:30: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:30: note: got vectype for stmt: _152 = points.p;
vector(2) long unsigned int
streamcluster.cpp:743:30: note: got vectype for stmt: _315 = points.dim;
vector(4) int
streamcluster.cpp:743:30: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:30: note: not consecutive access _152 = points.p;
streamcluster.cpp:743:30: note: not consecutive access _315 = points.dim;
streamcluster.cpp:743:30: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:30: note: ===vect_slp_analyze_bb===
streamcluster.cpp:740:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:740:3: note: got vectype for stmt: _156 = _155->assign;
vector(2) long int
streamcluster.cpp:740:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:740:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _160 = _159->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _161 = _155->weight;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _160 = _159->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _155->weight step 32
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: got vectype for stmt: _167 = _159->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: got vectype for stmt: _177 = _155->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:746:19: note: not consecutive access _167 = _159->coord;
streamcluster.cpp:746:19: note: Detected single element interleaving _155->coord step 32
streamcluster.cpp:746:19: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _799 = *_798;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_798 = _802;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _805 = *_804;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_798 = _807;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _799 = *_798;
streamcluster.cpp:745:46: note: not consecutive access *_798 = _802;
streamcluster.cpp:745:46: note: not consecutive access *_798 = _807;
streamcluster.cpp:745:46: note: not consecutive access _805 = *_804;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _817 = *_816;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_816 = _820;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _823 = *_822;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_816 = _825;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _817 = *_816;
streamcluster.cpp:745:46: note: not consecutive access *_816 = _820;
streamcluster.cpp:745:46: note: not consecutive access *_816 = _825;
streamcluster.cpp:745:46: note: not consecutive access _823 = *_822;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _410 = *_413;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_413 = _407;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _401 = *_402;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_413 = _399;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _410 = *_413;
streamcluster.cpp:745:46: note: not consecutive access *_413 = _407;
streamcluster.cpp:745:46: note: not consecutive access *_413 = _399;
streamcluster.cpp:745:46: note: not consecutive access _401 = *_402;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__171.654_510 = MEM[(float *)vectp.652_508];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.658_519] = vect__176.657_516;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__179.662_526 = MEM[(float *)vectp.660_524];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.665_532] = vect__181.664_529;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _718 = *_717;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_717 = _721;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _724 = *_723;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_717 = _726;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _718 = *_717;
streamcluster.cpp:743:20: note: not consecutive access *_717 = _721;
streamcluster.cpp:743:20: note: not consecutive access *_717 = _726;
streamcluster.cpp:743:20: note: not consecutive access _724 = *_723;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _734 = *_733;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_733 = _737;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _740 = *_739;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_733 = _742;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _734 = *_733;
streamcluster.cpp:743:20: note: not consecutive access *_733 = _737;
streamcluster.cpp:743:20: note: not consecutive access *_733 = _742;
streamcluster.cpp:743:20: note: not consecutive access _740 = *_739;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _750 = *_749;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_749 = _753;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _756 = *_755;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_749 = _758;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _750 = *_749;
streamcluster.cpp:743:20: note: not consecutive access *_749 = _753;
streamcluster.cpp:743:20: note: not consecutive access *_749 = _758;
streamcluster.cpp:743:20: note: not consecutive access _756 = *_755;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _766 = *_765;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_765 = _769;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _772 = *_771;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_765 = _774;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _766 = *_765;
streamcluster.cpp:743:20: note: not consecutive access *_765 = _769;
streamcluster.cpp:743:20: note: not consecutive access *_765 = _774;
streamcluster.cpp:743:20: note: not consecutive access _772 = *_771;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _782 = *_781;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_781 = _785;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _788 = *_787;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_781 = _790;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _782 = *_781;
streamcluster.cpp:743:20: note: not consecutive access *_781 = _785;
streamcluster.cpp:743:20: note: not consecutive access *_781 = _790;
streamcluster.cpp:743:20: note: not consecutive access _788 = *_787;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:4: note: got vectype for stmt: _34 = *_368;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_368 = _183;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: _230 = *_185;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_368 = _240;
vector(4) float
streamcluster.cpp:743:4: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:4: note: not consecutive access _34 = *_368;
streamcluster.cpp:743:4: note: not consecutive access *_368 = _183;
streamcluster.cpp:743:4: note: not consecutive access *_368 = _240;
streamcluster.cpp:743:4: note: not consecutive access _230 = *_185;
streamcluster.cpp:743:4: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _455 = *_470;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_470 = _452;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _447 = *_448;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_470 = _443;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_440 = _159->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_442 = _155->weight;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access pretmp_440 = _159->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _155->weight step 32
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:748:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:748:42: note: got vectype for stmt: _159->weight = prephitmp_445;
vector(4) float
streamcluster.cpp:748:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:748:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:987:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:987:3: note: got vectype for stmt: _52 = centers.num;
vector(2) long int
streamcluster.cpp:987:3: note: got vectype for stmt: kfinal.151_53 = kfinal;
vector(2) long int
streamcluster.cpp:987:3: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:987:3: note: not consecutive access _52 = centers.num;
streamcluster.cpp:987:3: note: not consecutive access kfinal.151_53 = kfinal;
streamcluster.cpp:987:3: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:987:3: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.152_55 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:990:8: note: ===vect_slp_analyze_bb===
streamcluster.cpp:996:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:996:7: note: got vectype for stmt: is_center.154_58 = is_center;
vector(2) long unsigned int
streamcluster.cpp:996:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:997:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:997:7: note: got vectype for stmt: switch_membership.155_59 = switch_membership;
vector(2) long unsigned int
streamcluster.cpp:997:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:998:7: note: === vect_analyze_data_refs ===
streamcluster.cpp:998:7: note: got vectype for stmt: center_table.156_60 = center_table;
vector(2) long unsigned int
streamcluster.cpp:998:7: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1001:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:1001:19: note: got vectype for stmt: _61 = stream_103(D)->_vptr.PStream;
vector(2) long unsigned int
streamcluster.cpp:1001:19: note: got vectype for stmt: _62 = MEM[(int (*__vtbl_ptr_type) () *)_61 + 16B];
vector(2) long unsigned int
streamcluster.cpp:1001:19: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:1001:19: note: not consecutive access _62 = MEM[(int (*__vtbl_ptr_type) () *)_61 + 16B];
streamcluster.cpp:1001:19: note: not consecutive access _61 = stream_103(D)->_vptr.PStream;
streamcluster.cpp:1001:19: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:1001:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:1001:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1001:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1001:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1007:35: note: === vect_analyze_data_refs ===
streamcluster.cpp:1007:35: note: got vectype for stmt: _63 = centers.num;
vector(2) long int
streamcluster.cpp:1007:35: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1008:27: note: === vect_analyze_data_refs ===
streamcluster.cpp:1008:27: note: got vectype for stmt: switch_membership = _65;
vector(2) long unsigned int
streamcluster.cpp:1008:27: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1009:29: note: === vect_analyze_data_refs ===
streamcluster.cpp:1009:29: note: got vectype for stmt: is_center = _66;
vector(2) long unsigned int
streamcluster.cpp:1009:29: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: got vectype for stmt: center_table = _68;
vector(2) long unsigned int
streamcluster.cpp:802:42: note: got vectype for stmt: nproc.138_244 = nproc;
vector(4) int
streamcluster.cpp:802:42: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:802:42: note: not consecutive access center_table = _68;
streamcluster.cpp:802:42: note: not consecutive access nproc.138_244 = nproc;
streamcluster.cpp:802:42: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:802:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:802:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:802:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: got vectype for stmt: nproc.140_248 = nproc;
vector(4) int
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:803:48: note: ===vect_slp_analyze_bb===
streamcluster.cpp:803:48: note: === vect_analyze_data_refs ===
streamcluster.cpp:803:48: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_335 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:795:10: note: === vect_analyze_data_refs ===
streamcluster.cpp:795:10: note: got vectype for stmt: _256->points = &centers;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _256->kmin = kmin_119(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _256->kmax = kmax_120(D);
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _256->pid = i_345;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _256->kfinal = &kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _256->barrier = &barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _258 = _251->barrier;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _259 = _251->pid;
vector(4) int
streamcluster.cpp:795:10: note: got vectype for stmt: _260 = _251->kfinal;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: got vectype for stmt: _261 = _251->kmax;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _262 = _251->kmin;
vector(2) long int
streamcluster.cpp:795:10: note: got vectype for stmt: _263 = _251->points;
vector(2) long unsigned int
streamcluster.cpp:795:10: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:795:10: note: Detected interleaving load _251->kmin and _251->kmax
streamcluster.cpp:795:10: note: Detected interleaving load _251->kfinal and _251->barrier
streamcluster.cpp:795:10: note: Detected interleaving store _256->kmin and _256->kmax
streamcluster.cpp:795:10: note: not consecutive access _263 = _251->points;
streamcluster.cpp:795:10: note: Detected interleaving load of size 2 starting with _262 = _251->kmin;
streamcluster.cpp:795:10: note: Detected interleaving load of size 3 starting with _260 = _251->kfinal;
streamcluster.cpp:795:10: note: not consecutive access _259 = _251->pid;
streamcluster.cpp:795:10: note: not consecutive access _256->points = &centers;
streamcluster.cpp:795:10: note: interleaved store with gaps
streamcluster.cpp:795:10: note: not vectorized: complicated access pattern.
streamcluster.cpp:795:10: note: not consecutive access _256->kmax = kmax_120(D);
streamcluster.cpp:795:10: note: not consecutive access _256->kfinal = &kfinal;
streamcluster.cpp:795:10: note: not consecutive access _256->barrier = &barrier;
streamcluster.cpp:795:10: note: not consecutive access _256->pid = i_345;
streamcluster.cpp:795:10: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:808:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:808:20: note: got vectype for stmt: nproc.141_252 = nproc;
vector(4) int
streamcluster.cpp:808:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:808:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: got vectype for stmt: _328 = centers.num;
vector(2) long int
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:30: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:30: note: got vectype for stmt: _209 = centers.p;
vector(2) long unsigned int
streamcluster.cpp:743:30: note: got vectype for stmt: _325 = centers.dim;
vector(4) int
streamcluster.cpp:743:30: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:30: note: not consecutive access _209 = centers.p;
streamcluster.cpp:743:30: note: not consecutive access _325 = centers.dim;
streamcluster.cpp:743:30: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:30: note: ===vect_slp_analyze_bb===
streamcluster.cpp:740:3: note: === vect_analyze_data_refs ===
streamcluster.cpp:740:3: note: got vectype for stmt: _213 = _212->assign;
vector(2) long int
streamcluster.cpp:740:3: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:740:3: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _217 = _216->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _218 = _212->weight;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _217 = _216->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _212->weight step 32
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: got vectype for stmt: _224 = _216->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: got vectype for stmt: _234 = _212->coord;
vector(2) long unsigned int
streamcluster.cpp:746:19: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:746:19: note: not consecutive access _224 = _216->coord;
streamcluster.cpp:746:19: note: Detected single element interleaving _212->coord step 32
streamcluster.cpp:746:19: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:746:19: note: === vect_analyze_data_refs ===
streamcluster.cpp:746:19: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:746:19: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _683 = *_682;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_682 = _686;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _689 = *_688;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_682 = _691;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _683 = *_682;
streamcluster.cpp:745:46: note: not consecutive access *_682 = _686;
streamcluster.cpp:745:46: note: not consecutive access *_682 = _691;
streamcluster.cpp:745:46: note: not consecutive access _689 = *_688;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _701 = *_700;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_700 = _704;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _707 = *_706;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_700 = _709;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _701 = *_700;
streamcluster.cpp:745:46: note: not consecutive access *_700 = _704;
streamcluster.cpp:745:46: note: not consecutive access *_700 = _709;
streamcluster.cpp:745:46: note: not consecutive access _707 = *_706;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: got vectype for stmt: _427 = *_428;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_428 = _424;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: _421 = *_422;
vector(4) float
streamcluster.cpp:745:46: note: got vectype for stmt: *_428 = _419;
vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not consecutive access _427 = *_428;
streamcluster.cpp:745:46: note: not consecutive access *_428 = _424;
streamcluster.cpp:745:46: note: not consecutive access *_428 = _419;
streamcluster.cpp:745:46: note: not consecutive access _421 = *_422;
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__228.632_312 = MEM[(float *)vectp.630_317];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.636_253] = vect__233.635_266;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: vect__236.640_166 = MEM[(float *)vectp.638_207];
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: not vectorized: no vectype for stmt: MEM[(float *)vectp.643_122] = vect__238.642_151;
 scalar_type: vector(4) float
streamcluster.cpp:745:46: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:745:46: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:745:46: note: === vect_analyze_data_refs ===
streamcluster.cpp:745:46: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:745:46: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _388 = *_341;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_341 = _624;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _14 = *_663;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_341 = _16;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _388 = *_341;
streamcluster.cpp:743:20: note: not consecutive access *_341 = _624;
streamcluster.cpp:743:20: note: not consecutive access *_341 = _16;
streamcluster.cpp:743:20: note: not consecutive access _14 = *_663;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _13 = *_95;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_95 = _26;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _29 = *_28;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_95 = _31;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _13 = *_95;
streamcluster.cpp:743:20: note: not consecutive access *_95 = _26;
streamcluster.cpp:743:20: note: not consecutive access *_95 = _31;
streamcluster.cpp:743:20: note: not consecutive access _29 = *_28;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _170 = *_169;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_169 = _175;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _179 = *_178;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_169 = _181;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _170 = *_169;
streamcluster.cpp:743:20: note: not consecutive access *_169 = _175;
streamcluster.cpp:743:20: note: not consecutive access *_169 = _181;
streamcluster.cpp:743:20: note: not consecutive access _179 = *_178;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _233 = *_232;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_232 = _237;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _610 = *_239;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_232 = _432;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _233 = *_232;
streamcluster.cpp:743:20: note: not consecutive access *_232 = _237;
streamcluster.cpp:743:20: note: not consecutive access *_232 = _432;
streamcluster.cpp:743:20: note: not consecutive access _610 = *_239;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _306 = *_307;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_307 = _669;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _672 = *_671;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_307 = _674;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access _306 = *_307;
streamcluster.cpp:743:20: note: not consecutive access *_307 = _669;
streamcluster.cpp:743:20: note: not consecutive access *_307 = _674;
streamcluster.cpp:743:20: note: not consecutive access _672 = *_671;
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:4: note: got vectype for stmt: _377 = *_378;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_378 = _365;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: _362 = *_363;
vector(4) float
streamcluster.cpp:743:4: note: got vectype for stmt: *_378 = _360;
vector(4) float
streamcluster.cpp:743:4: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:4: note: not consecutive access _377 = *_378;
streamcluster.cpp:743:4: note: not consecutive access *_378 = _365;
streamcluster.cpp:743:4: note: not consecutive access *_378 = _360;
streamcluster.cpp:743:4: note: not consecutive access _362 = *_363;
streamcluster.cpp:743:4: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:4: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: _467 = *_468;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_468 = _464;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: _461 = *_462;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: *_468 = _459;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:743:20: note: === vect_analyze_data_refs ===
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_479 = _216->weight;
vector(4) float
streamcluster.cpp:743:20: note: got vectype for stmt: pretmp_481 = _212->weight;
vector(4) float
streamcluster.cpp:743:20: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:743:20: note: not consecutive access pretmp_479 = _216->weight;
streamcluster.cpp:743:20: note: Detected single element interleaving _212->weight step 32
streamcluster.cpp:743:20: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:743:20: note: ===vect_slp_analyze_bb===
streamcluster.cpp:748:42: note: === vect_analyze_data_refs ===
streamcluster.cpp:748:42: note: got vectype for stmt: _216->weight = prephitmp_484;
vector(4) float
streamcluster.cpp:748:42: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:748:42: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: === vect_analyze_data_refs ===
streamcluster.cpp:738:16: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:738:16: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1015:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:1015:1: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1015:1: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.158_1 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1036:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:1036:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1036:2: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: _2 = *argv_35(D);
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.159_3 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access stderr.159_3 = stderr;
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not consecutive access _2 = *argv_35(D);
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: no grouped stores in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.160_4 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.161_5 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.162_6 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.163_7 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.164_8 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.165_9 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.166_10 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.167_11 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.168_12 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.169_13 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: got vectype for stmt: stderr.170_14 = stderr;
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/stdio2.h:98:20: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1050:7: note: ===vect_slp_analyze_bb===
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _15 = MEM[(char * *)argv_35(D) + 8B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _16 = MEM[(char * *)argv_35(D) + 16B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _17 = MEM[(char * *)argv_35(D) + 24B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _18 = MEM[(char * *)argv_35(D) + 32B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _19 = MEM[(char * *)argv_35(D) + 40B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _20 = MEM[(char * *)argv_35(D) + 48B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: got vectype for stmt: _21 = MEM[(char * *)argv_35(D) + 56B];
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: got vectype for stmt: _22 = MEM[(char * *)argv_35(D) + 64B];
vector(2) long unsigned int
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:63: note: not vectorized: not enough data-refs in basic block.
/usr/include/stdlib.h:363:23: note: === vect_analyze_data_refs ===
/usr/include/stdlib.h:363:23: note: got vectype for stmt: _23 = MEM[(char * *)argv_35(D) + 72B];
vector(2) long unsigned int
/usr/include/stdlib.h:363:23: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1063:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:1063:9: note: got vectype for stmt: nproc = _55;
vector(4) int
streamcluster.cpp:1063:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1065:2: note: === vect_analyze_data_refs ===
streamcluster.cpp:1065:2: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1065:2: note: ===vect_slp_analyze_bb===
streamcluster.cpp:849:5: note: === vect_analyze_data_refs ===
streamcluster.cpp:849:5: note: got vectype for stmt: MEM[(struct SimStream *)_49].D.48056._vptr.PStream = &MEM[(void *)&_ZTV9SimStream + 16B];
vector(2) long unsigned int
streamcluster.cpp:849:5: note: got vectype for stmt: MEM[(struct SimStream *)_49].n = n_38;
vector(2) long int
streamcluster.cpp:849:5: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:849:5: note: not consecutive access MEM[(struct SimStream *)_49].D.48056._vptr.PStream = &MEM[(void *)&_ZTV9SimStream + 16B];
streamcluster.cpp:849:5: note: not consecutive access MEM[(struct SimStream *)_49].n = n_38;
streamcluster.cpp:849:5: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:849:5: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1068:37: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1068:37: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1081:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:1081:9: note: got vectype for stmt: _24 = stream_26->_vptr.PStream;
vector(2) long unsigned int
streamcluster.cpp:1081:9: note: got vectype for stmt: _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 32B];
vector(2) long unsigned int
streamcluster.cpp:1081:9: note: === vect_analyze_data_ref_accesses ===
streamcluster.cpp:1081:9: note: not consecutive access _25 = MEM[(int (*__vtbl_ptr_type) () *)_24 + 32B];
streamcluster.cpp:1081:9: note: not consecutive access _24 = stream_26->_vptr.PStream;
streamcluster.cpp:1081:9: note: not vectorized: no grouped stores in basic block.
streamcluster.cpp:1081:9: note: === vect_analyze_data_refs ===
streamcluster.cpp:1081:9: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1081:9: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1068:37: note: === vect_analyze_data_refs ===
streamcluster.cpp:1068:37: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1068:37: note: === vect_analyze_data_refs ===
streamcluster.cpp:1068:37: note: not vectorized: not enough data-refs in basic block.
streamcluster.cpp:1068:37: note: ===vect_slp_analyze_bb===
streamcluster.cpp:1088:1: note: === vect_analyze_data_refs ===
streamcluster.cpp:1088:1: note: not vectorized: not enough data-refs in basic block.
